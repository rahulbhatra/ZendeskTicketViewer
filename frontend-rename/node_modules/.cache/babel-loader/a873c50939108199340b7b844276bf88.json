{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/axes/polar_axes.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { map as _map, convertPolarToXY, convertXYToPolar, normalizeAngle, getVizRangeObject, getCosAndSin, getDistance } from \"../core/utils\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport constants from \"./axes_constants\";\nimport xyAxes from \"./xy_axes\";\nimport { tick } from \"./tick\";\nimport { calculateCanvasMargins, measureLabels } from \"./axes_utils\";\nimport { noop as _noop } from \"../../core/utils/common\";\nvar {\n  PI: PI,\n  abs: abs,\n  atan: atan,\n  round: round\n} = Math;\nvar _min = Math.min;\nvar _max = Math.max;\nvar xyAxesLinear = xyAxes.linear;\nvar HALF_PI_ANGLE = 90;\n\nfunction getPolarQuarter(angle) {\n  var quarter;\n  angle = normalizeAngle(angle);\n\n  if (angle >= 315 && angle <= 360 || angle < 45 && angle >= 0) {\n    quarter = 1;\n  } else if (angle >= 45 && angle < 135) {\n    quarter = 2;\n  } else if (angle >= 135 && angle < 225) {\n    quarter = 3;\n  } else if (angle >= 225 && angle < 315) {\n    quarter = 4;\n  }\n\n  return quarter;\n}\n\nvar circularAxes = {\n  _calculateValueMargins(ticks) {\n    var {\n      minVisible: minVisible,\n      maxVisible: maxVisible\n    } = this._getViewportRange();\n\n    if (ticks && ticks.length > 1) {\n      minVisible = minVisible < ticks[0].value ? minVisible : ticks[0].value;\n      maxVisible = minVisible > ticks[ticks.length - 1].value ? maxVisible : ticks[ticks.length - 1].value;\n    }\n\n    return {\n      minValue: minVisible,\n      maxValue: maxVisible\n    };\n  },\n\n  applyMargins() {\n    var margins = this._calculateValueMargins(this._majorTicks);\n\n    var br = this._translator.getBusinessRange();\n\n    br.addRange({\n      minVisible: margins.minValue,\n      maxVisible: margins.maxValue,\n      interval: this._calculateRangeInterval(br.interval)\n    });\n\n    this._translator.updateBusinessRange(br);\n  },\n\n  _getTranslatorOptions: function () {\n    return {\n      isHorizontal: true,\n      conversionValue: true,\n      addSpiderCategory: this._getSpiderCategoryOption(),\n      stick: this._getStick()\n    };\n  },\n  getCenter: function () {\n    return this._center;\n  },\n  getRadius: function () {\n    return this._radius;\n  },\n  getAngles: function () {\n    var options = this._options;\n    return [options.startAngle, options.endAngle];\n  },\n\n  _updateRadius(canvas) {\n    var rad = _min(canvas.width - canvas.left - canvas.right, canvas.height - canvas.top - canvas.bottom) / 2;\n    this._radius = rad < 0 ? 0 : rad;\n  },\n\n  _updateCenter: function (canvas) {\n    this._center = {\n      x: canvas.left + (canvas.width - canvas.right - canvas.left) / 2,\n      y: canvas.top + (canvas.height - canvas.top - canvas.bottom) / 2\n    };\n  },\n  _processCanvas: function (canvas) {\n    this._updateRadius(canvas);\n\n    this._updateCenter(canvas);\n\n    return {\n      left: 0,\n      right: 0,\n      width: this._getScreenDelta()\n    };\n  },\n  _createAxisElement: function () {\n    return this._renderer.circle();\n  },\n  _updateAxisElementPosition: function () {\n    var center = this.getCenter();\n\n    this._axisElement.attr({\n      cx: center.x,\n      cy: center.y,\n      r: this.getRadius()\n    });\n  },\n  _boundaryTicksVisibility: {\n    min: true\n  },\n  _getSpiderCategoryOption: function () {\n    return this._options.firstPointOnStartAngle;\n  },\n\n  _validateOptions(options) {\n    var originValue = options.originValue;\n    var wholeRange = options.wholeRange = {};\n    var period = options.period;\n\n    if (isDefined(originValue)) {\n      originValue = this.validateUnit(originValue);\n    }\n\n    if (period > 0 && options.argumentType === constants.numeric) {\n      originValue = originValue || 0;\n      wholeRange.endValue = originValue + period;\n      this._viewport = getVizRangeObject([originValue, wholeRange.endValue]);\n    }\n\n    if (isDefined(originValue)) {\n      wholeRange.startValue = originValue;\n    }\n  },\n\n  getMargins() {\n    var tickOptions = this._options.tick;\n\n    var tickOuterLength = _max(tickOptions.visible ? tickOptions.length / 2 + tickOptions.shift : 0, 0);\n\n    var radius = this.getRadius();\n    var {\n      x: x,\n      y: y\n    } = this._center;\n\n    var labelBoxes = this._majorTicks.map(t => t.label && t.label.getBBox()).filter(b => b);\n\n    var canvas = extend({}, this._canvas, {\n      left: x - radius,\n      top: y - radius,\n      right: this._canvas.width - (x + radius),\n      bottom: this._canvas.height - (y + radius)\n    });\n    var margins = calculateCanvasMargins(labelBoxes, canvas);\n    Object.keys(margins).forEach(k => margins[k] = margins[k] < tickOuterLength ? tickOuterLength : margins[k]);\n    return margins;\n  },\n\n  _updateLabelsPosition() {\n    measureLabels(this._majorTicks);\n\n    this._adjustLabelsCoord(0, 0, true);\n\n    this._checkBoundedLabelsOverlapping(this._majorTicks, this._majorTicks.map(t => t.labelBBox));\n  },\n\n  _setVisualRange: _noop,\n  applyVisualRangeSetter: _noop,\n  _getStick: function () {\n    return this._options.firstPointOnStartAngle || this._options.type !== constants.discrete;\n  },\n  _getTranslatedCoord: function (value, offset) {\n    return this._translator.translate(value, offset) - HALF_PI_ANGLE;\n  },\n  _getCanvasStartEnd: function () {\n    return {\n      start: 0 - HALF_PI_ANGLE,\n      end: 360 - HALF_PI_ANGLE\n    };\n  },\n  _getStripGraphicAttributes: function (fromAngle, toAngle) {\n    var center = this.getCenter();\n    var angle = this.getAngles()[0];\n    var r = this.getRadius();\n    return {\n      x: center.x,\n      y: center.y,\n      innerRadius: 0,\n      outerRadius: r,\n      startAngle: -toAngle - angle,\n      endAngle: -fromAngle - angle\n    };\n  },\n  _createStrip: function (coords) {\n    return this._renderer.arc(coords.x, coords.y, coords.innerRadius, coords.outerRadius, coords.startAngle, coords.endAngle);\n  },\n  _getStripLabelCoords: function (from, to) {\n    var coords = this._getStripGraphicAttributes(from, to);\n\n    var angle = coords.startAngle + (coords.endAngle - coords.startAngle) / 2;\n    var cosSin = getCosAndSin(angle);\n    var halfRad = this.getRadius() / 2;\n    var center = this.getCenter();\n    var x = round(center.x + halfRad * cosSin.cos);\n    var y = round(center.y - halfRad * cosSin.sin);\n    return {\n      x: x,\n      y: y,\n      align: constants.center\n    };\n  },\n  _getConstantLineGraphicAttributes: function (value) {\n    var center = this.getCenter();\n    var r = this.getRadius();\n    return {\n      points: [center.x, center.y, center.x + r, center.y]\n    };\n  },\n  _createConstantLine: function (value, attr) {\n    return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr);\n  },\n\n  _rotateConstantLine(line, value) {\n    var {\n      x: x,\n      y: y\n    } = this.getCenter();\n    line.rotate(value + this.getAngles()[0], x, y);\n  },\n\n  _getConstantLineLabelsCoords: function (value) {\n    var cosSin = getCosAndSin(-value - this.getAngles()[0]);\n    var halfRad = this.getRadius() / 2;\n    var center = this.getCenter();\n    var x = round(center.x + halfRad * cosSin.cos);\n    var y = round(center.y - halfRad * cosSin.sin);\n    return {\n      x: x,\n      y: y\n    };\n  },\n  _checkAlignmentConstantLineLabels: _noop,\n  _adjustDivisionFactor: function (val) {\n    return 180 * val / (this.getRadius() * PI);\n  },\n  _getScreenDelta: function () {\n    var angles = this.getAngles();\n    return abs(angles[0] - angles[1]);\n  },\n  _getTickMarkPoints: function (coords, length, _ref) {\n    var {\n      shift = 0\n    } = _ref;\n    var center = this.getCenter();\n    var radiusWithTicks = this.getRadius() + length * {\n      inside: -1,\n      center: -.5,\n      outside: 0\n    }[this._options.tickOrientation || \"center\"];\n    return [center.x + radiusWithTicks + shift, center.y, center.x + radiusWithTicks + length + shift, center.y];\n  },\n  _getLabelAdjustedCoord: function (tick, _offset, _maxWidth, checkCanvas) {\n    var labelCoords = tick.labelCoords;\n    var labelY = labelCoords.y;\n    var labelAngle = labelCoords.angle;\n    var cosSin = getCosAndSin(labelAngle);\n    var cos = cosSin.cos;\n    var sin = cosSin.sin;\n    var box = tick.labelBBox;\n    var halfWidth = box.width / 2;\n    var halfHeight = box.height / 2;\n    var indentFromAxis = this._options.label.indentFromAxis || 0;\n    var x = labelCoords.x + indentFromAxis * cos;\n    var y = labelY + (labelY - box.y - halfHeight) + indentFromAxis * sin;\n    var shiftX = 0;\n    var shiftY = 0;\n\n    switch (getPolarQuarter(labelAngle)) {\n      case 1:\n        shiftX = halfWidth;\n        shiftY = halfHeight * sin;\n        break;\n\n      case 2:\n        shiftX = halfWidth * cos;\n        shiftY = halfHeight;\n        break;\n\n      case 3:\n        shiftX = -halfWidth;\n        shiftY = halfHeight * sin;\n        break;\n\n      case 4:\n        shiftX = halfWidth * cos;\n        shiftY = -halfHeight;\n    }\n\n    if (checkCanvas) {\n      var canvas = this._canvas;\n      var boxShiftX = x - labelCoords.x + shiftX;\n      var boxShiftY = y - labelCoords.y + shiftY;\n\n      if (box.x + boxShiftX < canvas.originalLeft) {\n        shiftX -= box.x + boxShiftX - canvas.originalLeft;\n      }\n\n      if (box.x + box.width + boxShiftX > canvas.width - canvas.originalRight) {\n        shiftX -= box.x + box.width + boxShiftX - (canvas.width - canvas.originalRight);\n      }\n\n      if (box.y + boxShiftY < canvas.originalTop) {\n        shiftY -= box.y + boxShiftY - canvas.originalTop;\n      }\n\n      if (box.y + box.height + boxShiftY > canvas.height - canvas.originalBottom) {\n        shiftY -= box.y + box.height + boxShiftY - (canvas.height - canvas.originalBottom);\n      }\n    }\n\n    return {\n      x: x + shiftX,\n      y: y + shiftY\n    };\n  },\n  _getGridLineDrawer: function () {\n    var that = this;\n    return function (tick, gridStyle) {\n      var center = that.getCenter();\n      return that._createPathElement(that._getGridPoints().points, gridStyle).rotate(tick.coords.angle, center.x, center.y);\n    };\n  },\n  _getGridPoints: function () {\n    var r = this.getRadius();\n    var center = this.getCenter();\n    return {\n      points: [center.x, center.y, center.x + r, center.y]\n    };\n  },\n  _getTranslatedValue: function (value, offset) {\n    var startAngle = this.getAngles()[0];\n\n    var angle = this._translator.translate(value, -offset);\n\n    var coords = convertPolarToXY(this.getCenter(), startAngle, angle, this.getRadius());\n    return {\n      x: coords.x,\n      y: coords.y,\n      angle: this.getTranslatedAngle(angle)\n    };\n  },\n  _getAdjustedStripLabelCoords: function (strip) {\n    var box = strip.labelBBox;\n    return {\n      translateY: strip.label.attr(\"y\") - box.y - box.height / 2\n    };\n  },\n  coordsIn: function (x, y) {\n    return convertXYToPolar(this.getCenter(), x, y).r > this.getRadius();\n  },\n  _rotateTick: function (element, coords) {\n    var center = this.getCenter();\n    element.rotate(coords.angle, center.x, center.y);\n  },\n  _validateOverlappingMode: function (mode) {\n    return constants.validateOverlappingMode(mode);\n  },\n  _validateDisplayMode: function () {\n    return \"standard\";\n  },\n  _getStep: function (boxes) {\n    var radius = this.getRadius() + (this._options.label.indentFromAxis || 0);\n    var maxLabelBox = boxes.reduce(function (prevValue, box) {\n      var curValue = prevValue;\n\n      if (prevValue.width < box.width) {\n        curValue.width = box.width;\n      }\n\n      if (prevValue.height < box.height) {\n        curValue.height = box.height;\n      }\n\n      return curValue;\n    }, {\n      width: 0,\n      height: 0\n    });\n    var angle1 = abs(2 * atan(maxLabelBox.height / (2 * radius - maxLabelBox.width)) * 180 / PI);\n    var angle2 = abs(2 * atan(maxLabelBox.width / (2 * radius - maxLabelBox.height)) * 180 / PI);\n    return constants.getTicksCountInRange(this._majorTicks, \"angle\", _max(angle1, angle2));\n  },\n  _checkBoundedLabelsOverlapping: function (majorTicks, boxes, mode) {\n    var labelOpt = this._options.label;\n    mode = mode || this._validateOverlappingMode(labelOpt.overlappingBehavior);\n\n    if (\"hide\" !== mode) {\n      return;\n    }\n\n    var lastVisibleLabelIndex = majorTicks.reduce((lastVisibleLabelIndex, tick, index) => tick.label ? index : lastVisibleLabelIndex, null);\n\n    if (!lastVisibleLabelIndex) {\n      return;\n    }\n\n    if (constants.areLabelsOverlap(boxes[0], boxes[lastVisibleLabelIndex], labelOpt.minSpacing, constants.center)) {\n      \"first\" === labelOpt.hideFirstOrLast ? majorTicks[0].removeLabel() : majorTicks[lastVisibleLabelIndex].removeLabel();\n    }\n  },\n  shift: function (margins) {\n    this._axisGroup.attr({\n      translateX: margins.right,\n      translateY: margins.bottom\n    });\n\n    this._axisElementsGroup.attr({\n      translateX: margins.right,\n      translateY: margins.bottom\n    });\n  },\n\n  getTranslatedAngle(angle) {\n    var startAngle = this.getAngles()[0];\n    return angle + startAngle - HALF_PI_ANGLE;\n  }\n\n};\nexport var circular = circularAxes;\nexport var circularSpider = extend({}, circularAxes, {\n  _createAxisElement: function () {\n    return this._renderer.path([], \"area\");\n  },\n  _updateAxisElementPosition: function () {\n    this._axisElement.attr({\n      points: _map(this.getSpiderTicks(), function (tick) {\n        return {\n          x: tick.coords.x,\n          y: tick.coords.y\n        };\n      })\n    });\n  },\n  _getStick: function () {\n    return true;\n  },\n  _getSpiderCategoryOption: function () {\n    return true;\n  },\n  getSpiderTicks: function () {\n    var ticks = this.getFullTicks();\n    this._spiderTicks = ticks.map(tick(this, this.renderer, {}, {}, this._getSkippedCategory(ticks), true));\n\n    this._spiderTicks.forEach(function (tick) {\n      tick.initCoords();\n    });\n\n    return this._spiderTicks;\n  },\n  _getStripGraphicAttributes: function (fromAngle, toAngle) {\n    var center = this.getCenter();\n    var spiderTicks = this.getSpiderTicks();\n    var firstTick;\n    var lastTick;\n    var nextTick;\n    var tick;\n    var points = [];\n    var i = 0;\n    var len = spiderTicks.length;\n\n    while (i < len) {\n      tick = spiderTicks[i].coords;\n\n      if (tick.angle >= fromAngle && tick.angle <= toAngle) {\n        if (!firstTick) {\n          firstTick = (spiderTicks[i - 1] || spiderTicks[spiderTicks.length - 1]).coords;\n          points.push((tick.x + firstTick.x) / 2, (tick.y + firstTick.y) / 2);\n        }\n\n        points.push(tick.x, tick.y);\n        nextTick = (spiderTicks[i + 1] || spiderTicks[0]).coords;\n        lastTick = {\n          x: (tick.x + nextTick.x) / 2,\n          y: (tick.y + nextTick.y) / 2\n        };\n      }\n\n      i++;\n    }\n\n    points.push(lastTick.x, lastTick.y);\n    points.push(center.x, center.y);\n    return {\n      points: points\n    };\n  },\n  _createStrip: function (_ref2) {\n    var {\n      points: points\n    } = _ref2;\n    return this._renderer.path(points, \"area\");\n  },\n  _getTranslatedCoord: function (value, offset) {\n    return this._translator.translate(value, offset) - HALF_PI_ANGLE;\n  },\n  _setTickOffset: function () {\n    this._tickOffset = false;\n  }\n});\nexport var linear = {\n  _resetMargins() {\n    this._reinitTranslator(this._getViewportRange());\n  },\n\n  _getStick: xyAxesLinear._getStick,\n  _getSpiderCategoryOption: _noop,\n  _getTranslatorOptions: function () {\n    return {\n      isHorizontal: true,\n      stick: this._getStick()\n    };\n  },\n  getRadius: circularAxes.getRadius,\n  getCenter: circularAxes.getCenter,\n  getAngles: circularAxes.getAngles,\n  _updateRadius: circularAxes._updateRadius,\n  _updateCenter: circularAxes._updateCenter,\n\n  _processCanvas(canvas) {\n    this._updateRadius(canvas);\n\n    this._updateCenter(canvas);\n\n    return {\n      left: 0,\n      right: 0,\n      startPadding: canvas.startPadding,\n      endPadding: canvas.endPadding,\n      width: this.getRadius()\n    };\n  },\n\n  _createAxisElement: xyAxesLinear._createAxisElement,\n  _updateAxisElementPosition: function () {\n    var centerCoord = this.getCenter();\n\n    this._axisElement.attr({\n      points: [centerCoord.x, centerCoord.y, centerCoord.x + this.getRadius(), centerCoord.y]\n    }).rotate(this.getAngles()[0] - HALF_PI_ANGLE, centerCoord.x, centerCoord.y);\n  },\n  _getScreenDelta: function () {\n    return this.getRadius();\n  },\n  _getTickMarkPoints: function (coords, length) {\n    return [coords.x - length / 2, coords.y, coords.x + length / 2, coords.y];\n  },\n  _getLabelAdjustedCoord: function (tick) {\n    var labelCoords = tick.labelCoords;\n    var labelY = labelCoords.y;\n    var cosSin = getCosAndSin(labelCoords.angle);\n    var indentFromAxis = this._options.label.indentFromAxis || 0;\n    var box = tick.labelBBox;\n    var x = labelCoords.x - abs(indentFromAxis * cosSin.sin) + abs(box.width / 2 * cosSin.cos) - box.width / 2;\n    var y = labelY + (labelY - box.y) - abs(box.height / 2 * cosSin.sin) + abs(indentFromAxis * cosSin.cos);\n    return {\n      x: x,\n      y: y\n    };\n  },\n  _getGridLineDrawer: function () {\n    var that = this;\n    return function (tick, gridStyle) {\n      var grid = that._getGridPoints(tick.coords);\n\n      return that._renderer.circle(grid.cx, grid.cy, grid.r).attr(gridStyle).sharp();\n    };\n  },\n  _getGridPoints: function (coords) {\n    var pos = this.getCenter();\n    var radius = getDistance(pos.x, pos.y, coords.x, coords.y);\n\n    if (radius > this.getRadius()) {\n      return {\n        cx: null,\n        cy: null,\n        r: null\n      };\n    }\n\n    return {\n      cx: pos.x,\n      cy: pos.y,\n      r: radius\n    };\n  },\n  _getTranslatedValue: function (value, offset) {\n    var startAngle = this.getAngles()[0];\n    var xy = convertPolarToXY(this.getCenter(), startAngle, 0, this._translator.translate(value, offset));\n    return {\n      x: xy.x,\n      y: xy.y,\n      angle: startAngle - HALF_PI_ANGLE\n    };\n  },\n  _getTranslatedCoord: function (value, offset) {\n    return this._translator.translate(value, offset);\n  },\n\n  _getCanvasStartEnd() {\n    var invert = this.getTranslator().getBusinessRange().invert;\n    var coords = [0, this.getRadius()];\n    invert && coords.reverse();\n    return {\n      start: coords[0],\n      end: coords[1]\n    };\n  },\n\n  _getStripGraphicAttributes: function (fromPoint, toPoint) {\n    var center = this.getCenter();\n    return {\n      x: center.x,\n      y: center.y,\n      innerRadius: fromPoint,\n      outerRadius: toPoint\n    };\n  },\n  _createStrip: function (attrs) {\n    return this._renderer.arc(attrs.x, attrs.y, attrs.innerRadius, attrs.outerRadius, 0, 360);\n  },\n  _getAdjustedStripLabelCoords: circularAxes._getAdjustedStripLabelCoords,\n  _getStripLabelCoords: function (from, to) {\n    var labelPos = from + (to - from) / 2;\n    var center = this.getCenter();\n    var y = round(center.y - labelPos);\n    return {\n      x: center.x,\n      y: y,\n      align: constants.center\n    };\n  },\n  _getConstantLineGraphicAttributes: function (value) {\n    var center = this.getCenter();\n    return {\n      cx: center.x,\n      cy: center.y,\n      r: value\n    };\n  },\n  _createConstantLine: function (value, attr) {\n    var attrs = this._getConstantLineGraphicAttributes(value);\n\n    return this._renderer.circle(attrs.cx, attrs.cy, attrs.r).attr(attr).sharp();\n  },\n  _getConstantLineLabelsCoords: function (value) {\n    var center = this.getCenter();\n    var y = round(center.y - value);\n    return {\n      x: center.x,\n      y: y\n    };\n  },\n  _checkAlignmentConstantLineLabels: _noop,\n  _rotateTick: function (element, coords, isGridLine) {\n    !isGridLine && element.rotate(coords.angle + HALF_PI_ANGLE, coords.x, coords.y);\n  },\n  _validateOverlappingMode: circularAxes._validateOverlappingMode,\n  _validateDisplayMode: circularAxes._validateDisplayMode,\n  _getStep: function (boxes) {\n    var quarter = getPolarQuarter(this.getAngles()[0]);\n    var spacing = this._options.label.minSpacing;\n    var func = 2 === quarter || 4 === quarter ? function (box) {\n      return box.width + spacing;\n    } : function (box) {\n      return box.height;\n    };\n    var maxLabelLength = boxes.reduce((prevValue, box) => _max(prevValue, func(box)), 0);\n    return constants.getTicksCountInRange(this._majorTicks, 2 === quarter || 4 === quarter ? \"x\" : \"y\", maxLabelLength);\n  }\n};\nexport var linearSpider = extend({}, linear, {\n  _createPathElement: function (points, attr) {\n    return this._renderer.path(points, \"area\").attr(attr).sharp();\n  },\n  setSpiderTicks: function (ticks) {\n    this._spiderTicks = ticks;\n  },\n  _getGridLineDrawer: function () {\n    var that = this;\n    return function (tick, gridStyle) {\n      return that._createPathElement(that._getGridPoints(tick.coords).points, gridStyle);\n    };\n  },\n  _getGridPoints: function (coords) {\n    var pos = this.getCenter();\n    var radius = getDistance(pos.x, pos.y, coords.x, coords.y);\n    return this._getGridPointsByRadius(radius);\n  },\n  _getGridPointsByRadius: function (radius) {\n    var pos = this.getCenter();\n\n    if (radius > this.getRadius()) {\n      return {\n        points: null\n      };\n    }\n\n    return {\n      points: _map(this._spiderTicks, function (tick) {\n        var cosSin = getCosAndSin(tick.coords.angle);\n        return {\n          x: round(pos.x + radius * cosSin.cos),\n          y: round(pos.y + radius * cosSin.sin)\n        };\n      })\n    };\n  },\n  _getStripGraphicAttributes: function (fromPoint, toPoint) {\n    var innerPoints = this._getGridPointsByRadius(toPoint).points;\n\n    var outerPoints = this._getGridPointsByRadius(fromPoint).points;\n\n    return {\n      points: [outerPoints, innerPoints.reverse()]\n    };\n  },\n  _createStrip: circularSpider._createStrip,\n  _getConstantLineGraphicAttributes: function (value) {\n    return this._getGridPointsByRadius(value);\n  },\n  _createConstantLine: function (value, attr) {\n    return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr);\n  }\n});","map":{"version":3,"sources":["/Users/rahulsharma/node_modules/devextreme/esm/viz/axes/polar_axes.js"],"names":["map","_map","convertPolarToXY","convertXYToPolar","normalizeAngle","getVizRangeObject","getCosAndSin","getDistance","isDefined","extend","constants","xyAxes","tick","calculateCanvasMargins","measureLabels","noop","_noop","PI","abs","atan","round","Math","_min","min","_max","max","xyAxesLinear","linear","HALF_PI_ANGLE","getPolarQuarter","angle","quarter","circularAxes","_calculateValueMargins","ticks","minVisible","maxVisible","_getViewportRange","length","value","minValue","maxValue","applyMargins","margins","_majorTicks","br","_translator","getBusinessRange","addRange","interval","_calculateRangeInterval","updateBusinessRange","_getTranslatorOptions","isHorizontal","conversionValue","addSpiderCategory","_getSpiderCategoryOption","stick","_getStick","getCenter","_center","getRadius","_radius","getAngles","options","_options","startAngle","endAngle","_updateRadius","canvas","rad","width","left","right","height","top","bottom","_updateCenter","x","y","_processCanvas","_getScreenDelta","_createAxisElement","_renderer","circle","_updateAxisElementPosition","center","_axisElement","attr","cx","cy","r","_boundaryTicksVisibility","firstPointOnStartAngle","_validateOptions","originValue","wholeRange","period","validateUnit","argumentType","numeric","endValue","_viewport","startValue","getMargins","tickOptions","tickOuterLength","visible","shift","radius","labelBoxes","t","label","getBBox","filter","b","_canvas","Object","keys","forEach","k","_updateLabelsPosition","_adjustLabelsCoord","_checkBoundedLabelsOverlapping","labelBBox","_setVisualRange","applyVisualRangeSetter","type","discrete","_getTranslatedCoord","offset","translate","_getCanvasStartEnd","start","end","_getStripGraphicAttributes","fromAngle","toAngle","innerRadius","outerRadius","_createStrip","coords","arc","_getStripLabelCoords","from","to","cosSin","halfRad","cos","sin","align","_getConstantLineGraphicAttributes","points","_createConstantLine","_createPathElement","_rotateConstantLine","line","rotate","_getConstantLineLabelsCoords","_checkAlignmentConstantLineLabels","_adjustDivisionFactor","val","angles","_getTickMarkPoints","_ref","radiusWithTicks","inside","outside","tickOrientation","_getLabelAdjustedCoord","_offset","_maxWidth","checkCanvas","labelCoords","labelY","labelAngle","box","halfWidth","halfHeight","indentFromAxis","shiftX","shiftY","boxShiftX","boxShiftY","originalLeft","originalRight","originalTop","originalBottom","_getGridLineDrawer","that","gridStyle","_getGridPoints","_getTranslatedValue","getTranslatedAngle","_getAdjustedStripLabelCoords","strip","translateY","coordsIn","_rotateTick","element","_validateOverlappingMode","mode","validateOverlappingMode","_validateDisplayMode","_getStep","boxes","maxLabelBox","reduce","prevValue","curValue","angle1","angle2","getTicksCountInRange","majorTicks","labelOpt","overlappingBehavior","lastVisibleLabelIndex","index","areLabelsOverlap","minSpacing","hideFirstOrLast","removeLabel","_axisGroup","translateX","_axisElementsGroup","circular","circularSpider","path","getSpiderTicks","getFullTicks","_spiderTicks","renderer","_getSkippedCategory","initCoords","spiderTicks","firstTick","lastTick","nextTick","i","len","push","_ref2","_setTickOffset","_tickOffset","_resetMargins","_reinitTranslator","startPadding","endPadding","centerCoord","grid","sharp","pos","xy","invert","getTranslator","reverse","fromPoint","toPoint","attrs","labelPos","isGridLine","spacing","func","maxLabelLength","linearSpider","setSpiderTicks","_getGridPointsByRadius","innerPoints","outerPoints"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/axes/polar_axes.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    map as _map,\r\n    convertPolarToXY,\r\n    convertXYToPolar,\r\n    normalizeAngle,\r\n    getVizRangeObject,\r\n    getCosAndSin,\r\n    getDistance\r\n} from \"../core/utils\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport constants from \"./axes_constants\";\r\nimport xyAxes from \"./xy_axes\";\r\nimport {\r\n    tick\r\n} from \"./tick\";\r\nimport {\r\n    calculateCanvasMargins,\r\n    measureLabels\r\n} from \"./axes_utils\";\r\nimport {\r\n    noop as _noop\r\n} from \"../../core/utils/common\";\r\nvar {\r\n    PI: PI,\r\n    abs: abs,\r\n    atan: atan,\r\n    round: round\r\n} = Math;\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\nvar xyAxesLinear = xyAxes.linear;\r\nvar HALF_PI_ANGLE = 90;\r\n\r\nfunction getPolarQuarter(angle) {\r\n    var quarter;\r\n    angle = normalizeAngle(angle);\r\n    if (angle >= 315 && angle <= 360 || angle < 45 && angle >= 0) {\r\n        quarter = 1\r\n    } else if (angle >= 45 && angle < 135) {\r\n        quarter = 2\r\n    } else if (angle >= 135 && angle < 225) {\r\n        quarter = 3\r\n    } else if (angle >= 225 && angle < 315) {\r\n        quarter = 4\r\n    }\r\n    return quarter\r\n}\r\nvar circularAxes = {\r\n    _calculateValueMargins(ticks) {\r\n        var {\r\n            minVisible: minVisible,\r\n            maxVisible: maxVisible\r\n        } = this._getViewportRange();\r\n        if (ticks && ticks.length > 1) {\r\n            minVisible = minVisible < ticks[0].value ? minVisible : ticks[0].value;\r\n            maxVisible = minVisible > ticks[ticks.length - 1].value ? maxVisible : ticks[ticks.length - 1].value\r\n        }\r\n        return {\r\n            minValue: minVisible,\r\n            maxValue: maxVisible\r\n        }\r\n    },\r\n    applyMargins() {\r\n        var margins = this._calculateValueMargins(this._majorTicks);\r\n        var br = this._translator.getBusinessRange();\r\n        br.addRange({\r\n            minVisible: margins.minValue,\r\n            maxVisible: margins.maxValue,\r\n            interval: this._calculateRangeInterval(br.interval)\r\n        });\r\n        this._translator.updateBusinessRange(br)\r\n    },\r\n    _getTranslatorOptions: function() {\r\n        return {\r\n            isHorizontal: true,\r\n            conversionValue: true,\r\n            addSpiderCategory: this._getSpiderCategoryOption(),\r\n            stick: this._getStick()\r\n        }\r\n    },\r\n    getCenter: function() {\r\n        return this._center\r\n    },\r\n    getRadius: function() {\r\n        return this._radius\r\n    },\r\n    getAngles: function() {\r\n        var options = this._options;\r\n        return [options.startAngle, options.endAngle]\r\n    },\r\n    _updateRadius(canvas) {\r\n        var rad = _min(canvas.width - canvas.left - canvas.right, canvas.height - canvas.top - canvas.bottom) / 2;\r\n        this._radius = rad < 0 ? 0 : rad\r\n    },\r\n    _updateCenter: function(canvas) {\r\n        this._center = {\r\n            x: canvas.left + (canvas.width - canvas.right - canvas.left) / 2,\r\n            y: canvas.top + (canvas.height - canvas.top - canvas.bottom) / 2\r\n        }\r\n    },\r\n    _processCanvas: function(canvas) {\r\n        this._updateRadius(canvas);\r\n        this._updateCenter(canvas);\r\n        return {\r\n            left: 0,\r\n            right: 0,\r\n            width: this._getScreenDelta()\r\n        }\r\n    },\r\n    _createAxisElement: function() {\r\n        return this._renderer.circle()\r\n    },\r\n    _updateAxisElementPosition: function() {\r\n        var center = this.getCenter();\r\n        this._axisElement.attr({\r\n            cx: center.x,\r\n            cy: center.y,\r\n            r: this.getRadius()\r\n        })\r\n    },\r\n    _boundaryTicksVisibility: {\r\n        min: true\r\n    },\r\n    _getSpiderCategoryOption: function() {\r\n        return this._options.firstPointOnStartAngle\r\n    },\r\n    _validateOptions(options) {\r\n        var originValue = options.originValue;\r\n        var wholeRange = options.wholeRange = {};\r\n        var period = options.period;\r\n        if (isDefined(originValue)) {\r\n            originValue = this.validateUnit(originValue)\r\n        }\r\n        if (period > 0 && options.argumentType === constants.numeric) {\r\n            originValue = originValue || 0;\r\n            wholeRange.endValue = originValue + period;\r\n            this._viewport = getVizRangeObject([originValue, wholeRange.endValue])\r\n        }\r\n        if (isDefined(originValue)) {\r\n            wholeRange.startValue = originValue\r\n        }\r\n    },\r\n    getMargins() {\r\n        var tickOptions = this._options.tick;\r\n        var tickOuterLength = _max(tickOptions.visible ? tickOptions.length / 2 + tickOptions.shift : 0, 0);\r\n        var radius = this.getRadius();\r\n        var {\r\n            x: x,\r\n            y: y\r\n        } = this._center;\r\n        var labelBoxes = this._majorTicks.map(t => t.label && t.label.getBBox()).filter(b => b);\r\n        var canvas = extend({}, this._canvas, {\r\n            left: x - radius,\r\n            top: y - radius,\r\n            right: this._canvas.width - (x + radius),\r\n            bottom: this._canvas.height - (y + radius)\r\n        });\r\n        var margins = calculateCanvasMargins(labelBoxes, canvas);\r\n        Object.keys(margins).forEach(k => margins[k] = margins[k] < tickOuterLength ? tickOuterLength : margins[k]);\r\n        return margins\r\n    },\r\n    _updateLabelsPosition() {\r\n        measureLabels(this._majorTicks);\r\n        this._adjustLabelsCoord(0, 0, true);\r\n        this._checkBoundedLabelsOverlapping(this._majorTicks, this._majorTicks.map(t => t.labelBBox))\r\n    },\r\n    _setVisualRange: _noop,\r\n    applyVisualRangeSetter: _noop,\r\n    _getStick: function() {\r\n        return this._options.firstPointOnStartAngle || this._options.type !== constants.discrete\r\n    },\r\n    _getTranslatedCoord: function(value, offset) {\r\n        return this._translator.translate(value, offset) - HALF_PI_ANGLE\r\n    },\r\n    _getCanvasStartEnd: function() {\r\n        return {\r\n            start: 0 - HALF_PI_ANGLE,\r\n            end: 360 - HALF_PI_ANGLE\r\n        }\r\n    },\r\n    _getStripGraphicAttributes: function(fromAngle, toAngle) {\r\n        var center = this.getCenter();\r\n        var angle = this.getAngles()[0];\r\n        var r = this.getRadius();\r\n        return {\r\n            x: center.x,\r\n            y: center.y,\r\n            innerRadius: 0,\r\n            outerRadius: r,\r\n            startAngle: -toAngle - angle,\r\n            endAngle: -fromAngle - angle\r\n        }\r\n    },\r\n    _createStrip: function(coords) {\r\n        return this._renderer.arc(coords.x, coords.y, coords.innerRadius, coords.outerRadius, coords.startAngle, coords.endAngle)\r\n    },\r\n    _getStripLabelCoords: function(from, to) {\r\n        var coords = this._getStripGraphicAttributes(from, to);\r\n        var angle = coords.startAngle + (coords.endAngle - coords.startAngle) / 2;\r\n        var cosSin = getCosAndSin(angle);\r\n        var halfRad = this.getRadius() / 2;\r\n        var center = this.getCenter();\r\n        var x = round(center.x + halfRad * cosSin.cos);\r\n        var y = round(center.y - halfRad * cosSin.sin);\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            align: constants.center\r\n        }\r\n    },\r\n    _getConstantLineGraphicAttributes: function(value) {\r\n        var center = this.getCenter();\r\n        var r = this.getRadius();\r\n        return {\r\n            points: [center.x, center.y, center.x + r, center.y]\r\n        }\r\n    },\r\n    _createConstantLine: function(value, attr) {\r\n        return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr)\r\n    },\r\n    _rotateConstantLine(line, value) {\r\n        var {\r\n            x: x,\r\n            y: y\r\n        } = this.getCenter();\r\n        line.rotate(value + this.getAngles()[0], x, y)\r\n    },\r\n    _getConstantLineLabelsCoords: function(value) {\r\n        var cosSin = getCosAndSin(-value - this.getAngles()[0]);\r\n        var halfRad = this.getRadius() / 2;\r\n        var center = this.getCenter();\r\n        var x = round(center.x + halfRad * cosSin.cos);\r\n        var y = round(center.y - halfRad * cosSin.sin);\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _checkAlignmentConstantLineLabels: _noop,\r\n    _adjustDivisionFactor: function(val) {\r\n        return 180 * val / (this.getRadius() * PI)\r\n    },\r\n    _getScreenDelta: function() {\r\n        var angles = this.getAngles();\r\n        return abs(angles[0] - angles[1])\r\n    },\r\n    _getTickMarkPoints: function(coords, length, _ref) {\r\n        var {\r\n            shift: shift = 0\r\n        } = _ref;\r\n        var center = this.getCenter();\r\n        var radiusWithTicks = this.getRadius() + length * {\r\n            inside: -1,\r\n            center: -.5,\r\n            outside: 0\r\n        } [this._options.tickOrientation || \"center\"];\r\n        return [center.x + radiusWithTicks + shift, center.y, center.x + radiusWithTicks + length + shift, center.y]\r\n    },\r\n    _getLabelAdjustedCoord: function(tick, _offset, _maxWidth, checkCanvas) {\r\n        var labelCoords = tick.labelCoords;\r\n        var labelY = labelCoords.y;\r\n        var labelAngle = labelCoords.angle;\r\n        var cosSin = getCosAndSin(labelAngle);\r\n        var cos = cosSin.cos;\r\n        var sin = cosSin.sin;\r\n        var box = tick.labelBBox;\r\n        var halfWidth = box.width / 2;\r\n        var halfHeight = box.height / 2;\r\n        var indentFromAxis = this._options.label.indentFromAxis || 0;\r\n        var x = labelCoords.x + indentFromAxis * cos;\r\n        var y = labelY + (labelY - box.y - halfHeight) + indentFromAxis * sin;\r\n        var shiftX = 0;\r\n        var shiftY = 0;\r\n        switch (getPolarQuarter(labelAngle)) {\r\n            case 1:\r\n                shiftX = halfWidth;\r\n                shiftY = halfHeight * sin;\r\n                break;\r\n            case 2:\r\n                shiftX = halfWidth * cos;\r\n                shiftY = halfHeight;\r\n                break;\r\n            case 3:\r\n                shiftX = -halfWidth;\r\n                shiftY = halfHeight * sin;\r\n                break;\r\n            case 4:\r\n                shiftX = halfWidth * cos;\r\n                shiftY = -halfHeight\r\n        }\r\n        if (checkCanvas) {\r\n            var canvas = this._canvas;\r\n            var boxShiftX = x - labelCoords.x + shiftX;\r\n            var boxShiftY = y - labelCoords.y + shiftY;\r\n            if (box.x + boxShiftX < canvas.originalLeft) {\r\n                shiftX -= box.x + boxShiftX - canvas.originalLeft\r\n            }\r\n            if (box.x + box.width + boxShiftX > canvas.width - canvas.originalRight) {\r\n                shiftX -= box.x + box.width + boxShiftX - (canvas.width - canvas.originalRight)\r\n            }\r\n            if (box.y + boxShiftY < canvas.originalTop) {\r\n                shiftY -= box.y + boxShiftY - canvas.originalTop\r\n            }\r\n            if (box.y + box.height + boxShiftY > canvas.height - canvas.originalBottom) {\r\n                shiftY -= box.y + box.height + boxShiftY - (canvas.height - canvas.originalBottom)\r\n            }\r\n        }\r\n        return {\r\n            x: x + shiftX,\r\n            y: y + shiftY\r\n        }\r\n    },\r\n    _getGridLineDrawer: function() {\r\n        var that = this;\r\n        return function(tick, gridStyle) {\r\n            var center = that.getCenter();\r\n            return that._createPathElement(that._getGridPoints().points, gridStyle).rotate(tick.coords.angle, center.x, center.y)\r\n        }\r\n    },\r\n    _getGridPoints: function() {\r\n        var r = this.getRadius();\r\n        var center = this.getCenter();\r\n        return {\r\n            points: [center.x, center.y, center.x + r, center.y]\r\n        }\r\n    },\r\n    _getTranslatedValue: function(value, offset) {\r\n        var startAngle = this.getAngles()[0];\r\n        var angle = this._translator.translate(value, -offset);\r\n        var coords = convertPolarToXY(this.getCenter(), startAngle, angle, this.getRadius());\r\n        return {\r\n            x: coords.x,\r\n            y: coords.y,\r\n            angle: this.getTranslatedAngle(angle)\r\n        }\r\n    },\r\n    _getAdjustedStripLabelCoords: function(strip) {\r\n        var box = strip.labelBBox;\r\n        return {\r\n            translateY: strip.label.attr(\"y\") - box.y - box.height / 2\r\n        }\r\n    },\r\n    coordsIn: function(x, y) {\r\n        return convertXYToPolar(this.getCenter(), x, y).r > this.getRadius()\r\n    },\r\n    _rotateTick: function(element, coords) {\r\n        var center = this.getCenter();\r\n        element.rotate(coords.angle, center.x, center.y)\r\n    },\r\n    _validateOverlappingMode: function(mode) {\r\n        return constants.validateOverlappingMode(mode)\r\n    },\r\n    _validateDisplayMode: function() {\r\n        return \"standard\"\r\n    },\r\n    _getStep: function(boxes) {\r\n        var radius = this.getRadius() + (this._options.label.indentFromAxis || 0);\r\n        var maxLabelBox = boxes.reduce((function(prevValue, box) {\r\n            var curValue = prevValue;\r\n            if (prevValue.width < box.width) {\r\n                curValue.width = box.width\r\n            }\r\n            if (prevValue.height < box.height) {\r\n                curValue.height = box.height\r\n            }\r\n            return curValue\r\n        }), {\r\n            width: 0,\r\n            height: 0\r\n        });\r\n        var angle1 = abs(2 * atan(maxLabelBox.height / (2 * radius - maxLabelBox.width)) * 180 / PI);\r\n        var angle2 = abs(2 * atan(maxLabelBox.width / (2 * radius - maxLabelBox.height)) * 180 / PI);\r\n        return constants.getTicksCountInRange(this._majorTicks, \"angle\", _max(angle1, angle2))\r\n    },\r\n    _checkBoundedLabelsOverlapping: function(majorTicks, boxes, mode) {\r\n        var labelOpt = this._options.label;\r\n        mode = mode || this._validateOverlappingMode(labelOpt.overlappingBehavior);\r\n        if (\"hide\" !== mode) {\r\n            return\r\n        }\r\n        var lastVisibleLabelIndex = majorTicks.reduce((lastVisibleLabelIndex, tick, index) => tick.label ? index : lastVisibleLabelIndex, null);\r\n        if (!lastVisibleLabelIndex) {\r\n            return\r\n        }\r\n        if (constants.areLabelsOverlap(boxes[0], boxes[lastVisibleLabelIndex], labelOpt.minSpacing, constants.center)) {\r\n            \"first\" === labelOpt.hideFirstOrLast ? majorTicks[0].removeLabel() : majorTicks[lastVisibleLabelIndex].removeLabel()\r\n        }\r\n    },\r\n    shift: function(margins) {\r\n        this._axisGroup.attr({\r\n            translateX: margins.right,\r\n            translateY: margins.bottom\r\n        });\r\n        this._axisElementsGroup.attr({\r\n            translateX: margins.right,\r\n            translateY: margins.bottom\r\n        })\r\n    },\r\n    getTranslatedAngle(angle) {\r\n        var startAngle = this.getAngles()[0];\r\n        return angle + startAngle - HALF_PI_ANGLE\r\n    }\r\n};\r\nexport var circular = circularAxes;\r\nexport var circularSpider = extend({}, circularAxes, {\r\n    _createAxisElement: function() {\r\n        return this._renderer.path([], \"area\")\r\n    },\r\n    _updateAxisElementPosition: function() {\r\n        this._axisElement.attr({\r\n            points: _map(this.getSpiderTicks(), (function(tick) {\r\n                return {\r\n                    x: tick.coords.x,\r\n                    y: tick.coords.y\r\n                }\r\n            }))\r\n        })\r\n    },\r\n    _getStick: function() {\r\n        return true\r\n    },\r\n    _getSpiderCategoryOption: function() {\r\n        return true\r\n    },\r\n    getSpiderTicks: function() {\r\n        var ticks = this.getFullTicks();\r\n        this._spiderTicks = ticks.map(tick(this, this.renderer, {}, {}, this._getSkippedCategory(ticks), true));\r\n        this._spiderTicks.forEach((function(tick) {\r\n            tick.initCoords()\r\n        }));\r\n        return this._spiderTicks\r\n    },\r\n    _getStripGraphicAttributes: function(fromAngle, toAngle) {\r\n        var center = this.getCenter();\r\n        var spiderTicks = this.getSpiderTicks();\r\n        var firstTick;\r\n        var lastTick;\r\n        var nextTick;\r\n        var tick;\r\n        var points = [];\r\n        var i = 0;\r\n        var len = spiderTicks.length;\r\n        while (i < len) {\r\n            tick = spiderTicks[i].coords;\r\n            if (tick.angle >= fromAngle && tick.angle <= toAngle) {\r\n                if (!firstTick) {\r\n                    firstTick = (spiderTicks[i - 1] || spiderTicks[spiderTicks.length - 1]).coords;\r\n                    points.push((tick.x + firstTick.x) / 2, (tick.y + firstTick.y) / 2)\r\n                }\r\n                points.push(tick.x, tick.y);\r\n                nextTick = (spiderTicks[i + 1] || spiderTicks[0]).coords;\r\n                lastTick = {\r\n                    x: (tick.x + nextTick.x) / 2,\r\n                    y: (tick.y + nextTick.y) / 2\r\n                }\r\n            }\r\n            i++\r\n        }\r\n        points.push(lastTick.x, lastTick.y);\r\n        points.push(center.x, center.y);\r\n        return {\r\n            points: points\r\n        }\r\n    },\r\n    _createStrip: function(_ref2) {\r\n        var {\r\n            points: points\r\n        } = _ref2;\r\n        return this._renderer.path(points, \"area\")\r\n    },\r\n    _getTranslatedCoord: function(value, offset) {\r\n        return this._translator.translate(value, offset) - HALF_PI_ANGLE\r\n    },\r\n    _setTickOffset: function() {\r\n        this._tickOffset = false\r\n    }\r\n});\r\nexport var linear = {\r\n    _resetMargins() {\r\n        this._reinitTranslator(this._getViewportRange())\r\n    },\r\n    _getStick: xyAxesLinear._getStick,\r\n    _getSpiderCategoryOption: _noop,\r\n    _getTranslatorOptions: function() {\r\n        return {\r\n            isHorizontal: true,\r\n            stick: this._getStick()\r\n        }\r\n    },\r\n    getRadius: circularAxes.getRadius,\r\n    getCenter: circularAxes.getCenter,\r\n    getAngles: circularAxes.getAngles,\r\n    _updateRadius: circularAxes._updateRadius,\r\n    _updateCenter: circularAxes._updateCenter,\r\n    _processCanvas(canvas) {\r\n        this._updateRadius(canvas);\r\n        this._updateCenter(canvas);\r\n        return {\r\n            left: 0,\r\n            right: 0,\r\n            startPadding: canvas.startPadding,\r\n            endPadding: canvas.endPadding,\r\n            width: this.getRadius()\r\n        }\r\n    },\r\n    _createAxisElement: xyAxesLinear._createAxisElement,\r\n    _updateAxisElementPosition: function() {\r\n        var centerCoord = this.getCenter();\r\n        this._axisElement.attr({\r\n            points: [centerCoord.x, centerCoord.y, centerCoord.x + this.getRadius(), centerCoord.y]\r\n        }).rotate(this.getAngles()[0] - HALF_PI_ANGLE, centerCoord.x, centerCoord.y)\r\n    },\r\n    _getScreenDelta: function() {\r\n        return this.getRadius()\r\n    },\r\n    _getTickMarkPoints: function(coords, length) {\r\n        return [coords.x - length / 2, coords.y, coords.x + length / 2, coords.y]\r\n    },\r\n    _getLabelAdjustedCoord: function(tick) {\r\n        var labelCoords = tick.labelCoords;\r\n        var labelY = labelCoords.y;\r\n        var cosSin = getCosAndSin(labelCoords.angle);\r\n        var indentFromAxis = this._options.label.indentFromAxis || 0;\r\n        var box = tick.labelBBox;\r\n        var x = labelCoords.x - abs(indentFromAxis * cosSin.sin) + abs(box.width / 2 * cosSin.cos) - box.width / 2;\r\n        var y = labelY + (labelY - box.y) - abs(box.height / 2 * cosSin.sin) + abs(indentFromAxis * cosSin.cos);\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _getGridLineDrawer: function() {\r\n        var that = this;\r\n        return function(tick, gridStyle) {\r\n            var grid = that._getGridPoints(tick.coords);\r\n            return that._renderer.circle(grid.cx, grid.cy, grid.r).attr(gridStyle).sharp()\r\n        }\r\n    },\r\n    _getGridPoints: function(coords) {\r\n        var pos = this.getCenter();\r\n        var radius = getDistance(pos.x, pos.y, coords.x, coords.y);\r\n        if (radius > this.getRadius()) {\r\n            return {\r\n                cx: null,\r\n                cy: null,\r\n                r: null\r\n            }\r\n        }\r\n        return {\r\n            cx: pos.x,\r\n            cy: pos.y,\r\n            r: radius\r\n        }\r\n    },\r\n    _getTranslatedValue: function(value, offset) {\r\n        var startAngle = this.getAngles()[0];\r\n        var xy = convertPolarToXY(this.getCenter(), startAngle, 0, this._translator.translate(value, offset));\r\n        return {\r\n            x: xy.x,\r\n            y: xy.y,\r\n            angle: startAngle - HALF_PI_ANGLE\r\n        }\r\n    },\r\n    _getTranslatedCoord: function(value, offset) {\r\n        return this._translator.translate(value, offset)\r\n    },\r\n    _getCanvasStartEnd() {\r\n        var invert = this.getTranslator().getBusinessRange().invert;\r\n        var coords = [0, this.getRadius()];\r\n        invert && coords.reverse();\r\n        return {\r\n            start: coords[0],\r\n            end: coords[1]\r\n        }\r\n    },\r\n    _getStripGraphicAttributes: function(fromPoint, toPoint) {\r\n        var center = this.getCenter();\r\n        return {\r\n            x: center.x,\r\n            y: center.y,\r\n            innerRadius: fromPoint,\r\n            outerRadius: toPoint\r\n        }\r\n    },\r\n    _createStrip: function(attrs) {\r\n        return this._renderer.arc(attrs.x, attrs.y, attrs.innerRadius, attrs.outerRadius, 0, 360)\r\n    },\r\n    _getAdjustedStripLabelCoords: circularAxes._getAdjustedStripLabelCoords,\r\n    _getStripLabelCoords: function(from, to) {\r\n        var labelPos = from + (to - from) / 2;\r\n        var center = this.getCenter();\r\n        var y = round(center.y - labelPos);\r\n        return {\r\n            x: center.x,\r\n            y: y,\r\n            align: constants.center\r\n        }\r\n    },\r\n    _getConstantLineGraphicAttributes: function(value) {\r\n        var center = this.getCenter();\r\n        return {\r\n            cx: center.x,\r\n            cy: center.y,\r\n            r: value\r\n        }\r\n    },\r\n    _createConstantLine: function(value, attr) {\r\n        var attrs = this._getConstantLineGraphicAttributes(value);\r\n        return this._renderer.circle(attrs.cx, attrs.cy, attrs.r).attr(attr).sharp()\r\n    },\r\n    _getConstantLineLabelsCoords: function(value) {\r\n        var center = this.getCenter();\r\n        var y = round(center.y - value);\r\n        return {\r\n            x: center.x,\r\n            y: y\r\n        }\r\n    },\r\n    _checkAlignmentConstantLineLabels: _noop,\r\n    _rotateTick: function(element, coords, isGridLine) {\r\n        !isGridLine && element.rotate(coords.angle + HALF_PI_ANGLE, coords.x, coords.y)\r\n    },\r\n    _validateOverlappingMode: circularAxes._validateOverlappingMode,\r\n    _validateDisplayMode: circularAxes._validateDisplayMode,\r\n    _getStep: function(boxes) {\r\n        var quarter = getPolarQuarter(this.getAngles()[0]);\r\n        var spacing = this._options.label.minSpacing;\r\n        var func = 2 === quarter || 4 === quarter ? function(box) {\r\n            return box.width + spacing\r\n        } : function(box) {\r\n            return box.height\r\n        };\r\n        var maxLabelLength = boxes.reduce((prevValue, box) => _max(prevValue, func(box)), 0);\r\n        return constants.getTicksCountInRange(this._majorTicks, 2 === quarter || 4 === quarter ? \"x\" : \"y\", maxLabelLength)\r\n    }\r\n};\r\nexport var linearSpider = extend({}, linear, {\r\n    _createPathElement: function(points, attr) {\r\n        return this._renderer.path(points, \"area\").attr(attr).sharp()\r\n    },\r\n    setSpiderTicks: function(ticks) {\r\n        this._spiderTicks = ticks\r\n    },\r\n    _getGridLineDrawer: function() {\r\n        var that = this;\r\n        return function(tick, gridStyle) {\r\n            return that._createPathElement(that._getGridPoints(tick.coords).points, gridStyle)\r\n        }\r\n    },\r\n    _getGridPoints: function(coords) {\r\n        var pos = this.getCenter();\r\n        var radius = getDistance(pos.x, pos.y, coords.x, coords.y);\r\n        return this._getGridPointsByRadius(radius)\r\n    },\r\n    _getGridPointsByRadius: function(radius) {\r\n        var pos = this.getCenter();\r\n        if (radius > this.getRadius()) {\r\n            return {\r\n                points: null\r\n            }\r\n        }\r\n        return {\r\n            points: _map(this._spiderTicks, (function(tick) {\r\n                var cosSin = getCosAndSin(tick.coords.angle);\r\n                return {\r\n                    x: round(pos.x + radius * cosSin.cos),\r\n                    y: round(pos.y + radius * cosSin.sin)\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _getStripGraphicAttributes: function(fromPoint, toPoint) {\r\n        var innerPoints = this._getGridPointsByRadius(toPoint).points;\r\n        var outerPoints = this._getGridPointsByRadius(fromPoint).points;\r\n        return {\r\n            points: [outerPoints, innerPoints.reverse()]\r\n        }\r\n    },\r\n    _createStrip: circularSpider._createStrip,\r\n    _getConstantLineGraphicAttributes: function(value) {\r\n        return this._getGridPointsByRadius(value)\r\n    },\r\n    _createConstantLine: function(value, attr) {\r\n        return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr)\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}