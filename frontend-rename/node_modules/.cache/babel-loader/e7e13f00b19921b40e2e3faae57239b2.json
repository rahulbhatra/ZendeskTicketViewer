{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsharma/Documents/Zendesk/zendesk-ticket-viewer/src/components/tickets/tickets.js\",\n    _s = $RefreshSig$();\n\nimport { DataGrid } from '@mui/x-data-grid';\nimport { createTheme } from '@mui/material/styles';\nimport { Button } from '@mui/material';\nimport { useNavigate } from 'react-router';\nimport axios from 'axios';\nimport Toast from '../toast/toast';\nimport { useState, useEffect } from 'react';\nimport { Box } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nexport default function Tickets() {\n  _s();\n\n  const navigate = useNavigate();\n  const [toastOpen, setToastOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastSeverity, setToastSevertiy] = useState('success');\n  const [rows, setRows] = useState([]);\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: '40'\n  }, {\n    field: 'status',\n    headerName: 'Status',\n    width: '150'\n  }, {\n    field: 'subject',\n    headerName: 'Subject',\n    width: '600'\n  }, {\n    field: 'requester',\n    headerName: 'Requester',\n    width: '200'\n  }, {\n    field: 'updated_at',\n    headerName: 'Requester Updated',\n    width: '200',\n    valueFormatter: params => {\n      const date = new Date(params.value);\n      return `${date.toLocaleString()}`;\n    }\n  }, {\n    field: 'assignee',\n    headerName: 'Assignee',\n    width: '300'\n  }, {\n    field: 'action',\n    headerName: 'Action',\n    width: '150',\n    sortable: false,\n    renderCell: params => {\n      const handleClick = e => {\n        console.log(params.row.id);\n        navigate(\"/ticket-details\", {\n          state: {\n            ticket: params.row\n          }\n        });\n      };\n\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleClick,\n        children: \"Ticket Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }, this);\n    }\n  }];\n\n  const getData = async () => {\n    await axios.post('http://localhost:4000/api/tickets').then(res => {\n      console.log(res.data.rows);\n      setRows(res.data.rows);\n      setToastOpen(true);\n      setToastMessage('Successfully Loaded Tickets');\n      setToastSevertiy('success');\n    }).catch(error => {\n      console.log(error);\n      setToastOpen(true);\n      setToastMessage('Email Password is not matching!');\n      setToastSevertiy('error');\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      open: toastOpen,\n      setOpen: setToastOpen,\n      message: toastMessage,\n      severity: toastSeverity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '90vh',\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 25,\n        rowsPerPageOptions: [25]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tickets, \"5dUDToihS/NZ0iRKfvjD1Exag2U=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Tickets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tickets\");","map":{"version":3,"sources":["/Users/rahulsharma/Documents/Zendesk/zendesk-ticket-viewer/src/components/tickets/tickets.js"],"names":["DataGrid","createTheme","Button","useNavigate","axios","Toast","useState","useEffect","Box","theme","Tickets","navigate","toastOpen","setToastOpen","toastMessage","setToastMessage","toastSeverity","setToastSevertiy","rows","setRows","columns","field","headerName","width","valueFormatter","params","date","Date","value","toLocaleString","sortable","renderCell","handleClick","e","console","log","row","id","state","ticket","getData","post","then","res","data","catch","error","height"],"mappings":"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","sourcesContent":["import { DataGrid } from '@mui/x-data-grid';\nimport { createTheme } from '@mui/material/styles';\nimport { Button } from '@mui/material';\nimport { useNavigate } from 'react-router';\nimport axios from 'axios';\nimport Toast from '../toast/toast';\nimport { useState, useEffect } from 'react';\nimport { Box } from '@mui/system';\n\n\nconst theme = createTheme();\n\nexport default function Tickets() {\n  const navigate = useNavigate();\n  const [toastOpen, setToastOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastSeverity, setToastSevertiy] = useState('success');\n  const [rows, setRows] = useState([]);\n  const columns = [\n    { field: 'id', headerName: 'ID', width: '40'},\n    { field: 'status', headerName: 'Status', width: '150'},\n    { field: 'subject', headerName: 'Subject', width: '600' },\n    { field: 'requester', headerName: 'Requester', width: '200' },\n    { field: 'updated_at', headerName: 'Requester Updated', width: '200', valueFormatter: (params) => {\n      const date = new Date(params.value);\n      return `${date.toLocaleString()}`;\n    }, },\n    { field: 'assignee', headerName: 'Assignee', width: '300'},\n    {\n      field: 'action',\n      headerName: 'Action',\n      width: '150',\n      sortable: false,\n      renderCell: (params) => {\n        const handleClick = (e) => {\n          console.log(params.row.id);\n          navigate(\"/ticket-details\", {\n            state: {\n              ticket: params.row\n            }\n          });\n        };\n  \n        return <Button variant=\"contained\" onClick={handleClick}>Ticket Details</Button>;\n      },\n    },\n  ];\n\n  \n  const getData = async () => {\n    await axios.post('http://localhost:4000/api/tickets')\n      .then(res => {\n        console.log(res.data.rows);\n        setRows(res.data.rows);\n        setToastOpen(true);\n        setToastMessage('Successfully Loaded Tickets');\n        setToastSevertiy('success');\n        \n      })\n      .catch(error => {\n        console.log(error);\n        setToastOpen(true);\n        setToastMessage('Email Password is not matching!');\n        setToastSevertiy('error');\n      });\n    }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <Box sx={{width: '100%'}}>\n      <Toast open={toastOpen} setOpen={setToastOpen} message={toastMessage} severity={toastSeverity} />\n      <div style={{ height: '90vh', width: \"100%\" }}>\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          pageSize={25}\n          rowsPerPageOptions={[25]}\n        />\n      </div>\n    </ Box>\n  );\n}"]},"metadata":{},"sourceType":"module"}