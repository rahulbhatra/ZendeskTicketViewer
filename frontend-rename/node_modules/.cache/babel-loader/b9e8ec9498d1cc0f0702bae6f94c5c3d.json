{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/components/chart_theme_manager.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { noop } from \"../../core/utils/common\";\nimport { isString as _isString, isDefined as _isDefined, isNumeric, isPlainObject } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { BaseThemeManager } from \"../core/base_theme_manager\";\nimport { normalizeEnum as _normalizeEnum } from \"../core/utils\";\nexport var ThemeManager = BaseThemeManager.inherit(function () {\n  var processAxisOptions = function (axisOptions) {\n    if (!axisOptions) {\n      return {};\n    }\n\n    axisOptions = extend(true, {}, axisOptions);\n    axisOptions.title = (options = axisOptions.title, _isString(options) ? {\n      text: options\n    } : options);\n    var options;\n\n    if (\"logarithmic\" === axisOptions.type && axisOptions.logarithmBase <= 0 || axisOptions.logarithmBase && !isNumeric(axisOptions.logarithmBase)) {\n      axisOptions.logarithmBase = void 0;\n      axisOptions.logarithmBaseError = true;\n    }\n\n    if (axisOptions.label) {\n      if (axisOptions.label.alignment) {\n        axisOptions.label.userAlignment = true;\n      }\n    }\n\n    return axisOptions;\n  };\n\n  var applyParticularAxisOptions = function (name, userOptions, rotated) {\n    var theme = this._theme;\n    var position = !(rotated ^ \"valueAxis\" === name) ? \"horizontalAxis\" : \"verticalAxis\";\n    var processedUserOptions = processAxisOptions(userOptions);\n    var commonAxisSettings = processAxisOptions(this._userOptions.commonAxisSettings);\n    var mergeOptions = extend(true, {}, theme.commonAxisSettings, theme[position], theme[name], commonAxisSettings, processedUserOptions);\n    mergeOptions.workWeek = processedUserOptions.workWeek || theme[name].workWeek;\n    mergeOptions.forceUserTickInterval |= _isDefined(processedUserOptions.tickInterval) && !_isDefined(processedUserOptions.axisDivisionFactor);\n    return mergeOptions;\n  };\n\n  var mergeOptions = function (name, userOptions) {\n    userOptions = userOptions || this._userOptions[name];\n    var theme = this._theme[name];\n    var result = this._mergedSettings[name];\n\n    if (result) {\n      return result;\n    }\n\n    if (isPlainObject(theme) && isPlainObject(userOptions)) {\n      result = extend(true, {}, theme, userOptions);\n    } else {\n      result = _isDefined(userOptions) ? userOptions : theme;\n    }\n\n    this._mergedSettings[name] = result;\n    return result;\n  };\n\n  var applyParticularTheme = {\n    base: mergeOptions,\n    argumentAxis: applyParticularAxisOptions,\n    valueAxisRangeSelector: function () {\n      return mergeOptions.call(this, \"valueAxis\");\n    },\n    valueAxis: applyParticularAxisOptions,\n    series: function (name, userOptions, seriesCount) {\n      var that = this;\n      var theme = that._theme;\n      var userCommonSettings = that._userOptions.commonSeriesSettings || {};\n      var themeCommonSettings = theme.commonSeriesSettings;\n\n      var widgetType = that._themeSection.split(\".\").slice(-1)[0];\n\n      var type = _normalizeEnum(userOptions.type || userCommonSettings.type || themeCommonSettings.type || \"pie\" === widgetType && theme.type);\n\n      var palette = that.palette;\n      var isBar = ~type.indexOf(\"bar\");\n      var isLine = ~type.indexOf(\"line\");\n      var isArea = ~type.indexOf(\"area\");\n      var isBubble = \"bubble\" === type;\n      var mainSeriesColor;\n      var resolveLabelsOverlapping = that.getOptions(\"resolveLabelsOverlapping\");\n      var containerBackgroundColor = that.getOptions(\"containerBackgroundColor\");\n      var seriesTemplate = applyParticularTheme.seriesTemplate.call(this);\n      var seriesVisibility;\n\n      if (isBar || isBubble) {\n        userOptions = extend(true, {}, userCommonSettings, userCommonSettings[type], userOptions);\n        seriesVisibility = userOptions.visible;\n        userCommonSettings = {\n          type: {}\n        };\n        extend(true, userOptions, userOptions.point);\n        userOptions.visible = seriesVisibility;\n      }\n\n      var settings = extend(true, {\n        aggregation: {}\n      }, themeCommonSettings, themeCommonSettings[type], userCommonSettings, userCommonSettings[type], userOptions);\n      settings.aggregation.enabled = \"chart\" === widgetType && !!settings.aggregation.enabled;\n      settings.type = type;\n      settings.widgetType = widgetType;\n      settings.containerBackgroundColor = containerBackgroundColor;\n\n      if (\"pie\" !== widgetType) {\n        mainSeriesColor = settings.color || palette.getNextColor(seriesCount);\n      } else {\n        mainSeriesColor = function (argument, index, count) {\n          var cat = \"\".concat(argument, \"-\").concat(index);\n\n          if (!that._multiPieColors[cat]) {\n            that._multiPieColors[cat] = palette.getNextColor(count);\n          }\n\n          return that._multiPieColors[cat];\n        };\n      }\n\n      settings.mainSeriesColor = mainSeriesColor;\n      settings.resolveLabelsOverlapping = resolveLabelsOverlapping;\n\n      if (settings.label && (isLine || isArea && \"rangearea\" !== type || \"scatter\" === type)) {\n        settings.label.position = \"outside\";\n      }\n\n      if (seriesTemplate) {\n        settings.nameField = seriesTemplate.nameField;\n      }\n\n      return settings;\n    },\n    animation: function (name) {\n      var userOptions = this._userOptions[name];\n      userOptions = isPlainObject(userOptions) ? userOptions : _isDefined(userOptions) ? {\n        enabled: !!userOptions\n      } : {};\n      return mergeOptions.call(this, name, userOptions);\n    },\n\n    seriesTemplate() {\n      var value = mergeOptions.call(this, \"seriesTemplate\");\n\n      if (value) {\n        value.nameField = value.nameField || \"series\";\n      }\n\n      return value;\n    },\n\n    zoomAndPan() {\n      function parseOption(option) {\n        option = _normalizeEnum(option);\n        var pan = \"pan\" === option || \"both\" === option;\n        var zoom = \"zoom\" === option || \"both\" === option;\n        return {\n          pan: pan,\n          zoom: zoom,\n          none: !pan && !zoom\n        };\n      }\n\n      var options = mergeOptions.call(this, \"zoomAndPan\");\n      return {\n        valueAxis: parseOption(options.valueAxis),\n        argumentAxis: parseOption(options.argumentAxis),\n        dragToZoom: !!options.dragToZoom,\n        dragBoxStyle: {\n          class: \"dxc-shutter\",\n          fill: options.dragBoxStyle.color,\n          opacity: options.dragBoxStyle.opacity\n        },\n        panKey: options.panKey,\n        allowMouseWheel: !!options.allowMouseWheel,\n        allowTouchGestures: !!options.allowTouchGestures\n      };\n    }\n\n  };\n  return {\n    _themeSection: \"chart\",\n    ctor: function (params) {\n      var that = this;\n      that.callBase.apply(that, arguments);\n      var options = params.options || {};\n      that._userOptions = options;\n      that._mergeAxisTitleOptions = [];\n      that._multiPieColors = {};\n      that._callback = noop;\n    },\n    dispose: function () {\n      var that = this;\n      that.palette && that.palette.dispose();\n      that.palette = that._userOptions = that._mergedSettings = that._multiPieColors = null;\n      return that.callBase.apply(that, arguments);\n    },\n    resetPalette: function () {\n      this.palette.reset();\n      this._multiPieColors = {};\n    },\n    getOptions: function (name) {\n      return (applyParticularTheme[name] || applyParticularTheme.base).apply(this, arguments);\n    },\n    refresh: function () {\n      this._mergedSettings = {};\n      return this.callBase.apply(this, arguments);\n    },\n    _initializeTheme: function () {\n      var that = this;\n      that.callBase.apply(that, arguments);\n      that.updatePalette();\n    },\n    resetOptions: function (name) {\n      this._mergedSettings[name] = null;\n    },\n    update: function (options) {\n      this._userOptions = options;\n    },\n    updatePalette: function () {\n      this.palette = this.createPalette(this.getOptions(\"palette\"), {\n        useHighlight: true,\n        extensionMode: this.getOptions(\"paletteExtensionMode\")\n      });\n    }\n  };\n}());","map":{"version":3,"sources":["/Users/rahulsharma/node_modules/devextreme/esm/viz/components/chart_theme_manager.js"],"names":["noop","isString","_isString","isDefined","_isDefined","isNumeric","isPlainObject","extend","BaseThemeManager","normalizeEnum","_normalizeEnum","ThemeManager","inherit","processAxisOptions","axisOptions","title","options","text","type","logarithmBase","logarithmBaseError","label","alignment","userAlignment","applyParticularAxisOptions","name","userOptions","rotated","theme","_theme","position","processedUserOptions","commonAxisSettings","_userOptions","mergeOptions","workWeek","forceUserTickInterval","tickInterval","axisDivisionFactor","result","_mergedSettings","applyParticularTheme","base","argumentAxis","valueAxisRangeSelector","call","valueAxis","series","seriesCount","that","userCommonSettings","commonSeriesSettings","themeCommonSettings","widgetType","_themeSection","split","slice","palette","isBar","indexOf","isLine","isArea","isBubble","mainSeriesColor","resolveLabelsOverlapping","getOptions","containerBackgroundColor","seriesTemplate","seriesVisibility","visible","point","settings","aggregation","enabled","color","getNextColor","argument","index","count","cat","concat","_multiPieColors","nameField","animation","value","zoomAndPan","parseOption","option","pan","zoom","none","dragToZoom","dragBoxStyle","class","fill","opacity","panKey","allowMouseWheel","allowTouchGestures","ctor","params","callBase","apply","arguments","_mergeAxisTitleOptions","_callback","dispose","resetPalette","reset","refresh","_initializeTheme","updatePalette","resetOptions","update","createPalette","useHighlight","extensionMode"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/components/chart_theme_manager.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isString as _isString,\r\n    isDefined as _isDefined,\r\n    isNumeric,\r\n    isPlainObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    BaseThemeManager\r\n} from \"../core/base_theme_manager\";\r\nimport {\r\n    normalizeEnum as _normalizeEnum\r\n} from \"../core/utils\";\r\nexport var ThemeManager = BaseThemeManager.inherit(function() {\r\n    var processAxisOptions = function(axisOptions) {\r\n        if (!axisOptions) {\r\n            return {}\r\n        }\r\n        axisOptions = extend(true, {}, axisOptions);\r\n        axisOptions.title = (options = axisOptions.title, _isString(options) ? {\r\n            text: options\r\n        } : options);\r\n        var options;\r\n        if (\"logarithmic\" === axisOptions.type && axisOptions.logarithmBase <= 0 || axisOptions.logarithmBase && !isNumeric(axisOptions.logarithmBase)) {\r\n            axisOptions.logarithmBase = void 0;\r\n            axisOptions.logarithmBaseError = true\r\n        }\r\n        if (axisOptions.label) {\r\n            if (axisOptions.label.alignment) {\r\n                axisOptions.label.userAlignment = true\r\n            }\r\n        }\r\n        return axisOptions\r\n    };\r\n    var applyParticularAxisOptions = function(name, userOptions, rotated) {\r\n        var theme = this._theme;\r\n        var position = !(rotated ^ \"valueAxis\" === name) ? \"horizontalAxis\" : \"verticalAxis\";\r\n        var processedUserOptions = processAxisOptions(userOptions);\r\n        var commonAxisSettings = processAxisOptions(this._userOptions.commonAxisSettings);\r\n        var mergeOptions = extend(true, {}, theme.commonAxisSettings, theme[position], theme[name], commonAxisSettings, processedUserOptions);\r\n        mergeOptions.workWeek = processedUserOptions.workWeek || theme[name].workWeek;\r\n        mergeOptions.forceUserTickInterval |= _isDefined(processedUserOptions.tickInterval) && !_isDefined(processedUserOptions.axisDivisionFactor);\r\n        return mergeOptions\r\n    };\r\n    var mergeOptions = function(name, userOptions) {\r\n        userOptions = userOptions || this._userOptions[name];\r\n        var theme = this._theme[name];\r\n        var result = this._mergedSettings[name];\r\n        if (result) {\r\n            return result\r\n        }\r\n        if (isPlainObject(theme) && isPlainObject(userOptions)) {\r\n            result = extend(true, {}, theme, userOptions)\r\n        } else {\r\n            result = _isDefined(userOptions) ? userOptions : theme\r\n        }\r\n        this._mergedSettings[name] = result;\r\n        return result\r\n    };\r\n    var applyParticularTheme = {\r\n        base: mergeOptions,\r\n        argumentAxis: applyParticularAxisOptions,\r\n        valueAxisRangeSelector: function() {\r\n            return mergeOptions.call(this, \"valueAxis\")\r\n        },\r\n        valueAxis: applyParticularAxisOptions,\r\n        series: function(name, userOptions, seriesCount) {\r\n            var that = this;\r\n            var theme = that._theme;\r\n            var userCommonSettings = that._userOptions.commonSeriesSettings || {};\r\n            var themeCommonSettings = theme.commonSeriesSettings;\r\n            var widgetType = that._themeSection.split(\".\").slice(-1)[0];\r\n            var type = _normalizeEnum(userOptions.type || userCommonSettings.type || themeCommonSettings.type || \"pie\" === widgetType && theme.type);\r\n            var palette = that.palette;\r\n            var isBar = ~type.indexOf(\"bar\");\r\n            var isLine = ~type.indexOf(\"line\");\r\n            var isArea = ~type.indexOf(\"area\");\r\n            var isBubble = \"bubble\" === type;\r\n            var mainSeriesColor;\r\n            var resolveLabelsOverlapping = that.getOptions(\"resolveLabelsOverlapping\");\r\n            var containerBackgroundColor = that.getOptions(\"containerBackgroundColor\");\r\n            var seriesTemplate = applyParticularTheme.seriesTemplate.call(this);\r\n            var seriesVisibility;\r\n            if (isBar || isBubble) {\r\n                userOptions = extend(true, {}, userCommonSettings, userCommonSettings[type], userOptions);\r\n                seriesVisibility = userOptions.visible;\r\n                userCommonSettings = {\r\n                    type: {}\r\n                };\r\n                extend(true, userOptions, userOptions.point);\r\n                userOptions.visible = seriesVisibility\r\n            }\r\n            var settings = extend(true, {\r\n                aggregation: {}\r\n            }, themeCommonSettings, themeCommonSettings[type], userCommonSettings, userCommonSettings[type], userOptions);\r\n            settings.aggregation.enabled = \"chart\" === widgetType && !!settings.aggregation.enabled;\r\n            settings.type = type;\r\n            settings.widgetType = widgetType;\r\n            settings.containerBackgroundColor = containerBackgroundColor;\r\n            if (\"pie\" !== widgetType) {\r\n                mainSeriesColor = settings.color || palette.getNextColor(seriesCount)\r\n            } else {\r\n                mainSeriesColor = function(argument, index, count) {\r\n                    var cat = \"\".concat(argument, \"-\").concat(index);\r\n                    if (!that._multiPieColors[cat]) {\r\n                        that._multiPieColors[cat] = palette.getNextColor(count)\r\n                    }\r\n                    return that._multiPieColors[cat]\r\n                }\r\n            }\r\n            settings.mainSeriesColor = mainSeriesColor;\r\n            settings.resolveLabelsOverlapping = resolveLabelsOverlapping;\r\n            if (settings.label && (isLine || isArea && \"rangearea\" !== type || \"scatter\" === type)) {\r\n                settings.label.position = \"outside\"\r\n            }\r\n            if (seriesTemplate) {\r\n                settings.nameField = seriesTemplate.nameField\r\n            }\r\n            return settings\r\n        },\r\n        animation: function(name) {\r\n            var userOptions = this._userOptions[name];\r\n            userOptions = isPlainObject(userOptions) ? userOptions : _isDefined(userOptions) ? {\r\n                enabled: !!userOptions\r\n            } : {};\r\n            return mergeOptions.call(this, name, userOptions)\r\n        },\r\n        seriesTemplate() {\r\n            var value = mergeOptions.call(this, \"seriesTemplate\");\r\n            if (value) {\r\n                value.nameField = value.nameField || \"series\"\r\n            }\r\n            return value\r\n        },\r\n        zoomAndPan() {\r\n            function parseOption(option) {\r\n                option = _normalizeEnum(option);\r\n                var pan = \"pan\" === option || \"both\" === option;\r\n                var zoom = \"zoom\" === option || \"both\" === option;\r\n                return {\r\n                    pan: pan,\r\n                    zoom: zoom,\r\n                    none: !pan && !zoom\r\n                }\r\n            }\r\n            var options = mergeOptions.call(this, \"zoomAndPan\");\r\n            return {\r\n                valueAxis: parseOption(options.valueAxis),\r\n                argumentAxis: parseOption(options.argumentAxis),\r\n                dragToZoom: !!options.dragToZoom,\r\n                dragBoxStyle: {\r\n                    class: \"dxc-shutter\",\r\n                    fill: options.dragBoxStyle.color,\r\n                    opacity: options.dragBoxStyle.opacity\r\n                },\r\n                panKey: options.panKey,\r\n                allowMouseWheel: !!options.allowMouseWheel,\r\n                allowTouchGestures: !!options.allowTouchGestures\r\n            }\r\n        }\r\n    };\r\n    return {\r\n        _themeSection: \"chart\",\r\n        ctor: function(params) {\r\n            var that = this;\r\n            that.callBase.apply(that, arguments);\r\n            var options = params.options || {};\r\n            that._userOptions = options;\r\n            that._mergeAxisTitleOptions = [];\r\n            that._multiPieColors = {};\r\n            that._callback = noop\r\n        },\r\n        dispose: function() {\r\n            var that = this;\r\n            that.palette && that.palette.dispose();\r\n            that.palette = that._userOptions = that._mergedSettings = that._multiPieColors = null;\r\n            return that.callBase.apply(that, arguments)\r\n        },\r\n        resetPalette: function() {\r\n            this.palette.reset();\r\n            this._multiPieColors = {}\r\n        },\r\n        getOptions: function(name) {\r\n            return (applyParticularTheme[name] || applyParticularTheme.base).apply(this, arguments)\r\n        },\r\n        refresh: function() {\r\n            this._mergedSettings = {};\r\n            return this.callBase.apply(this, arguments)\r\n        },\r\n        _initializeTheme: function() {\r\n            var that = this;\r\n            that.callBase.apply(that, arguments);\r\n            that.updatePalette()\r\n        },\r\n        resetOptions: function(name) {\r\n            this._mergedSettings[name] = null\r\n        },\r\n        update: function(options) {\r\n            this._userOptions = options\r\n        },\r\n        updatePalette: function() {\r\n            this.palette = this.createPalette(this.getOptions(\"palette\"), {\r\n                useHighlight: true,\r\n                extensionMode: this.getOptions(\"paletteExtensionMode\")\r\n            })\r\n        }\r\n    }\r\n}());\r\n"]},"metadata":{},"sourceType":"module"}