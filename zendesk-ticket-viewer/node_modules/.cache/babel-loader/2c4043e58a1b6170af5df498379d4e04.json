{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/series/range_series.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../core/utils/extend\";\nvar _extend = extend;\nimport { isDefined as _isDefined } from \"../../core/utils/type\";\nimport { map as _map } from \"../core/utils\";\nimport { noop as _noop } from \"../../core/utils/common\";\nimport { chart as scatterSeries } from \"./scatter_series\";\nimport { chart as barChart } from \"./bar_series\";\nimport { chart as areaChart } from \"./area_series\";\nvar barSeries = barChart.bar;\nvar areaSeries = areaChart.area;\nvar chart = {};\nvar baseRangeSeries = {\n  areErrorBarsVisible: _noop,\n  _createErrorBarGroup: _noop,\n  _checkData: function (data, skippedFields) {\n    var valueFields = this.getValueFields();\n    return scatterSeries._checkData.call(this, data, skippedFields, {\n      minValue: valueFields[0],\n      value: valueFields[1]\n    }) && data.minValue === data.minValue;\n  },\n  getValueRangeInitialValue: scatterSeries.getValueRangeInitialValue,\n  _getPointDataSelector: function (data) {\n    var valueFields = this.getValueFields();\n    var val1Field = valueFields[0];\n    var val2Field = valueFields[1];\n    var tagField = this.getTagField();\n    var argumentField = this.getArgumentField();\n    return data => ({\n      tag: data[tagField],\n      minValue: this._processEmptyValue(data[val1Field]),\n      value: this._processEmptyValue(data[val2Field]),\n      argument: data[argumentField],\n      data: data\n    });\n  },\n  _defaultAggregator: \"range\",\n  _aggregators: {\n    range(_ref, series) {\n      var {\n        intervalStart: intervalStart,\n        intervalEnd: intervalEnd,\n        data: data\n      } = _ref;\n\n      if (!data.length) {\n        return;\n      }\n\n      var valueFields = series.getValueFields();\n      var val1Field = valueFields[0];\n      var val2Field = valueFields[1];\n      var result = data.reduce((result, item) => {\n        var val1 = item[val1Field];\n        var val2 = item[val2Field];\n\n        if (!_isDefined(val1) || !_isDefined(val2)) {\n          return result;\n        }\n\n        result[val1Field] = Math.min(result[val1Field], Math.min(val1, val2));\n        result[val2Field] = Math.max(result[val2Field], Math.max(val1, val2));\n        return result;\n      }, {\n        [val1Field]: 1 / 0,\n        [val2Field]: -1 / 0,\n        [series.getArgumentField()]: series._getIntervalCenter(intervalStart, intervalEnd)\n      });\n\n      if (!isFinite(result[val1Field]) || !isFinite(result[val2Field])) {\n        if (data.filter(i => null === i[val1Field] && null === i[val2Field]).length === data.length) {\n          result[val1Field] = result[val2Field] = null;\n        } else {\n          return;\n        }\n      }\n\n      return result;\n    }\n\n  },\n  getValueFields: function () {\n    return [this._options.rangeValue1Field || \"val1\", this._options.rangeValue2Field || \"val2\"];\n  },\n\n  getSeriesPairCoord(coord, isArgument) {\n    var oppositeCoord = null;\n    var {\n      rotated: rotated\n    } = this._options;\n    var isOpposite = !isArgument && !rotated || isArgument && rotated;\n    var coordName = isOpposite ? \"vy\" : \"vx\";\n    var minCoordName = rotated ? \"minX\" : \"minY\";\n    var oppositeCoordName = isOpposite ? \"vx\" : \"vy\";\n    var points = this.getPoints();\n\n    for (var i = 0; i < points.length; i++) {\n      var p = points[i];\n      var tmpCoord = void 0;\n\n      if (isArgument) {\n        tmpCoord = p.getCenterCoord()[coordName[1]] === coord ? p[oppositeCoordName] : void 0;\n      } else {\n        var coords = [Math.min(p[coordName], p[minCoordName]), Math.max(p[coordName], p[minCoordName])];\n        tmpCoord = coord >= coords[0] && coord <= coords[1] ? p[oppositeCoordName] : void 0;\n      }\n\n      if (this._checkAxisVisibleAreaCoord(!isArgument, tmpCoord)) {\n        oppositeCoord = tmpCoord;\n        break;\n      }\n    }\n\n    return oppositeCoord;\n  }\n\n};\nchart.rangebar = _extend({}, barSeries, baseRangeSeries);\nchart.rangearea = _extend({}, areaSeries, {\n  _drawPoint: function (options) {\n    var point = options.point;\n\n    if (point.isInVisibleArea()) {\n      point.clearVisibility();\n      point.draw(this._renderer, options.groups);\n\n      this._drawnPoints.push(point);\n\n      if (!point.visibleTopMarker) {\n        point.hideMarker(\"top\");\n      }\n\n      if (!point.visibleBottomMarker) {\n        point.hideMarker(\"bottom\");\n      }\n    } else {\n      point.setInvisibility();\n    }\n  },\n  _prepareSegment: function (points, rotated) {\n    var processedPoints = this._processSinglePointsAreaSegment(points, rotated);\n\n    var processedMinPointsCoords = _map(processedPoints, function (pt) {\n      return pt.getCoords(true);\n    });\n\n    return {\n      line: processedPoints,\n      bottomLine: processedMinPointsCoords,\n      area: _map(processedPoints, function (pt) {\n        return pt.getCoords();\n      }).concat(processedMinPointsCoords.slice().reverse()),\n      singlePointSegment: processedPoints !== points\n    };\n  },\n  _getDefaultSegment: function (segment) {\n    var defaultSegment = areaSeries._getDefaultSegment.call(this, segment);\n\n    defaultSegment.bottomLine = defaultSegment.line;\n    return defaultSegment;\n  },\n  _removeElement: function (element) {\n    areaSeries._removeElement.call(this, element);\n\n    element.bottomLine && element.bottomLine.remove();\n  },\n  _drawElement: function (segment, group) {\n    var drawnElement = areaSeries._drawElement.call(this, segment, group);\n\n    drawnElement.bottomLine = this._bordersGroup && this._createBorderElement(segment.bottomLine, {\n      \"stroke-width\": this._styles.normal.border[\"stroke-width\"]\n    }).append(this._bordersGroup);\n    return drawnElement;\n  },\n  _applyStyle: function (style) {\n    var elementsGroup = this._elementsGroup;\n    var bordersGroup = this._bordersGroup;\n    elementsGroup && elementsGroup.smartAttr(style.elements);\n    bordersGroup && bordersGroup.attr(style.border);\n    (this._graphics || []).forEach(function (graphic) {\n      graphic.line && graphic.line.attr({\n        \"stroke-width\": style.border[\"stroke-width\"]\n      });\n      graphic.bottomLine && graphic.bottomLine.attr({\n        \"stroke-width\": style.border[\"stroke-width\"]\n      });\n    });\n  },\n  _updateElement: function (element, segment, animate, complete) {\n    var bottomLineParams = {\n      points: segment.bottomLine\n    };\n    var bottomBorderElement = element.bottomLine;\n\n    areaSeries._updateElement.apply(this, arguments);\n\n    if (bottomBorderElement) {\n      animate ? bottomBorderElement.animate(bottomLineParams) : bottomBorderElement.attr(bottomLineParams);\n    }\n  }\n}, baseRangeSeries);\nexport { chart };","map":{"version":3,"sources":["/Users/rahulsharma/node_modules/devextreme/esm/viz/series/range_series.js"],"names":["extend","_extend","isDefined","_isDefined","map","_map","noop","_noop","chart","scatterSeries","barChart","areaChart","barSeries","bar","areaSeries","area","baseRangeSeries","areErrorBarsVisible","_createErrorBarGroup","_checkData","data","skippedFields","valueFields","getValueFields","call","minValue","value","getValueRangeInitialValue","_getPointDataSelector","val1Field","val2Field","tagField","getTagField","argumentField","getArgumentField","tag","_processEmptyValue","argument","_defaultAggregator","_aggregators","range","_ref","series","intervalStart","intervalEnd","length","result","reduce","item","val1","val2","Math","min","max","_getIntervalCenter","isFinite","filter","i","_options","rangeValue1Field","rangeValue2Field","getSeriesPairCoord","coord","isArgument","oppositeCoord","rotated","isOpposite","coordName","minCoordName","oppositeCoordName","points","getPoints","p","tmpCoord","getCenterCoord","coords","_checkAxisVisibleAreaCoord","rangebar","rangearea","_drawPoint","options","point","isInVisibleArea","clearVisibility","draw","_renderer","groups","_drawnPoints","push","visibleTopMarker","hideMarker","visibleBottomMarker","setInvisibility","_prepareSegment","processedPoints","_processSinglePointsAreaSegment","processedMinPointsCoords","pt","getCoords","line","bottomLine","concat","slice","reverse","singlePointSegment","_getDefaultSegment","segment","defaultSegment","_removeElement","element","remove","_drawElement","group","drawnElement","_bordersGroup","_createBorderElement","_styles","normal","border","append","_applyStyle","style","elementsGroup","_elementsGroup","bordersGroup","smartAttr","elements","attr","_graphics","forEach","graphic","_updateElement","animate","complete","bottomLineParams","bottomBorderElement","apply","arguments"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/series/range_series.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar _extend = extend;\r\nimport {\r\n    isDefined as _isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    map as _map\r\n} from \"../core/utils\";\r\nimport {\r\n    noop as _noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    chart as scatterSeries\r\n} from \"./scatter_series\";\r\nimport {\r\n    chart as barChart\r\n} from \"./bar_series\";\r\nimport {\r\n    chart as areaChart\r\n} from \"./area_series\";\r\nvar barSeries = barChart.bar;\r\nvar areaSeries = areaChart.area;\r\nvar chart = {};\r\nvar baseRangeSeries = {\r\n    areErrorBarsVisible: _noop,\r\n    _createErrorBarGroup: _noop,\r\n    _checkData: function(data, skippedFields) {\r\n        var valueFields = this.getValueFields();\r\n        return scatterSeries._checkData.call(this, data, skippedFields, {\r\n            minValue: valueFields[0],\r\n            value: valueFields[1]\r\n        }) && data.minValue === data.minValue\r\n    },\r\n    getValueRangeInitialValue: scatterSeries.getValueRangeInitialValue,\r\n    _getPointDataSelector: function(data) {\r\n        var valueFields = this.getValueFields();\r\n        var val1Field = valueFields[0];\r\n        var val2Field = valueFields[1];\r\n        var tagField = this.getTagField();\r\n        var argumentField = this.getArgumentField();\r\n        return data => ({\r\n            tag: data[tagField],\r\n            minValue: this._processEmptyValue(data[val1Field]),\r\n            value: this._processEmptyValue(data[val2Field]),\r\n            argument: data[argumentField],\r\n            data: data\r\n        })\r\n    },\r\n    _defaultAggregator: \"range\",\r\n    _aggregators: {\r\n        range(_ref, series) {\r\n            var {\r\n                intervalStart: intervalStart,\r\n                intervalEnd: intervalEnd,\r\n                data: data\r\n            } = _ref;\r\n            if (!data.length) {\r\n                return\r\n            }\r\n            var valueFields = series.getValueFields();\r\n            var val1Field = valueFields[0];\r\n            var val2Field = valueFields[1];\r\n            var result = data.reduce((result, item) => {\r\n                var val1 = item[val1Field];\r\n                var val2 = item[val2Field];\r\n                if (!_isDefined(val1) || !_isDefined(val2)) {\r\n                    return result\r\n                }\r\n                result[val1Field] = Math.min(result[val1Field], Math.min(val1, val2));\r\n                result[val2Field] = Math.max(result[val2Field], Math.max(val1, val2));\r\n                return result\r\n            }, {\r\n                [val1Field]: 1 / 0,\r\n                [val2Field]: -1 / 0,\r\n                [series.getArgumentField()]: series._getIntervalCenter(intervalStart, intervalEnd)\r\n            });\r\n            if (!isFinite(result[val1Field]) || !isFinite(result[val2Field])) {\r\n                if (data.filter(i => null === i[val1Field] && null === i[val2Field]).length === data.length) {\r\n                    result[val1Field] = result[val2Field] = null\r\n                } else {\r\n                    return\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    },\r\n    getValueFields: function() {\r\n        return [this._options.rangeValue1Field || \"val1\", this._options.rangeValue2Field || \"val2\"]\r\n    },\r\n    getSeriesPairCoord(coord, isArgument) {\r\n        var oppositeCoord = null;\r\n        var {\r\n            rotated: rotated\r\n        } = this._options;\r\n        var isOpposite = !isArgument && !rotated || isArgument && rotated;\r\n        var coordName = isOpposite ? \"vy\" : \"vx\";\r\n        var minCoordName = rotated ? \"minX\" : \"minY\";\r\n        var oppositeCoordName = isOpposite ? \"vx\" : \"vy\";\r\n        var points = this.getPoints();\r\n        for (var i = 0; i < points.length; i++) {\r\n            var p = points[i];\r\n            var tmpCoord = void 0;\r\n            if (isArgument) {\r\n                tmpCoord = p.getCenterCoord()[coordName[1]] === coord ? p[oppositeCoordName] : void 0\r\n            } else {\r\n                var coords = [Math.min(p[coordName], p[minCoordName]), Math.max(p[coordName], p[minCoordName])];\r\n                tmpCoord = coord >= coords[0] && coord <= coords[1] ? p[oppositeCoordName] : void 0\r\n            }\r\n            if (this._checkAxisVisibleAreaCoord(!isArgument, tmpCoord)) {\r\n                oppositeCoord = tmpCoord;\r\n                break\r\n            }\r\n        }\r\n        return oppositeCoord\r\n    }\r\n};\r\nchart.rangebar = _extend({}, barSeries, baseRangeSeries);\r\nchart.rangearea = _extend({}, areaSeries, {\r\n    _drawPoint: function(options) {\r\n        var point = options.point;\r\n        if (point.isInVisibleArea()) {\r\n            point.clearVisibility();\r\n            point.draw(this._renderer, options.groups);\r\n            this._drawnPoints.push(point);\r\n            if (!point.visibleTopMarker) {\r\n                point.hideMarker(\"top\")\r\n            }\r\n            if (!point.visibleBottomMarker) {\r\n                point.hideMarker(\"bottom\")\r\n            }\r\n        } else {\r\n            point.setInvisibility()\r\n        }\r\n    },\r\n    _prepareSegment: function(points, rotated) {\r\n        var processedPoints = this._processSinglePointsAreaSegment(points, rotated);\r\n        var processedMinPointsCoords = _map(processedPoints, (function(pt) {\r\n            return pt.getCoords(true)\r\n        }));\r\n        return {\r\n            line: processedPoints,\r\n            bottomLine: processedMinPointsCoords,\r\n            area: _map(processedPoints, (function(pt) {\r\n                return pt.getCoords()\r\n            })).concat(processedMinPointsCoords.slice().reverse()),\r\n            singlePointSegment: processedPoints !== points\r\n        }\r\n    },\r\n    _getDefaultSegment: function(segment) {\r\n        var defaultSegment = areaSeries._getDefaultSegment.call(this, segment);\r\n        defaultSegment.bottomLine = defaultSegment.line;\r\n        return defaultSegment\r\n    },\r\n    _removeElement: function(element) {\r\n        areaSeries._removeElement.call(this, element);\r\n        element.bottomLine && element.bottomLine.remove()\r\n    },\r\n    _drawElement: function(segment, group) {\r\n        var drawnElement = areaSeries._drawElement.call(this, segment, group);\r\n        drawnElement.bottomLine = this._bordersGroup && this._createBorderElement(segment.bottomLine, {\r\n            \"stroke-width\": this._styles.normal.border[\"stroke-width\"]\r\n        }).append(this._bordersGroup);\r\n        return drawnElement\r\n    },\r\n    _applyStyle: function(style) {\r\n        var elementsGroup = this._elementsGroup;\r\n        var bordersGroup = this._bordersGroup;\r\n        elementsGroup && elementsGroup.smartAttr(style.elements);\r\n        bordersGroup && bordersGroup.attr(style.border);\r\n        (this._graphics || []).forEach((function(graphic) {\r\n            graphic.line && graphic.line.attr({\r\n                \"stroke-width\": style.border[\"stroke-width\"]\r\n            });\r\n            graphic.bottomLine && graphic.bottomLine.attr({\r\n                \"stroke-width\": style.border[\"stroke-width\"]\r\n            })\r\n        }))\r\n    },\r\n    _updateElement: function(element, segment, animate, complete) {\r\n        var bottomLineParams = {\r\n            points: segment.bottomLine\r\n        };\r\n        var bottomBorderElement = element.bottomLine;\r\n        areaSeries._updateElement.apply(this, arguments);\r\n        if (bottomBorderElement) {\r\n            animate ? bottomBorderElement.animate(bottomLineParams) : bottomBorderElement.attr(bottomLineParams)\r\n        }\r\n    }\r\n}, baseRangeSeries);\r\nexport {\r\n    chart\r\n};\r\n"]},"metadata":{},"sourceType":"module"}