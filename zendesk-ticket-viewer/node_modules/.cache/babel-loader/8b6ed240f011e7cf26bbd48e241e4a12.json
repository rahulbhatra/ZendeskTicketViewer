{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/pager/resizable_container.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"contentTemplate\", \"pagerProps\"];\nimport { createComponentVNode, normalizeProps } from \"inferno\";\nimport { InfernoEffect, InfernoComponent } from \"@devextreme/runtime/inferno\";\nimport resizeCallbacks from \"../../../core/utils/resize_callbacks\";\nimport { getElementWidth, getElementStyle } from \"./utils/get_element_width\";\nimport { isDefined } from \"../../../core/utils/type\";\nexport var viewFunction = _ref => {\n  var {\n    contentAttributes: contentAttributes,\n    infoTextRef: infoTextRef,\n    infoTextVisible: infoTextVisible,\n    isLargeDisplayMode: isLargeDisplayMode,\n    pageSizesRef: pageSizesRef,\n    pagesRef: pagesRef,\n    parentRef: parentRef,\n    props: {\n      contentTemplate: Content\n    }\n  } = _ref;\n  return Content(_extends({\n    rootElementRef: parentRef,\n    pageSizesRef: pageSizesRef,\n    infoTextRef: infoTextRef,\n    pagesRef: pagesRef,\n    infoTextVisible: infoTextVisible,\n    isLargeDisplayMode: isLargeDisplayMode\n  }, contentAttributes));\n};\nexport function calculateAdaptivityProps(_ref2) {\n  var {\n    info: infoWidth,\n    pageSizes: pageSizesWidth,\n    pages: pagesWidth,\n    parent: parentWidth\n  } = _ref2;\n  var minimalWidth = pageSizesWidth + pagesWidth + infoWidth;\n  var infoTextVisible = parentWidth - minimalWidth > 0;\n  var isLargeDisplayMode = parentWidth - (pageSizesWidth + pagesWidth) > 0;\n  return {\n    infoTextVisible: infoTextVisible,\n    isLargeDisplayMode: isLargeDisplayMode\n  };\n}\n\nfunction getElementsWidth(_ref3) {\n  var {\n    info: info,\n    pageSizes: pageSizes,\n    pages: pages,\n    parent: parent\n  } = _ref3;\n  var parentWidth = getElementWidth(parent);\n  var pageSizesWidth = getElementWidth(pageSizes);\n  var infoWidth = getElementWidth(info);\n  var pagesHtmlWidth = getElementWidth(pages);\n  return {\n    parent: parentWidth,\n    pageSizes: pageSizesWidth,\n    info: infoWidth + getElementStyle(\"marginLeft\", info) + getElementStyle(\"marginRight\", info),\n    pages: pagesHtmlWidth\n  };\n}\n\nexport var ResizableContainerProps = {};\nimport { createRef as infernoCreateRef } from \"inferno\";\n\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\n\nexport class ResizableContainer extends InfernoComponent {\n  constructor(props) {\n    super(props);\n    this.parentRef = infernoCreateRef();\n    this.pageSizesRef = infernoCreateRef();\n    this.infoTextRef = infernoCreateRef();\n    this.pagesRef = infernoCreateRef();\n    this.state = {\n      infoTextVisible: true,\n      isLargeDisplayMode: true\n    };\n    this.subscribeToResize = this.subscribeToResize.bind(this);\n    this.effectUpdateChildProps = this.effectUpdateChildProps.bind(this);\n    this.updateAdaptivityProps = this.updateAdaptivityProps.bind(this);\n  }\n\n  createEffects() {\n    return [new InfernoEffect(this.subscribeToResize, [this.state.infoTextVisible, this.state.isLargeDisplayMode]), new InfernoEffect(this.effectUpdateChildProps, [this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])];\n  }\n\n  updateEffects() {\n    var _this$_effects$, _this$_effects$2;\n\n    null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.state.infoTextVisible, this.state.isLargeDisplayMode]);\n    null === (_this$_effects$2 = this._effects[1]) || void 0 === _this$_effects$2 ? void 0 : _this$_effects$2.update([this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate]);\n  }\n\n  subscribeToResize() {\n    var callback = () => {\n      this.updateAdaptivityProps();\n    };\n\n    resizeCallbacks.add(callback);\n    return () => {\n      resizeCallbacks.remove(callback);\n    };\n  }\n\n  effectUpdateChildProps() {\n    var parentWidth = this.parentRef.current ? getElementWidth(this.parentRef.current) : 0;\n\n    if (parentWidth > 0) {\n      this.updateAdaptivityProps();\n    }\n  }\n\n  get contentAttributes() {\n    var {\n      className: className,\n      displayMode: displayMode,\n      gridCompatibility: gridCompatibility,\n      hasKnownLastPage: hasKnownLastPage,\n      infoText: infoText,\n      lightModeEnabled: lightModeEnabled,\n      maxPagesCount: maxPagesCount,\n      onKeyDown: onKeyDown,\n      pageCount: pageCount,\n      pageIndex: pageIndex,\n      pageIndexChange: pageIndexChange,\n      pageSize: pageSize,\n      pageSizeChange: pageSizeChange,\n      pageSizes: pageSizes,\n      pagesCountText: pagesCountText,\n      pagesNavigatorVisible: pagesNavigatorVisible,\n      rtlEnabled: rtlEnabled,\n      showInfo: showInfo,\n      showNavigationButtons: showNavigationButtons,\n      showPageSizes: showPageSizes,\n      totalCount: totalCount,\n      visible: visible\n    } = this.props.pagerProps;\n    return _extends({}, this.restAttributes, {\n      pageSize: pageSize,\n      pageIndex: pageIndex,\n      pageIndexChange: pageIndexChange,\n      pageSizeChange: pageSizeChange,\n      gridCompatibility: gridCompatibility,\n      className: className,\n      showInfo: showInfo,\n      infoText: infoText,\n      lightModeEnabled: lightModeEnabled,\n      displayMode: displayMode,\n      maxPagesCount: maxPagesCount,\n      pageCount: pageCount,\n      pagesCountText: pagesCountText,\n      visible: visible,\n      hasKnownLastPage: hasKnownLastPage,\n      pagesNavigatorVisible: pagesNavigatorVisible,\n      showPageSizes: showPageSizes,\n      pageSizes: pageSizes,\n      rtlEnabled: rtlEnabled,\n      showNavigationButtons: showNavigationButtons,\n      totalCount: totalCount,\n      onKeyDown: onKeyDown\n    });\n  }\n\n  updateAdaptivityProps() {\n    var currentElementsWidth = getElementsWidth({\n      parent: this.parentRef.current,\n      pageSizes: this.pageSizesRef.current,\n      info: this.infoTextRef.current,\n      pages: this.pagesRef.current\n    });\n\n    if (isDefined(this.actualAdaptivityProps) && (this.actualAdaptivityProps.infoTextVisible !== this.state.infoTextVisible || this.actualAdaptivityProps.isLargeDisplayMode !== this.state.isLargeDisplayMode)) {\n      return;\n    }\n\n    var isEmpty = !isDefined(this.elementsWidth);\n\n    if (isEmpty) {\n      this.elementsWidth = {};\n    }\n\n    if (isEmpty || this.state.isLargeDisplayMode) {\n      this.elementsWidth.pageSizes = currentElementsWidth.pageSizes;\n      this.elementsWidth.pages = currentElementsWidth.pages;\n    }\n\n    if (isEmpty || this.state.infoTextVisible) {\n      this.elementsWidth.info = currentElementsWidth.info;\n    }\n\n    this.actualAdaptivityProps = calculateAdaptivityProps(_extends({\n      parent: currentElementsWidth.parent\n    }, this.elementsWidth));\n    this.setState(__state_argument => ({\n      infoTextVisible: this.actualAdaptivityProps.infoTextVisible\n    }));\n    this.setState(__state_argument => ({\n      isLargeDisplayMode: this.actualAdaptivityProps.isLargeDisplayMode\n    }));\n  }\n\n  get restAttributes() {\n    var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return restProps;\n  }\n\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props, {\n        contentTemplate: getTemplate(props.contentTemplate)\n      }),\n      infoTextVisible: this.state.infoTextVisible,\n      isLargeDisplayMode: this.state.isLargeDisplayMode,\n      parentRef: this.parentRef,\n      pageSizesRef: this.pageSizesRef,\n      infoTextRef: this.infoTextRef,\n      pagesRef: this.pagesRef,\n      contentAttributes: this.contentAttributes,\n      updateAdaptivityProps: this.updateAdaptivityProps,\n      restAttributes: this.restAttributes\n    });\n  }\n\n}\nResizableContainer.defaultProps = ResizableContainerProps;","map":{"version":3,"sources":["/Users/rahulsharma/node_modules/devextreme/esm/renovation/ui/pager/resizable_container.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","createComponentVNode","normalizeProps","InfernoEffect","InfernoComponent","resizeCallbacks","getElementWidth","getElementStyle","isDefined","viewFunction","_ref","contentAttributes","infoTextRef","infoTextVisible","isLargeDisplayMode","pageSizesRef","pagesRef","parentRef","props","contentTemplate","Content","rootElementRef","calculateAdaptivityProps","_ref2","info","infoWidth","pageSizes","pageSizesWidth","pages","pagesWidth","parent","parentWidth","minimalWidth","getElementsWidth","_ref3","pagesHtmlWidth","ResizableContainerProps","createRef","infernoCreateRef","getTemplate","TemplateProp","defaultProps","ResizableContainer","constructor","state","subscribeToResize","bind","effectUpdateChildProps","updateAdaptivityProps","createEffects","pagerProps","updateEffects","_this$_effects$","_this$_effects$2","_effects","update","callback","add","remove","current","className","displayMode","gridCompatibility","hasKnownLastPage","infoText","lightModeEnabled","maxPagesCount","onKeyDown","pageCount","pageIndex","pageIndexChange","pageSize","pageSizeChange","pagesCountText","pagesNavigatorVisible","rtlEnabled","showInfo","showNavigationButtons","showPageSizes","totalCount","visible","restAttributes","currentElementsWidth","actualAdaptivityProps","isEmpty","elementsWidth","setState","__state_argument","_this$props","restProps","render"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/pager/resizable_container.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"contentTemplate\", \"pagerProps\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport resizeCallbacks from \"../../../core/utils/resize_callbacks\";\r\nimport {\r\n    getElementWidth,\r\n    getElementStyle\r\n} from \"./utils/get_element_width\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        contentAttributes: contentAttributes,\r\n        infoTextRef: infoTextRef,\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode,\r\n        pageSizesRef: pageSizesRef,\r\n        pagesRef: pagesRef,\r\n        parentRef: parentRef,\r\n        props: {\r\n            contentTemplate: Content\r\n        }\r\n    } = _ref;\r\n    return Content(_extends({\r\n        rootElementRef: parentRef,\r\n        pageSizesRef: pageSizesRef,\r\n        infoTextRef: infoTextRef,\r\n        pagesRef: pagesRef,\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode\r\n    }, contentAttributes))\r\n};\r\nexport function calculateAdaptivityProps(_ref2) {\r\n    var {\r\n        info: infoWidth,\r\n        pageSizes: pageSizesWidth,\r\n        pages: pagesWidth,\r\n        parent: parentWidth\r\n    } = _ref2;\r\n    var minimalWidth = pageSizesWidth + pagesWidth + infoWidth;\r\n    var infoTextVisible = parentWidth - minimalWidth > 0;\r\n    var isLargeDisplayMode = parentWidth - (pageSizesWidth + pagesWidth) > 0;\r\n    return {\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode\r\n    }\r\n}\r\n\r\nfunction getElementsWidth(_ref3) {\r\n    var {\r\n        info: info,\r\n        pageSizes: pageSizes,\r\n        pages: pages,\r\n        parent: parent\r\n    } = _ref3;\r\n    var parentWidth = getElementWidth(parent);\r\n    var pageSizesWidth = getElementWidth(pageSizes);\r\n    var infoWidth = getElementWidth(info);\r\n    var pagesHtmlWidth = getElementWidth(pages);\r\n    return {\r\n        parent: parentWidth,\r\n        pageSizes: pageSizesWidth,\r\n        info: infoWidth + getElementStyle(\"marginLeft\", info) + getElementStyle(\"marginRight\", info),\r\n        pages: pagesHtmlWidth\r\n    }\r\n}\r\nexport var ResizableContainerProps = {};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\r\nexport class ResizableContainer extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.parentRef = infernoCreateRef();\r\n        this.pageSizesRef = infernoCreateRef();\r\n        this.infoTextRef = infernoCreateRef();\r\n        this.pagesRef = infernoCreateRef();\r\n        this.state = {\r\n            infoTextVisible: true,\r\n            isLargeDisplayMode: true\r\n        };\r\n        this.subscribeToResize = this.subscribeToResize.bind(this);\r\n        this.effectUpdateChildProps = this.effectUpdateChildProps.bind(this);\r\n        this.updateAdaptivityProps = this.updateAdaptivityProps.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.subscribeToResize, [this.state.infoTextVisible, this.state.isLargeDisplayMode]), new InfernoEffect(this.effectUpdateChildProps, [this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$, _this$_effects$2;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.state.infoTextVisible, this.state.isLargeDisplayMode]);\r\n        null === (_this$_effects$2 = this._effects[1]) || void 0 === _this$_effects$2 ? void 0 : _this$_effects$2.update([this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])\r\n    }\r\n    subscribeToResize() {\r\n        var callback = () => {\r\n            this.updateAdaptivityProps()\r\n        };\r\n        resizeCallbacks.add(callback);\r\n        return () => {\r\n            resizeCallbacks.remove(callback)\r\n        }\r\n    }\r\n    effectUpdateChildProps() {\r\n        var parentWidth = this.parentRef.current ? getElementWidth(this.parentRef.current) : 0;\r\n        if (parentWidth > 0) {\r\n            this.updateAdaptivityProps()\r\n        }\r\n    }\r\n    get contentAttributes() {\r\n        var {\r\n            className: className,\r\n            displayMode: displayMode,\r\n            gridCompatibility: gridCompatibility,\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            infoText: infoText,\r\n            lightModeEnabled: lightModeEnabled,\r\n            maxPagesCount: maxPagesCount,\r\n            onKeyDown: onKeyDown,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes,\r\n            pagesCountText: pagesCountText,\r\n            pagesNavigatorVisible: pagesNavigatorVisible,\r\n            rtlEnabled: rtlEnabled,\r\n            showInfo: showInfo,\r\n            showNavigationButtons: showNavigationButtons,\r\n            showPageSizes: showPageSizes,\r\n            totalCount: totalCount,\r\n            visible: visible\r\n        } = this.props.pagerProps;\r\n        return _extends({}, this.restAttributes, {\r\n            pageSize: pageSize,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSizeChange: pageSizeChange,\r\n            gridCompatibility: gridCompatibility,\r\n            className: className,\r\n            showInfo: showInfo,\r\n            infoText: infoText,\r\n            lightModeEnabled: lightModeEnabled,\r\n            displayMode: displayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pagesCountText: pagesCountText,\r\n            visible: visible,\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            pagesNavigatorVisible: pagesNavigatorVisible,\r\n            showPageSizes: showPageSizes,\r\n            pageSizes: pageSizes,\r\n            rtlEnabled: rtlEnabled,\r\n            showNavigationButtons: showNavigationButtons,\r\n            totalCount: totalCount,\r\n            onKeyDown: onKeyDown\r\n        })\r\n    }\r\n    updateAdaptivityProps() {\r\n        var currentElementsWidth = getElementsWidth({\r\n            parent: this.parentRef.current,\r\n            pageSizes: this.pageSizesRef.current,\r\n            info: this.infoTextRef.current,\r\n            pages: this.pagesRef.current\r\n        });\r\n        if (isDefined(this.actualAdaptivityProps) && (this.actualAdaptivityProps.infoTextVisible !== this.state.infoTextVisible || this.actualAdaptivityProps.isLargeDisplayMode !== this.state.isLargeDisplayMode)) {\r\n            return\r\n        }\r\n        var isEmpty = !isDefined(this.elementsWidth);\r\n        if (isEmpty) {\r\n            this.elementsWidth = {}\r\n        }\r\n        if (isEmpty || this.state.isLargeDisplayMode) {\r\n            this.elementsWidth.pageSizes = currentElementsWidth.pageSizes;\r\n            this.elementsWidth.pages = currentElementsWidth.pages\r\n        }\r\n        if (isEmpty || this.state.infoTextVisible) {\r\n            this.elementsWidth.info = currentElementsWidth.info\r\n        }\r\n        this.actualAdaptivityProps = calculateAdaptivityProps(_extends({\r\n            parent: currentElementsWidth.parent\r\n        }, this.elementsWidth));\r\n        this.setState(__state_argument => ({\r\n            infoTextVisible: this.actualAdaptivityProps.infoTextVisible\r\n        }));\r\n        this.setState(__state_argument => ({\r\n            isLargeDisplayMode: this.actualAdaptivityProps.isLargeDisplayMode\r\n        }))\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                contentTemplate: getTemplate(props.contentTemplate)\r\n            }),\r\n            infoTextVisible: this.state.infoTextVisible,\r\n            isLargeDisplayMode: this.state.isLargeDisplayMode,\r\n            parentRef: this.parentRef,\r\n            pageSizesRef: this.pageSizesRef,\r\n            infoTextRef: this.infoTextRef,\r\n            pagesRef: this.pagesRef,\r\n            contentAttributes: this.contentAttributes,\r\n            updateAdaptivityProps: this.updateAdaptivityProps,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nResizableContainer.defaultProps = ResizableContainerProps;\r\n"]},"metadata":{},"sourceType":"module"}