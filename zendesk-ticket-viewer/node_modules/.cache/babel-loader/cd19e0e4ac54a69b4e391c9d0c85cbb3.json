{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/date_box/ui.date_box.strategy.native.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { noop } from \"../../core/utils/common\";\nimport DateBoxStrategy from \"./ui.date_box.strategy\";\nimport { inputType } from \"../../core/utils/support\";\nimport { inArray } from \"../../core/utils/array\";\nimport dateUtils from \"./ui.date_utils\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nimport { extend } from \"../../core/utils/extend\";\nimport devices from \"../../core/devices\";\nvar NativeStrategy = DateBoxStrategy.inherit({\n  NAME: \"Native\",\n  popupConfig: function (_popupConfig) {\n    return extend({}, _popupConfig, {\n      width: \"auto\"\n    });\n  },\n  getParsedText: function (text) {\n    if (!text) {\n      return null;\n    }\n\n    if (\"datetime\" === this.dateBox.option(\"type\")) {\n      return new Date(text.replace(/-/g, \"/\").replace(\"T\", \" \").split(\".\")[0]);\n    }\n\n    return dateUtils.fromStandardDateFormat(text);\n  },\n  renderPopupContent: noop,\n  _getWidgetName: noop,\n  _getWidgetOptions: noop,\n  _getDateBoxType: function () {\n    var type = this.dateBox.option(\"type\");\n\n    if (-1 === inArray(type, dateUtils.SUPPORTED_FORMATS)) {\n      type = \"date\";\n    } else if (\"datetime\" === type && !inputType(type)) {\n      type = \"datetime-local\";\n    }\n\n    return type;\n  },\n  customizeButtons: function () {\n    var dropDownButton = this.dateBox.getButton(\"dropDown\");\n\n    if (devices.real().android && dropDownButton) {\n      dropDownButton.on(\"click\", function () {\n        this.dateBox._input().get(0).click();\n      }.bind(this));\n    }\n  },\n  getDefaultOptions: function () {\n    return {\n      mode: this._getDateBoxType()\n    };\n  },\n  getDisplayFormat: function (displayFormat) {\n    var type = this._getDateBoxType();\n\n    return displayFormat || dateUtils.FORMATS_MAP[type];\n  },\n  renderInputMinMax: function ($input) {\n    $input.attr({\n      min: dateSerialization.serializeDate(this.dateBox.dateOption(\"min\"), \"yyyy-MM-dd\"),\n      max: dateSerialization.serializeDate(this.dateBox.dateOption(\"max\"), \"yyyy-MM-dd\")\n    });\n  }\n});\nexport default NativeStrategy;","map":{"version":3,"sources":["/Users/rahulsharma/node_modules/devextreme/esm/ui/date_box/ui.date_box.strategy.native.js"],"names":["noop","DateBoxStrategy","inputType","inArray","dateUtils","dateSerialization","extend","devices","NativeStrategy","inherit","NAME","popupConfig","_popupConfig","width","getParsedText","text","dateBox","option","Date","replace","split","fromStandardDateFormat","renderPopupContent","_getWidgetName","_getWidgetOptions","_getDateBoxType","type","SUPPORTED_FORMATS","customizeButtons","dropDownButton","getButton","real","android","on","_input","get","click","bind","getDefaultOptions","mode","getDisplayFormat","displayFormat","FORMATS_MAP","renderInputMinMax","$input","attr","min","serializeDate","dateOption","max"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/date_box/ui.date_box.strategy.native.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport DateBoxStrategy from \"./ui.date_box.strategy\";\r\nimport {\r\n    inputType\r\n} from \"../../core/utils/support\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport dateUtils from \"./ui.date_utils\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport devices from \"../../core/devices\";\r\nvar NativeStrategy = DateBoxStrategy.inherit({\r\n    NAME: \"Native\",\r\n    popupConfig: function(_popupConfig) {\r\n        return extend({}, _popupConfig, {\r\n            width: \"auto\"\r\n        })\r\n    },\r\n    getParsedText: function(text) {\r\n        if (!text) {\r\n            return null\r\n        }\r\n        if (\"datetime\" === this.dateBox.option(\"type\")) {\r\n            return new Date(text.replace(/-/g, \"/\").replace(\"T\", \" \").split(\".\")[0])\r\n        }\r\n        return dateUtils.fromStandardDateFormat(text)\r\n    },\r\n    renderPopupContent: noop,\r\n    _getWidgetName: noop,\r\n    _getWidgetOptions: noop,\r\n    _getDateBoxType: function() {\r\n        var type = this.dateBox.option(\"type\");\r\n        if (-1 === inArray(type, dateUtils.SUPPORTED_FORMATS)) {\r\n            type = \"date\"\r\n        } else if (\"datetime\" === type && !inputType(type)) {\r\n            type = \"datetime-local\"\r\n        }\r\n        return type\r\n    },\r\n    customizeButtons: function() {\r\n        var dropDownButton = this.dateBox.getButton(\"dropDown\");\r\n        if (devices.real().android && dropDownButton) {\r\n            dropDownButton.on(\"click\", function() {\r\n                this.dateBox._input().get(0).click()\r\n            }.bind(this))\r\n        }\r\n    },\r\n    getDefaultOptions: function() {\r\n        return {\r\n            mode: this._getDateBoxType()\r\n        }\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        var type = this._getDateBoxType();\r\n        return displayFormat || dateUtils.FORMATS_MAP[type]\r\n    },\r\n    renderInputMinMax: function($input) {\r\n        $input.attr({\r\n            min: dateSerialization.serializeDate(this.dateBox.dateOption(\"min\"), \"yyyy-MM-dd\"),\r\n            max: dateSerialization.serializeDate(this.dateBox.dateOption(\"max\"), \"yyyy-MM-dd\")\r\n        })\r\n    }\r\n});\r\nexport default NativeStrategy;\r\n"]},"metadata":{},"sourceType":"module"}