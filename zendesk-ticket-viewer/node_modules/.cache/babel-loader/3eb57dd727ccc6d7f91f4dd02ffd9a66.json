{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsharma/Documents/Zendesk/zendesk-ticket-viewer/src/components/tickets/tickets.js\",\n    _s = $RefreshSig$();\n\nimport { DataGrid } from '@mui/x-data-grid';\nimport { createTheme } from '@mui/material/styles';\nimport { useNavigate } from 'react-router';\nimport axios from 'axios';\nimport Toast from '../toast/toast';\nimport { useState, useEffect } from 'react';\nimport { Box } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nexport default function Tickets() {\n  _s();\n\n  const navigate = useNavigate();\n  const [toastOpen, setToastOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastSeverity, setToastSevertiy] = useState('');\n  const [rows, setRows] = useState([]);\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: '40'\n  }, {\n    field: 'subject',\n    headerName: 'Subject',\n    width: '600'\n  }, {\n    field: 'requester',\n    headerName: 'Requester',\n    width: '200'\n  }, {\n    field: 'requester_updated',\n    headerName: 'Requester Updated',\n    width: '200'\n  }, {\n    field: 'group_id',\n    headerName: 'Group Id',\n    width: '150'\n  }, {\n    field: 'assignee',\n    headerName: 'Assignee',\n    width: '150'\n  }]; // const processRows = (tickets) => {\n  //   var dataArray = Array(tickets.length);\n  //   for(var i = 0; i <= tickets.length; i ++) {\n  //     dataArray[i]= {\n  //       id : tickets[i].id\n  //     }\n  //   }\n  //   setRows(dataArray);\n  // }\n\n  const getData = async () => {\n    await axios.post('http://localhost:4000/api/tickets').then(res => {\n      console.log(res.data.rows);\n      setRows(res.data.rows);\n      setToastOpen(true);\n      setToastMessage('Successfully Loaded Tickets');\n      setToastSevertiy('success');\n    }).catch(error => {\n      console.log(error);\n      setToastOpen(true);\n      setToastMessage('Email Password is not matching!');\n      setToastSevertiy('error');\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      open: toastOpen,\n      setOpen: setToastOpen,\n      message: toastMessage,\n      severity: toastSeverity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '90vh',\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 15,\n        rowsPerPageOptions: [15],\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tickets, \"U+pMfoUVUGAmfPe/p7VpItfEIy8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Tickets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tickets\");","map":{"version":3,"sources":["/Users/rahulsharma/Documents/Zendesk/zendesk-ticket-viewer/src/components/tickets/tickets.js"],"names":["DataGrid","createTheme","useNavigate","axios","Toast","useState","useEffect","Box","theme","Tickets","navigate","toastOpen","setToastOpen","toastMessage","setToastMessage","toastSeverity","setToastSevertiy","rows","setRows","columns","field","headerName","width","getData","post","then","res","console","log","data","catch","error","height"],"mappings":"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","sourcesContent":["import { DataGrid } from '@mui/x-data-grid';\nimport { createTheme } from '@mui/material/styles';\nimport { useNavigate } from 'react-router';\nimport axios from 'axios';\nimport Toast from '../toast/toast';\nimport { useState, useEffect } from 'react';\nimport { Box } from '@mui/system';\n\n\nconst theme = createTheme();\n\nexport default function Tickets() {\n  const navigate = useNavigate();\n  const [toastOpen, setToastOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastSeverity, setToastSevertiy] = useState('');\n  const [rows, setRows] = useState([]);\n  const columns = [\n    { field: 'id', headerName: 'ID', width: '40'},\n    { field: 'subject', headerName: 'Subject', width: '600' },\n    { field: 'requester', headerName: 'Requester', width: '200' },\n    { field: 'requester_updated', headerName: 'Requester Updated', width: '200' },\n    { field: 'group_id', headerName: 'Group Id', width: '150'},\n    { field: 'assignee', headerName: 'Assignee', width: '150'}\n  ];\n\n  // const processRows = (tickets) => {\n  //   var dataArray = Array(tickets.length);\n  //   for(var i = 0; i <= tickets.length; i ++) {\n  //     dataArray[i]= {\n  //       id : tickets[i].id\n  //     }\n  //   }\n  //   setRows(dataArray);\n  // }\n\n  \n  const getData = async () => {\n    await axios.post('http://localhost:4000/api/tickets')\n      .then(res => {\n        console.log(res.data.rows);\n        setRows(res.data.rows);\n        setToastOpen(true);\n        setToastMessage('Successfully Loaded Tickets');\n        setToastSevertiy('success');\n        \n      })\n      .catch(error => {\n        console.log(error);\n        setToastOpen(true);\n        setToastMessage('Email Password is not matching!');\n        setToastSevertiy('error');\n      });\n    }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <Box sx={{width: '100%'}}>\n      <Toast open={toastOpen} setOpen={setToastOpen} message={toastMessage} severity={toastSeverity} />\n      <div style={{ height: '90vh', width: \"100%\" }}>\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          pageSize={15}\n          rowsPerPageOptions={[15]}\n          checkboxSelection\n        />\n      </div>\n    </ Box>\n  );\n}"]},"metadata":{},"sourceType":"module"}