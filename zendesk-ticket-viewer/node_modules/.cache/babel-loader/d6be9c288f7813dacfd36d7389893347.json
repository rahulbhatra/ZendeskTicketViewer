{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsharma/Documents/Zendesk/zendesk-ticket-viewer/src/components/tickets/tickets.js\",\n    _s = $RefreshSig$();\n\nimport { DataGrid } from '@mui/x-data-grid';\nimport { createTheme } from '@mui/material/styles';\nimport { useNavigate } from 'react-router';\nimport axios from 'axios';\nimport Toast from '../toast/toast';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nexport default function Tickets() {\n  _s();\n\n  const navigate = useNavigate();\n  const [toastOpen, setToastOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastSeverity, setToastSevertiy] = useState('');\n  const [rows, setRows] = useState([]);\n  const columns = [{\n    field: 'id',\n    headerName: 'ID'\n  }, {\n    field: 'subject',\n    headerName: 'Subject'\n  }, {\n    field: 'requester_id',\n    headerName: 'Requester Id'\n  }, {\n    field: 'group_id',\n    headerName: 'Group Id'\n  }, {\n    field: 'assignee_id',\n    headerName: 'Assignee Id'\n  }];\n\n  const processRows = tickets => {\n    var dataArray = Array(tickets.length);\n\n    for (var i = 0; i <= tickets.length; i++) {\n      dataArray[i] = {\n        id: tickets[i].id\n      };\n    }\n\n    setRows(dataArray);\n  };\n\n  const getData = async () => {\n    await axios.post('http://localhost:4000/api/tickets').then(res => {\n      console.log(res.data.rows);\n      processRows(res.data.rows);\n      setToastOpen(true);\n      setToastMessage('Successfully Loaded Tickets');\n      setToastSevertiy('success');\n    }).catch(error => {\n      console.log(error);\n      setToastOpen(true);\n      setToastMessage('Email Password is not matching!');\n      setToastSevertiy('error');\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      open: toastOpen,\n      setOpen: setToastOpen,\n      message: toastMessage,\n      severity: toastSeverity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 15,\n      rowsPerPageOptions: [15],\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Tickets, \"U+pMfoUVUGAmfPe/p7VpItfEIy8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Tickets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tickets\");","map":{"version":3,"sources":["/Users/rahulsharma/Documents/Zendesk/zendesk-ticket-viewer/src/components/tickets/tickets.js"],"names":["DataGrid","createTheme","useNavigate","axios","Toast","useState","useEffect","theme","Tickets","navigate","toastOpen","setToastOpen","toastMessage","setToastMessage","toastSeverity","setToastSevertiy","rows","setRows","columns","field","headerName","processRows","tickets","dataArray","Array","length","i","id","getData","post","then","res","console","log","data","catch","error"],"mappings":"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","sourcesContent":["import { DataGrid } from '@mui/x-data-grid';\nimport { createTheme } from '@mui/material/styles';\nimport { useNavigate } from 'react-router';\nimport axios from 'axios';\nimport Toast from '../toast/toast';\nimport { useState, useEffect } from 'react';\n\n\nconst theme = createTheme();\n\nexport default function Tickets() {\n  const navigate = useNavigate();\n  const [toastOpen, setToastOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastSeverity, setToastSevertiy] = useState('');\n  const [rows, setRows] = useState([]);\n  const columns = [\n    { field: 'id', headerName: 'ID' },\n    { field: 'subject', headerName: 'Subject' },\n    { field: 'requester_id', headerName: 'Requester Id'},\n    { field: 'group_id', headerName: 'Group Id'},\n    { field: 'assignee_id', headerName: 'Assignee Id'}\n  ];\n\n  const processRows = (tickets) => {\n    var dataArray = Array(tickets.length);\n    for(var i = 0; i <= tickets.length; i ++) {\n      dataArray[i]= {\n        id : tickets[i].id\n      }\n    }\n    setRows(dataArray);\n  }\n\n  \n  const getData = async () => {\n    await axios.post('http://localhost:4000/api/tickets')\n      .then(res => {\n        console.log(res.data.rows);\n        processRows(res.data.rows);\n        setToastOpen(true);\n        setToastMessage('Successfully Loaded Tickets');\n        setToastSevertiy('success');\n        \n      })\n      .catch(error => {\n        console.log(error);\n        setToastOpen(true);\n        setToastMessage('Email Password is not matching!');\n        setToastSevertiy('error');\n      });\n    }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <>\n      <Toast open={toastOpen} setOpen={setToastOpen} message={toastMessage} severity={toastSeverity} />\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={15}\n        rowsPerPageOptions={[15]}\n        checkboxSelection\n      />\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}