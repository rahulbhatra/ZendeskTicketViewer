{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_columns.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getWidth, getOuterWidth } from \"../../core/utils/size\";\nimport { hasWindow } from \"../../core/utils/window\";\nimport { createColumnsInfo } from \"./ui.grid_core.virtual_columns_core\";\nimport { isDefined } from \"../../core/utils/type\";\nvar DEFAULT_COLUMN_WIDTH = 50;\nvar VirtualScrollingRowsViewExtender = {\n  _resizeCore: function () {\n    this.callBase.apply(this, arguments);\n\n    this._columnsController.resize();\n  },\n  _handleScroll: function (e) {\n    var that = this;\n    var scrollable = this.getScrollable();\n    var left = e.scrollOffset.left;\n    that.callBase.apply(that, arguments);\n\n    if (that.option(\"rtlEnabled\") && scrollable) {\n      left = getWidth(scrollable.$content()) - getWidth(scrollable.$element()) - left;\n    }\n\n    that._columnsController.setScrollPosition(left);\n  }\n};\nvar HeaderViewExtender = {\n  _renderCore: function () {\n    this.callBase.apply(this, arguments);\n\n    if (this._columnsController.isVirtualMode()) {\n      this._updateScrollLeftPosition();\n    }\n  }\n};\n\nvar ColumnsControllerExtender = function () {\n  var getWidths = function (columns) {\n    return columns.map(column => column.visibleWidth || parseFloat(column.width) || DEFAULT_COLUMN_WIDTH);\n  };\n\n  var members = {\n    init: function () {\n      this.callBase();\n      this._beginPageIndex = 0;\n      this._endPageIndex = 0;\n      this._position = 0;\n      this._virtualVisibleColumns = {};\n    },\n    resetColumnsCache: function () {\n      this.callBase();\n      this._virtualVisibleColumns = {};\n    },\n    getBeginPageIndex: function (position) {\n      var visibleColumns = this.getVisibleColumns(void 0, true);\n      var widths = getWidths(visibleColumns);\n      var currentPosition = 0;\n\n      for (var index = 0; index < widths.length; index++) {\n        if (currentPosition >= position) {\n          return Math.floor(index / this.getColumnPageSize());\n        }\n\n        currentPosition += widths[index];\n      }\n\n      return 0;\n    },\n    getTotalWidth: function () {\n      var width = this.option(\"width\");\n\n      if (\"number\" === typeof width) {\n        return width;\n      }\n\n      return this.getController(\"resizing\")._lastWidth || getOuterWidth(this.component.$element());\n    },\n    getEndPageIndex: function (position) {\n      var visibleColumns = this.getVisibleColumns(void 0, true);\n      var widths = getWidths(visibleColumns);\n      var currentPosition = 0;\n      position += this.getTotalWidth();\n\n      for (var index = 0; index < widths.length; index++) {\n        if (currentPosition >= position) {\n          return Math.ceil(index / this.getColumnPageSize());\n        }\n\n        currentPosition += widths[index];\n      }\n\n      return Math.ceil(widths.length / this.getColumnPageSize());\n    },\n    getColumnPageSize: function () {\n      return this.option(\"scrolling.columnPageSize\");\n    },\n    _fireColumnsChanged: function () {\n      var date = new Date();\n      this.columnsChanged.fire({\n        optionNames: {\n          all: true,\n          length: 1\n        },\n        changeTypes: {\n          columns: true,\n          virtualColumnsScrolling: true,\n          length: 2\n        }\n      });\n      this._renderTime = new Date() - date;\n    },\n    getScrollingTimeout: function () {\n      var renderingThreshold = this.option(\"scrolling.columnRenderingThreshold\");\n      var renderAsync = this.option(\"scrolling.renderAsync\");\n      var scrollingTimeout = 0;\n\n      if (!isDefined(renderAsync) && this._renderTime > renderingThreshold || renderAsync) {\n        scrollingTimeout = this.option(\"scrolling.timeout\");\n      }\n\n      return scrollingTimeout;\n    },\n    setScrollPosition: function (position) {\n      var scrollingTimeout = this.getScrollingTimeout();\n\n      if (scrollingTimeout > 0) {\n        clearTimeout(this._changedTimeout);\n        this._changedTimeout = setTimeout(() => {\n          this._setScrollPositionCore(position);\n        }, scrollingTimeout);\n      } else {\n        this._setScrollPositionCore(position);\n      }\n    },\n    isVirtualMode: function () {\n      return hasWindow() && \"virtual\" === this.option(\"scrolling.columnRenderingMode\");\n    },\n    resize: function () {\n      this._setScrollPositionCore(this._position);\n    },\n    _setScrollPositionCore: function (position) {\n      if (this.isVirtualMode()) {\n        var beginPageIndex = this.getBeginPageIndex(position);\n        var endPageIndex = this.getEndPageIndex(position);\n        var needColumnsChanged = position < this._position ? this._beginPageIndex > beginPageIndex : this._endPageIndex < endPageIndex;\n        this._position = position;\n\n        if (needColumnsChanged) {\n          this._beginPageIndex = beginPageIndex;\n          this._endPageIndex = endPageIndex;\n\n          this._fireColumnsChanged();\n        }\n      }\n    },\n    getFixedColumns: function (rowIndex, isBase) {\n      var fixedColumns = this.callBase(rowIndex);\n\n      if (this.isVirtualMode() && !isBase && fixedColumns.length) {\n        var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\n        fixedColumns[transparentColumnIndex].colspan = this.getVisibleColumns().length - this.callBase().length + 1;\n        return fixedColumns;\n      }\n\n      return fixedColumns;\n    },\n    getVisibleColumns: function (rowIndex, isBase) {\n      if (isBase || !this.isVirtualMode()) {\n        return this.callBase(rowIndex);\n      }\n\n      if (!this._beginPageIndex && !this._endPageIndex) {\n        this._beginPageIndex = this.getBeginPageIndex(this._position);\n        this._endPageIndex = this.getEndPageIndex(this._position);\n      }\n\n      var beginPageIndex = this._beginPageIndex;\n      var endPageIndex = this._endPageIndex;\n      var visibleColumnsHash = rowIndex + \"-\" + beginPageIndex + \"-\" + endPageIndex;\n\n      if (this._virtualVisibleColumns[visibleColumnsHash]) {\n        return this._virtualVisibleColumns[visibleColumnsHash];\n      }\n\n      var visibleColumns = this.callBase();\n      var rowCount = this.getRowCount();\n      var pageSize = this.getColumnPageSize();\n      var startIndex = beginPageIndex * pageSize;\n      var endIndex = endPageIndex * pageSize;\n      var fixedColumns = this.getFixedColumns(void 0, true);\n      var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\n      var beginFixedColumnCount = fixedColumns.length ? transparentColumnIndex : 0;\n      var beginFixedColumns = visibleColumns.slice(0, beginFixedColumnCount);\n      var beginColumns = visibleColumns.slice(beginFixedColumnCount, startIndex);\n      var beginWidth = getWidths(beginColumns).reduce((a, b) => a + b, 0);\n\n      if (!beginWidth) {\n        startIndex = 0;\n      }\n\n      var endFixedColumnCount = fixedColumns.length ? fixedColumns.length - transparentColumnIndex - 1 : 0;\n      var endFixedColumns = visibleColumns.slice(visibleColumns.length - endFixedColumnCount);\n      var endColumns = visibleColumns.slice(endIndex, visibleColumns.length - endFixedColumnCount);\n      var endWidth = getWidths(endColumns).reduce((a, b) => a + b, 0);\n\n      if (!endWidth) {\n        endIndex = visibleColumns.length;\n      }\n\n      if (rowCount > 1 && \"number\" === typeof rowIndex) {\n        var columnsInfo = [];\n\n        for (var i = 0; i < rowCount; i++) {\n          columnsInfo.push(this.callBase(i));\n        }\n\n        beginFixedColumns = createColumnsInfo(columnsInfo, 0, beginFixedColumns.length)[rowIndex] || [];\n        endFixedColumns = createColumnsInfo(columnsInfo, visibleColumns.length - endFixedColumns.length, visibleColumns.length)[rowIndex] || [];\n        visibleColumns = createColumnsInfo(columnsInfo, startIndex, endIndex)[rowIndex] || [];\n      } else {\n        visibleColumns = visibleColumns.slice(startIndex, endIndex);\n      }\n\n      if (beginWidth) {\n        visibleColumns.unshift({\n          command: \"virtual\",\n          width: beginWidth\n        });\n        visibleColumns = beginFixedColumns.concat(visibleColumns);\n      }\n\n      if (endWidth) {\n        visibleColumns.push({\n          command: \"virtual\",\n          width: endWidth\n        });\n        visibleColumns = visibleColumns.concat(endFixedColumns);\n      }\n\n      this._virtualVisibleColumns[visibleColumnsHash] = visibleColumns;\n      return visibleColumns;\n    },\n    getColumnIndexOffset: function () {\n      var offset = 0;\n\n      if (this._beginPageIndex > 0) {\n        var fixedColumns = this.getFixedColumns();\n        var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\n        var leftFixedColumnCount = transparentColumnIndex >= 0 ? transparentColumnIndex : 0;\n        offset = this._beginPageIndex * this.getColumnPageSize() - leftFixedColumnCount - 1;\n      }\n\n      return offset > 0 ? offset : 0;\n    },\n    dispose: function () {\n      clearTimeout(this._changedTimeout);\n      this.callBase.apply(this, arguments);\n    }\n  };\n  return members;\n}();\n\nexport var virtualColumnsModule = {\n  defaultOptions: function () {\n    return {\n      scrolling: {\n        columnRenderingMode: \"standard\",\n        columnPageSize: 5,\n        columnRenderingThreshold: 300\n      }\n    };\n  },\n  extenders: {\n    controllers: {\n      columns: ColumnsControllerExtender\n    },\n    views: {\n      columnHeadersView: HeaderViewExtender,\n      rowsView: VirtualScrollingRowsViewExtender\n    }\n  }\n};","map":{"version":3,"sources":["/Users/rahulsharma/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_columns.js"],"names":["getWidth","getOuterWidth","hasWindow","createColumnsInfo","isDefined","DEFAULT_COLUMN_WIDTH","VirtualScrollingRowsViewExtender","_resizeCore","callBase","apply","arguments","_columnsController","resize","_handleScroll","e","that","scrollable","getScrollable","left","scrollOffset","option","$content","$element","setScrollPosition","HeaderViewExtender","_renderCore","isVirtualMode","_updateScrollLeftPosition","ColumnsControllerExtender","getWidths","columns","map","column","visibleWidth","parseFloat","width","members","init","_beginPageIndex","_endPageIndex","_position","_virtualVisibleColumns","resetColumnsCache","getBeginPageIndex","position","visibleColumns","getVisibleColumns","widths","currentPosition","index","length","Math","floor","getColumnPageSize","getTotalWidth","getController","_lastWidth","component","getEndPageIndex","ceil","_fireColumnsChanged","date","Date","columnsChanged","fire","optionNames","all","changeTypes","virtualColumnsScrolling","_renderTime","getScrollingTimeout","renderingThreshold","renderAsync","scrollingTimeout","clearTimeout","_changedTimeout","setTimeout","_setScrollPositionCore","beginPageIndex","endPageIndex","needColumnsChanged","getFixedColumns","rowIndex","isBase","fixedColumns","transparentColumnIndex","c","command","indexOf","colspan","visibleColumnsHash","rowCount","getRowCount","pageSize","startIndex","endIndex","beginFixedColumnCount","beginFixedColumns","slice","beginColumns","beginWidth","reduce","a","b","endFixedColumnCount","endFixedColumns","endColumns","endWidth","columnsInfo","i","push","unshift","concat","getColumnIndexOffset","offset","leftFixedColumnCount","dispose","virtualColumnsModule","defaultOptions","scrolling","columnRenderingMode","columnPageSize","columnRenderingThreshold","extenders","controllers","views","columnHeadersView","rowsView"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_columns.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth,\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    createColumnsInfo\r\n} from \"./ui.grid_core.virtual_columns_core\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nvar DEFAULT_COLUMN_WIDTH = 50;\r\nvar VirtualScrollingRowsViewExtender = {\r\n    _resizeCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._columnsController.resize()\r\n    },\r\n    _handleScroll: function(e) {\r\n        var that = this;\r\n        var scrollable = this.getScrollable();\r\n        var left = e.scrollOffset.left;\r\n        that.callBase.apply(that, arguments);\r\n        if (that.option(\"rtlEnabled\") && scrollable) {\r\n            left = getWidth(scrollable.$content()) - getWidth(scrollable.$element()) - left\r\n        }\r\n        that._columnsController.setScrollPosition(left)\r\n    }\r\n};\r\nvar HeaderViewExtender = {\r\n    _renderCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        if (this._columnsController.isVirtualMode()) {\r\n            this._updateScrollLeftPosition()\r\n        }\r\n    }\r\n};\r\nvar ColumnsControllerExtender = function() {\r\n    var getWidths = function(columns) {\r\n        return columns.map(column => column.visibleWidth || parseFloat(column.width) || DEFAULT_COLUMN_WIDTH)\r\n    };\r\n    var members = {\r\n        init: function() {\r\n            this.callBase();\r\n            this._beginPageIndex = 0;\r\n            this._endPageIndex = 0;\r\n            this._position = 0;\r\n            this._virtualVisibleColumns = {}\r\n        },\r\n        resetColumnsCache: function() {\r\n            this.callBase();\r\n            this._virtualVisibleColumns = {}\r\n        },\r\n        getBeginPageIndex: function(position) {\r\n            var visibleColumns = this.getVisibleColumns(void 0, true);\r\n            var widths = getWidths(visibleColumns);\r\n            var currentPosition = 0;\r\n            for (var index = 0; index < widths.length; index++) {\r\n                if (currentPosition >= position) {\r\n                    return Math.floor(index / this.getColumnPageSize())\r\n                }\r\n                currentPosition += widths[index]\r\n            }\r\n            return 0\r\n        },\r\n        getTotalWidth: function() {\r\n            var width = this.option(\"width\");\r\n            if (\"number\" === typeof width) {\r\n                return width\r\n            }\r\n            return this.getController(\"resizing\")._lastWidth || getOuterWidth(this.component.$element())\r\n        },\r\n        getEndPageIndex: function(position) {\r\n            var visibleColumns = this.getVisibleColumns(void 0, true);\r\n            var widths = getWidths(visibleColumns);\r\n            var currentPosition = 0;\r\n            position += this.getTotalWidth();\r\n            for (var index = 0; index < widths.length; index++) {\r\n                if (currentPosition >= position) {\r\n                    return Math.ceil(index / this.getColumnPageSize())\r\n                }\r\n                currentPosition += widths[index]\r\n            }\r\n            return Math.ceil(widths.length / this.getColumnPageSize())\r\n        },\r\n        getColumnPageSize: function() {\r\n            return this.option(\"scrolling.columnPageSize\")\r\n        },\r\n        _fireColumnsChanged: function() {\r\n            var date = new Date;\r\n            this.columnsChanged.fire({\r\n                optionNames: {\r\n                    all: true,\r\n                    length: 1\r\n                },\r\n                changeTypes: {\r\n                    columns: true,\r\n                    virtualColumnsScrolling: true,\r\n                    length: 2\r\n                }\r\n            });\r\n            this._renderTime = new Date - date\r\n        },\r\n        getScrollingTimeout: function() {\r\n            var renderingThreshold = this.option(\"scrolling.columnRenderingThreshold\");\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            var scrollingTimeout = 0;\r\n            if (!isDefined(renderAsync) && this._renderTime > renderingThreshold || renderAsync) {\r\n                scrollingTimeout = this.option(\"scrolling.timeout\")\r\n            }\r\n            return scrollingTimeout\r\n        },\r\n        setScrollPosition: function(position) {\r\n            var scrollingTimeout = this.getScrollingTimeout();\r\n            if (scrollingTimeout > 0) {\r\n                clearTimeout(this._changedTimeout);\r\n                this._changedTimeout = setTimeout(() => {\r\n                    this._setScrollPositionCore(position)\r\n                }, scrollingTimeout)\r\n            } else {\r\n                this._setScrollPositionCore(position)\r\n            }\r\n        },\r\n        isVirtualMode: function() {\r\n            return hasWindow() && \"virtual\" === this.option(\"scrolling.columnRenderingMode\")\r\n        },\r\n        resize: function() {\r\n            this._setScrollPositionCore(this._position)\r\n        },\r\n        _setScrollPositionCore: function(position) {\r\n            if (this.isVirtualMode()) {\r\n                var beginPageIndex = this.getBeginPageIndex(position);\r\n                var endPageIndex = this.getEndPageIndex(position);\r\n                var needColumnsChanged = position < this._position ? this._beginPageIndex > beginPageIndex : this._endPageIndex < endPageIndex;\r\n                this._position = position;\r\n                if (needColumnsChanged) {\r\n                    this._beginPageIndex = beginPageIndex;\r\n                    this._endPageIndex = endPageIndex;\r\n                    this._fireColumnsChanged()\r\n                }\r\n            }\r\n        },\r\n        getFixedColumns: function(rowIndex, isBase) {\r\n            var fixedColumns = this.callBase(rowIndex);\r\n            if (this.isVirtualMode() && !isBase && fixedColumns.length) {\r\n                var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n                fixedColumns[transparentColumnIndex].colspan = this.getVisibleColumns().length - this.callBase().length + 1;\r\n                return fixedColumns\r\n            }\r\n            return fixedColumns\r\n        },\r\n        getVisibleColumns: function(rowIndex, isBase) {\r\n            if (isBase || !this.isVirtualMode()) {\r\n                return this.callBase(rowIndex)\r\n            }\r\n            if (!this._beginPageIndex && !this._endPageIndex) {\r\n                this._beginPageIndex = this.getBeginPageIndex(this._position);\r\n                this._endPageIndex = this.getEndPageIndex(this._position)\r\n            }\r\n            var beginPageIndex = this._beginPageIndex;\r\n            var endPageIndex = this._endPageIndex;\r\n            var visibleColumnsHash = rowIndex + \"-\" + beginPageIndex + \"-\" + endPageIndex;\r\n            if (this._virtualVisibleColumns[visibleColumnsHash]) {\r\n                return this._virtualVisibleColumns[visibleColumnsHash]\r\n            }\r\n            var visibleColumns = this.callBase();\r\n            var rowCount = this.getRowCount();\r\n            var pageSize = this.getColumnPageSize();\r\n            var startIndex = beginPageIndex * pageSize;\r\n            var endIndex = endPageIndex * pageSize;\r\n            var fixedColumns = this.getFixedColumns(void 0, true);\r\n            var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n            var beginFixedColumnCount = fixedColumns.length ? transparentColumnIndex : 0;\r\n            var beginFixedColumns = visibleColumns.slice(0, beginFixedColumnCount);\r\n            var beginColumns = visibleColumns.slice(beginFixedColumnCount, startIndex);\r\n            var beginWidth = getWidths(beginColumns).reduce((a, b) => a + b, 0);\r\n            if (!beginWidth) {\r\n                startIndex = 0\r\n            }\r\n            var endFixedColumnCount = fixedColumns.length ? fixedColumns.length - transparentColumnIndex - 1 : 0;\r\n            var endFixedColumns = visibleColumns.slice(visibleColumns.length - endFixedColumnCount);\r\n            var endColumns = visibleColumns.slice(endIndex, visibleColumns.length - endFixedColumnCount);\r\n            var endWidth = getWidths(endColumns).reduce((a, b) => a + b, 0);\r\n            if (!endWidth) {\r\n                endIndex = visibleColumns.length\r\n            }\r\n            if (rowCount > 1 && \"number\" === typeof rowIndex) {\r\n                var columnsInfo = [];\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    columnsInfo.push(this.callBase(i))\r\n                }\r\n                beginFixedColumns = createColumnsInfo(columnsInfo, 0, beginFixedColumns.length)[rowIndex] || [];\r\n                endFixedColumns = createColumnsInfo(columnsInfo, visibleColumns.length - endFixedColumns.length, visibleColumns.length)[rowIndex] || [];\r\n                visibleColumns = createColumnsInfo(columnsInfo, startIndex, endIndex)[rowIndex] || []\r\n            } else {\r\n                visibleColumns = visibleColumns.slice(startIndex, endIndex)\r\n            }\r\n            if (beginWidth) {\r\n                visibleColumns.unshift({\r\n                    command: \"virtual\",\r\n                    width: beginWidth\r\n                });\r\n                visibleColumns = beginFixedColumns.concat(visibleColumns)\r\n            }\r\n            if (endWidth) {\r\n                visibleColumns.push({\r\n                    command: \"virtual\",\r\n                    width: endWidth\r\n                });\r\n                visibleColumns = visibleColumns.concat(endFixedColumns)\r\n            }\r\n            this._virtualVisibleColumns[visibleColumnsHash] = visibleColumns;\r\n            return visibleColumns\r\n        },\r\n        getColumnIndexOffset: function() {\r\n            var offset = 0;\r\n            if (this._beginPageIndex > 0) {\r\n                var fixedColumns = this.getFixedColumns();\r\n                var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n                var leftFixedColumnCount = transparentColumnIndex >= 0 ? transparentColumnIndex : 0;\r\n                offset = this._beginPageIndex * this.getColumnPageSize() - leftFixedColumnCount - 1\r\n            }\r\n            return offset > 0 ? offset : 0\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._changedTimeout);\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    };\r\n    return members\r\n}();\r\nexport var virtualColumnsModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            scrolling: {\r\n                columnRenderingMode: \"standard\",\r\n                columnPageSize: 5,\r\n                columnRenderingThreshold: 300\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            columns: ColumnsControllerExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: HeaderViewExtender,\r\n            rowsView: VirtualScrollingRowsViewExtender\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}