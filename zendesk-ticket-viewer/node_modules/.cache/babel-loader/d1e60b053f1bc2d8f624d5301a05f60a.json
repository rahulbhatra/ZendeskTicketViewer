{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/common/icon.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"position\", \"source\"];\nimport { createVNode, createFragment } from \"inferno\";\nimport { Fragment } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { getImageSourceType } from \"../../../core/utils/icon\";\nimport { combineClasses } from \"../../utils/combine_classes\";\nexport var viewFunction = _ref => {\n  var {\n    iconClassName: iconClassName,\n    props: {\n      source: source\n    },\n    sourceType: sourceType\n  } = _ref;\n  return createFragment([\"dxIcon\" === sourceType && createVNode(1, \"i\", iconClassName), \"fontIcon\" === sourceType && createVNode(1, \"i\", iconClassName), \"image\" === sourceType && createVNode(1, \"img\", iconClassName, null, 1, {\n    alt: \"\",\n    src: source\n  }), \"svg\" === sourceType && createVNode(1, \"i\", iconClassName, source, 0)], 0);\n};\nexport var IconProps = {\n  position: \"left\",\n  source: \"\"\n};\nexport class Icon extends BaseInfernoComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  get sourceType() {\n    return getImageSourceType(this.props.source);\n  }\n\n  get cssClass() {\n    return \"left\" !== this.props.position ? \"dx-icon-right\" : \"\";\n  }\n\n  get iconClassName() {\n    var generalClasses = {\n      \"dx-icon\": true,\n      [this.cssClass]: !!this.cssClass\n    };\n    var {\n      source: source\n    } = this.props;\n\n    if (\"dxIcon\" === this.sourceType) {\n      return combineClasses(_extends({}, generalClasses, {\n        [\"dx-icon-\".concat(source)]: true\n      }));\n    }\n\n    if (\"fontIcon\" === this.sourceType) {\n      return combineClasses(_extends({}, generalClasses, {\n        [String(source)]: !!source\n      }));\n    }\n\n    if (\"image\" === this.sourceType) {\n      return combineClasses(generalClasses);\n    }\n\n    if (\"svg\" === this.sourceType) {\n      return combineClasses(_extends({}, generalClasses, {\n        \"dx-svg-icon\": true\n      }));\n    }\n\n    return \"\";\n  }\n\n  get restAttributes() {\n    var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return restProps;\n  }\n\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props),\n      sourceType: this.sourceType,\n      cssClass: this.cssClass,\n      iconClassName: this.iconClassName,\n      restAttributes: this.restAttributes\n    });\n  }\n\n}\nIcon.defaultProps = IconProps;","map":{"version":3,"sources":["/Users/rahulsharma/node_modules/devextreme/esm/renovation/ui/common/icon.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","createVNode","createFragment","Fragment","BaseInfernoComponent","getImageSourceType","combineClasses","viewFunction","_ref","iconClassName","props","source","sourceType","alt","src","IconProps","position","Icon","constructor","state","cssClass","generalClasses","concat","String","restAttributes","_this$props","restProps","render","defaultProps"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/common/icon.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"position\", \"source\"];\r\nimport {\r\n    createVNode,\r\n    createFragment\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    getImageSourceType\r\n} from \"../../../core/utils/icon\";\r\nimport {\r\n    combineClasses\r\n} from \"../../utils/combine_classes\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        iconClassName: iconClassName,\r\n        props: {\r\n            source: source\r\n        },\r\n        sourceType: sourceType\r\n    } = _ref;\r\n    return createFragment([\"dxIcon\" === sourceType && createVNode(1, \"i\", iconClassName), \"fontIcon\" === sourceType && createVNode(1, \"i\", iconClassName), \"image\" === sourceType && createVNode(1, \"img\", iconClassName, null, 1, {\r\n        alt: \"\",\r\n        src: source\r\n    }), \"svg\" === sourceType && createVNode(1, \"i\", iconClassName, source, 0)], 0)\r\n};\r\nexport var IconProps = {\r\n    position: \"left\",\r\n    source: \"\"\r\n};\r\nexport class Icon extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get sourceType() {\r\n        return getImageSourceType(this.props.source)\r\n    }\r\n    get cssClass() {\r\n        return \"left\" !== this.props.position ? \"dx-icon-right\" : \"\"\r\n    }\r\n    get iconClassName() {\r\n        var generalClasses = {\r\n            \"dx-icon\": true,\r\n            [this.cssClass]: !!this.cssClass\r\n        };\r\n        var {\r\n            source: source\r\n        } = this.props;\r\n        if (\"dxIcon\" === this.sourceType) {\r\n            return combineClasses(_extends({}, generalClasses, {\r\n                [\"dx-icon-\".concat(source)]: true\r\n            }))\r\n        }\r\n        if (\"fontIcon\" === this.sourceType) {\r\n            return combineClasses(_extends({}, generalClasses, {\r\n                [String(source)]: !!source\r\n            }))\r\n        }\r\n        if (\"image\" === this.sourceType) {\r\n            return combineClasses(generalClasses)\r\n        }\r\n        if (\"svg\" === this.sourceType) {\r\n            return combineClasses(_extends({}, generalClasses, {\r\n                \"dx-svg-icon\": true\r\n            }))\r\n        }\r\n        return \"\"\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            sourceType: this.sourceType,\r\n            cssClass: this.cssClass,\r\n            iconClassName: this.iconClassName,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nIcon.defaultProps = IconProps;\r\n"]},"metadata":{},"sourceType":"module"}