{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.search.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { compileGetter } from \"../../core/utils/data\";\nimport { each } from \"../../core/utils/iterator\";\nimport gridCoreUtils from \"./ui.grid_core.utils\";\nimport messageLocalization from \"../../localization/message\";\nimport dataQuery from \"../../data/query\";\nvar SEARCH_PANEL_CLASS = \"search-panel\";\nvar SEARCH_TEXT_CLASS = \"search-text\";\nvar HEADER_PANEL_CLASS = \"header-panel\";\nvar FILTERING_TIMEOUT = 700;\n\nfunction allowSearch(column) {\n  return isDefined(column.allowSearch) ? column.allowSearch : column.allowFiltering;\n}\n\nfunction parseValue(column, text) {\n  var lookup = column.lookup;\n\n  if (!column.parseValue) {\n    return text;\n  }\n\n  if (lookup) {\n    return column.parseValue.call(lookup, text);\n  }\n\n  return column.parseValue(text);\n}\n\nexport var searchModule = {\n  defaultOptions: function () {\n    return {\n      searchPanel: {\n        visible: false,\n        width: 160,\n        placeholder: messageLocalization.format(\"dxDataGrid-searchPanelPlaceholder\"),\n        highlightSearchText: true,\n        highlightCaseSensitive: false,\n        text: \"\",\n        searchVisibleColumnsOnly: false\n      }\n    };\n  },\n  extenders: {\n    controllers: {\n      data: {\n        publicMethods: function () {\n          return this.callBase().concat([\"searchByText\"]);\n        },\n        _calculateAdditionalFilter: function () {\n          var filter = this.callBase();\n\n          var searchFilter = function (that, text) {\n            var i;\n            var column;\n\n            var columns = that._columnsController.getColumns();\n\n            var searchVisibleColumnsOnly = that.option(\"searchPanel.searchVisibleColumnsOnly\");\n            var lookup;\n            var filters = [];\n\n            if (!text) {\n              return null;\n            }\n\n            function onQueryDone(items) {\n              var valueGetter = compileGetter(lookup.valueExpr);\n\n              for (var _i = 0; _i < items.length; _i++) {\n                var value = valueGetter(items[_i]);\n                filters.push(column.createFilterExpression(value, null, \"search\"));\n              }\n            }\n\n            for (i = 0; i < columns.length; i++) {\n              column = columns[i];\n\n              if (searchVisibleColumnsOnly && !column.visible) {\n                continue;\n              }\n\n              if (allowSearch(column) && column.calculateFilterExpression) {\n                lookup = column.lookup;\n                var filterValue = parseValue(column, text);\n\n                if (lookup && lookup.items) {\n                  dataQuery(lookup.items).filter(column.createFilterExpression.call({\n                    dataField: lookup.displayExpr,\n                    dataType: lookup.dataType,\n                    calculateFilterExpression: column.calculateFilterExpression\n                  }, filterValue, null, \"search\")).enumerate().done(onQueryDone);\n                } else if (void 0 !== filterValue) {\n                  filters.push(column.createFilterExpression(filterValue, null, \"search\"));\n                }\n              }\n            }\n\n            return gridCoreUtils.combineFilters(filters, \"or\");\n          }(this, this.option(\"searchPanel.text\"));\n\n          return gridCoreUtils.combineFilters([filter, searchFilter]);\n        },\n        searchByText: function (text) {\n          this.option(\"searchPanel.text\", text);\n        },\n        optionChanged: function (args) {\n          switch (args.fullName) {\n            case \"searchPanel.text\":\n            case \"searchPanel\":\n              this._applyFilter();\n\n              args.handled = true;\n              break;\n\n            default:\n              this.callBase(args);\n          }\n        }\n      }\n    },\n    views: {\n      headerPanel: function () {\n        var getSearchPanelOptions = function (that) {\n          return that.option(\"searchPanel\");\n        };\n\n        return {\n          _getToolbarItems: function () {\n            var items = this.callBase();\n            return this._prepareSearchItem(items);\n          },\n          _prepareSearchItem: function (items) {\n            var that = this;\n            var dataController = that.getController(\"data\");\n            var searchPanelOptions = getSearchPanelOptions(that);\n\n            if (searchPanelOptions && searchPanelOptions.visible) {\n              var toolbarItem = {\n                template: function (data, index, container) {\n                  var $search = $(\"<div>\").addClass(that.addWidgetPrefix(SEARCH_PANEL_CLASS)).appendTo(container);\n                  that.getController(\"editorFactory\").createEditor($search, {\n                    width: searchPanelOptions.width,\n                    placeholder: searchPanelOptions.placeholder,\n                    parentType: \"searchPanel\",\n                    value: that.option(\"searchPanel.text\"),\n                    updateValueTimeout: FILTERING_TIMEOUT,\n                    setValue: function (value) {\n                      dataController.searchByText(value);\n                    },\n                    editorOptions: {\n                      inputAttr: {\n                        \"aria-label\": messageLocalization.format(\"\".concat(that.component.NAME, \"-ariaSearchInGrid\"))\n                      }\n                    }\n                  });\n                  that.resize();\n                },\n                name: \"searchPanel\",\n                location: \"after\",\n                locateInMenu: \"never\",\n                sortIndex: 40\n              };\n              items.push(toolbarItem);\n            }\n\n            return items;\n          },\n          getSearchTextEditor: function () {\n            var that = this;\n            var $element = that.element();\n            var $searchPanel = $element.find(\".\" + that.addWidgetPrefix(SEARCH_PANEL_CLASS)).filter(function () {\n              return $(this).closest(\".\" + that.addWidgetPrefix(HEADER_PANEL_CLASS)).is($element);\n            });\n\n            if ($searchPanel.length) {\n              return $searchPanel.dxTextBox(\"instance\");\n            }\n\n            return null;\n          },\n          isVisible: function () {\n            var searchPanelOptions = getSearchPanelOptions(this);\n            return this.callBase() || searchPanelOptions && searchPanelOptions.visible;\n          },\n          optionChanged: function (args) {\n            if (\"searchPanel\" === args.name) {\n              if (\"searchPanel.text\" === args.fullName) {\n                var editor = this.getSearchTextEditor();\n\n                if (editor) {\n                  editor.option(\"value\", args.value);\n                }\n              } else {\n                this._invalidate();\n              }\n\n              args.handled = true;\n            } else {\n              this.callBase(args);\n            }\n          }\n        };\n      }(),\n      rowsView: {\n        init: function () {\n          this.callBase.apply(this, arguments);\n          this._searchParams = [];\n        },\n        _getFormattedSearchText: function (column, searchText) {\n          var value = parseValue(column, searchText);\n          var formatOptions = gridCoreUtils.getFormatOptionsByColumn(column, \"search\");\n          return gridCoreUtils.formatValue(value, formatOptions);\n        },\n        _getStringNormalizer: function () {\n          var isCaseSensitive = this.option(\"searchPanel.highlightCaseSensitive\");\n          return function (str) {\n            return isCaseSensitive ? str : str.toLowerCase();\n          };\n        },\n        _findHighlightingTextNodes: function (column, cellElement, searchText) {\n          var _$items;\n\n          var $parent = cellElement.parent();\n          var $items;\n\n          var stringNormalizer = this._getStringNormalizer();\n\n          var normalizedSearchText = stringNormalizer(searchText);\n\n          if (!$parent.length) {\n            $parent = $(\"<div>\").append(cellElement);\n          } else if (column) {\n            if (column.groupIndex >= 0 && !column.showWhenGrouped) {\n              $items = cellElement;\n            } else {\n              var columnIndex = this._columnsController.getVisibleIndex(column.index);\n\n              $items = $parent.children(\"td\").eq(columnIndex).find(\"*\");\n            }\n          }\n\n          $items = null !== (_$items = $items) && void 0 !== _$items && _$items.length ? $items : $parent.find(\"*\");\n          $items = $items.filter(function (_, element) {\n            var $contents = $(element).contents();\n\n            for (var i = 0; i < $contents.length; i++) {\n              var node = $contents.get(i);\n\n              if (3 === node.nodeType) {\n                return stringNormalizer(node.textContent || node.nodeValue).indexOf(normalizedSearchText) > -1;\n              }\n\n              return false;\n            }\n          });\n          return $items;\n        },\n        _highlightSearchTextCore: function ($textNode, searchText) {\n          var $searchTextSpan = $(\"<span>\").addClass(this.addWidgetPrefix(SEARCH_TEXT_CLASS));\n          var text = $textNode.text();\n          var firstContentElement = $textNode[0];\n\n          var stringNormalizer = this._getStringNormalizer();\n\n          var index = stringNormalizer(text).indexOf(stringNormalizer(searchText));\n\n          if (index >= 0) {\n            if (firstContentElement.textContent) {\n              firstContentElement.textContent = text.substr(0, index);\n            } else {\n              firstContentElement.nodeValue = text.substr(0, index);\n            }\n\n            $textNode.after($searchTextSpan.text(text.substr(index, searchText.length)));\n            $textNode = $(domAdapter.createTextNode(text.substr(index + searchText.length))).insertAfter($searchTextSpan);\n            return this._highlightSearchTextCore($textNode, searchText);\n          }\n        },\n        _highlightSearchText: function (cellElement, isEquals, column) {\n          var that = this;\n\n          var stringNormalizer = this._getStringNormalizer();\n\n          var searchText = that.option(\"searchPanel.text\");\n\n          if (isEquals && column) {\n            searchText = searchText && that._getFormattedSearchText(column, searchText);\n          }\n\n          if (searchText && that.option(\"searchPanel.highlightSearchText\")) {\n            var textNodes = that._findHighlightingTextNodes(column, cellElement, searchText);\n\n            each(textNodes, function (_, element) {\n              each($(element).contents(), function (_, textNode) {\n                if (isEquals) {\n                  if (stringNormalizer($(textNode).text()) === stringNormalizer(searchText)) {\n                    $(this).replaceWith($(\"<span>\").addClass(that.addWidgetPrefix(SEARCH_TEXT_CLASS)).text($(textNode).text()));\n                  }\n                } else {\n                  that._highlightSearchTextCore($(textNode), searchText);\n                }\n              });\n            });\n          }\n        },\n        _renderCore: function () {\n          this.callBase.apply(this, arguments);\n\n          if (this.option().rowTemplate || this.option(\"dataRowTemplate\")) {\n            if (this.option(\"templatesRenderAsynchronously\")) {\n              clearTimeout(this._highlightTimer);\n              this._highlightTimer = setTimeout(function () {\n                this._highlightSearchText(this.getTableElement());\n              }.bind(this));\n            } else {\n              this._highlightSearchText(this.getTableElement());\n            }\n          }\n        },\n        _updateCell: function ($cell, parameters) {\n          var column = parameters.column;\n          var dataType = column.lookup && column.lookup.dataType || column.dataType;\n          var isEquals = \"string\" !== dataType;\n\n          if (allowSearch(column) && !parameters.isOnForm) {\n            if (this.option(\"templatesRenderAsynchronously\")) {\n              if (!this._searchParams.length) {\n                clearTimeout(this._highlightTimer);\n                this._highlightTimer = setTimeout(function () {\n                  this._searchParams.forEach(function (params) {\n                    this._highlightSearchText.apply(this, params);\n                  }.bind(this));\n\n                  this._searchParams = [];\n                }.bind(this));\n              }\n\n              this._searchParams.push([$cell, isEquals, column]);\n            } else {\n              this._highlightSearchText($cell, isEquals, column);\n            }\n          }\n\n          this.callBase($cell, parameters);\n        },\n        dispose: function () {\n          clearTimeout(this._highlightTimer);\n          this.callBase();\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/rahulsharma/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.search.js"],"names":["$","domAdapter","isDefined","compileGetter","each","gridCoreUtils","messageLocalization","dataQuery","SEARCH_PANEL_CLASS","SEARCH_TEXT_CLASS","HEADER_PANEL_CLASS","FILTERING_TIMEOUT","allowSearch","column","allowFiltering","parseValue","text","lookup","call","searchModule","defaultOptions","searchPanel","visible","width","placeholder","format","highlightSearchText","highlightCaseSensitive","searchVisibleColumnsOnly","extenders","controllers","data","publicMethods","callBase","concat","_calculateAdditionalFilter","filter","searchFilter","that","i","columns","_columnsController","getColumns","option","filters","onQueryDone","items","valueGetter","valueExpr","_i","length","value","push","createFilterExpression","calculateFilterExpression","filterValue","dataField","displayExpr","dataType","enumerate","done","combineFilters","searchByText","optionChanged","args","fullName","_applyFilter","handled","views","headerPanel","getSearchPanelOptions","_getToolbarItems","_prepareSearchItem","dataController","getController","searchPanelOptions","toolbarItem","template","index","container","$search","addClass","addWidgetPrefix","appendTo","createEditor","parentType","updateValueTimeout","setValue","editorOptions","inputAttr","component","NAME","resize","name","location","locateInMenu","sortIndex","getSearchTextEditor","$element","element","$searchPanel","find","closest","is","dxTextBox","isVisible","editor","_invalidate","rowsView","init","apply","arguments","_searchParams","_getFormattedSearchText","searchText","formatOptions","getFormatOptionsByColumn","formatValue","_getStringNormalizer","isCaseSensitive","str","toLowerCase","_findHighlightingTextNodes","cellElement","_$items","$parent","parent","$items","stringNormalizer","normalizedSearchText","append","groupIndex","showWhenGrouped","columnIndex","getVisibleIndex","children","eq","_","$contents","contents","node","get","nodeType","textContent","nodeValue","indexOf","_highlightSearchTextCore","$textNode","$searchTextSpan","firstContentElement","substr","after","createTextNode","insertAfter","_highlightSearchText","isEquals","textNodes","textNode","replaceWith","_renderCore","rowTemplate","clearTimeout","_highlightTimer","setTimeout","getTableElement","bind","_updateCell","$cell","parameters","isOnForm","forEach","params","dispose"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.search.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport dataQuery from \"../../data/query\";\r\nvar SEARCH_PANEL_CLASS = \"search-panel\";\r\nvar SEARCH_TEXT_CLASS = \"search-text\";\r\nvar HEADER_PANEL_CLASS = \"header-panel\";\r\nvar FILTERING_TIMEOUT = 700;\r\n\r\nfunction allowSearch(column) {\r\n    return isDefined(column.allowSearch) ? column.allowSearch : column.allowFiltering\r\n}\r\n\r\nfunction parseValue(column, text) {\r\n    var lookup = column.lookup;\r\n    if (!column.parseValue) {\r\n        return text\r\n    }\r\n    if (lookup) {\r\n        return column.parseValue.call(lookup, text)\r\n    }\r\n    return column.parseValue(text)\r\n}\r\nexport var searchModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            searchPanel: {\r\n                visible: false,\r\n                width: 160,\r\n                placeholder: messageLocalization.format(\"dxDataGrid-searchPanelPlaceholder\"),\r\n                highlightSearchText: true,\r\n                highlightCaseSensitive: false,\r\n                text: \"\",\r\n                searchVisibleColumnsOnly: false\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                publicMethods: function() {\r\n                    return this.callBase().concat([\"searchByText\"])\r\n                },\r\n                _calculateAdditionalFilter: function() {\r\n                    var filter = this.callBase();\r\n                    var searchFilter = function(that, text) {\r\n                        var i;\r\n                        var column;\r\n                        var columns = that._columnsController.getColumns();\r\n                        var searchVisibleColumnsOnly = that.option(\"searchPanel.searchVisibleColumnsOnly\");\r\n                        var lookup;\r\n                        var filters = [];\r\n                        if (!text) {\r\n                            return null\r\n                        }\r\n\r\n                        function onQueryDone(items) {\r\n                            var valueGetter = compileGetter(lookup.valueExpr);\r\n                            for (var _i = 0; _i < items.length; _i++) {\r\n                                var value = valueGetter(items[_i]);\r\n                                filters.push(column.createFilterExpression(value, null, \"search\"))\r\n                            }\r\n                        }\r\n                        for (i = 0; i < columns.length; i++) {\r\n                            column = columns[i];\r\n                            if (searchVisibleColumnsOnly && !column.visible) {\r\n                                continue\r\n                            }\r\n                            if (allowSearch(column) && column.calculateFilterExpression) {\r\n                                lookup = column.lookup;\r\n                                var filterValue = parseValue(column, text);\r\n                                if (lookup && lookup.items) {\r\n                                    dataQuery(lookup.items).filter(column.createFilterExpression.call({\r\n                                        dataField: lookup.displayExpr,\r\n                                        dataType: lookup.dataType,\r\n                                        calculateFilterExpression: column.calculateFilterExpression\r\n                                    }, filterValue, null, \"search\")).enumerate().done(onQueryDone)\r\n                                } else if (void 0 !== filterValue) {\r\n                                    filters.push(column.createFilterExpression(filterValue, null, \"search\"))\r\n                                }\r\n                            }\r\n                        }\r\n                        return gridCoreUtils.combineFilters(filters, \"or\")\r\n                    }(this, this.option(\"searchPanel.text\"));\r\n                    return gridCoreUtils.combineFilters([filter, searchFilter])\r\n                },\r\n                searchByText: function(text) {\r\n                    this.option(\"searchPanel.text\", text)\r\n                },\r\n                optionChanged: function(args) {\r\n                    switch (args.fullName) {\r\n                        case \"searchPanel.text\":\r\n                        case \"searchPanel\":\r\n                            this._applyFilter();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            headerPanel: function() {\r\n                var getSearchPanelOptions = function(that) {\r\n                    return that.option(\"searchPanel\")\r\n                };\r\n                return {\r\n                    _getToolbarItems: function() {\r\n                        var items = this.callBase();\r\n                        return this._prepareSearchItem(items)\r\n                    },\r\n                    _prepareSearchItem: function(items) {\r\n                        var that = this;\r\n                        var dataController = that.getController(\"data\");\r\n                        var searchPanelOptions = getSearchPanelOptions(that);\r\n                        if (searchPanelOptions && searchPanelOptions.visible) {\r\n                            var toolbarItem = {\r\n                                template: function(data, index, container) {\r\n                                    var $search = $(\"<div>\").addClass(that.addWidgetPrefix(SEARCH_PANEL_CLASS)).appendTo(container);\r\n                                    that.getController(\"editorFactory\").createEditor($search, {\r\n                                        width: searchPanelOptions.width,\r\n                                        placeholder: searchPanelOptions.placeholder,\r\n                                        parentType: \"searchPanel\",\r\n                                        value: that.option(\"searchPanel.text\"),\r\n                                        updateValueTimeout: FILTERING_TIMEOUT,\r\n                                        setValue: function(value) {\r\n                                            dataController.searchByText(value)\r\n                                        },\r\n                                        editorOptions: {\r\n                                            inputAttr: {\r\n                                                \"aria-label\": messageLocalization.format(\"\".concat(that.component.NAME, \"-ariaSearchInGrid\"))\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                    that.resize()\r\n                                },\r\n                                name: \"searchPanel\",\r\n                                location: \"after\",\r\n                                locateInMenu: \"never\",\r\n                                sortIndex: 40\r\n                            };\r\n                            items.push(toolbarItem)\r\n                        }\r\n                        return items\r\n                    },\r\n                    getSearchTextEditor: function() {\r\n                        var that = this;\r\n                        var $element = that.element();\r\n                        var $searchPanel = $element.find(\".\" + that.addWidgetPrefix(SEARCH_PANEL_CLASS)).filter((function() {\r\n                            return $(this).closest(\".\" + that.addWidgetPrefix(HEADER_PANEL_CLASS)).is($element)\r\n                        }));\r\n                        if ($searchPanel.length) {\r\n                            return $searchPanel.dxTextBox(\"instance\")\r\n                        }\r\n                        return null\r\n                    },\r\n                    isVisible: function() {\r\n                        var searchPanelOptions = getSearchPanelOptions(this);\r\n                        return this.callBase() || searchPanelOptions && searchPanelOptions.visible\r\n                    },\r\n                    optionChanged: function(args) {\r\n                        if (\"searchPanel\" === args.name) {\r\n                            if (\"searchPanel.text\" === args.fullName) {\r\n                                var editor = this.getSearchTextEditor();\r\n                                if (editor) {\r\n                                    editor.option(\"value\", args.value)\r\n                                }\r\n                            } else {\r\n                                this._invalidate()\r\n                            }\r\n                            args.handled = true\r\n                        } else {\r\n                            this.callBase(args)\r\n                        }\r\n                    }\r\n                }\r\n            }(),\r\n            rowsView: {\r\n                init: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._searchParams = []\r\n                },\r\n                _getFormattedSearchText: function(column, searchText) {\r\n                    var value = parseValue(column, searchText);\r\n                    var formatOptions = gridCoreUtils.getFormatOptionsByColumn(column, \"search\");\r\n                    return gridCoreUtils.formatValue(value, formatOptions)\r\n                },\r\n                _getStringNormalizer: function() {\r\n                    var isCaseSensitive = this.option(\"searchPanel.highlightCaseSensitive\");\r\n                    return function(str) {\r\n                        return isCaseSensitive ? str : str.toLowerCase()\r\n                    }\r\n                },\r\n                _findHighlightingTextNodes: function(column, cellElement, searchText) {\r\n                    var _$items;\r\n                    var $parent = cellElement.parent();\r\n                    var $items;\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var normalizedSearchText = stringNormalizer(searchText);\r\n                    if (!$parent.length) {\r\n                        $parent = $(\"<div>\").append(cellElement)\r\n                    } else if (column) {\r\n                        if (column.groupIndex >= 0 && !column.showWhenGrouped) {\r\n                            $items = cellElement\r\n                        } else {\r\n                            var columnIndex = this._columnsController.getVisibleIndex(column.index);\r\n                            $items = $parent.children(\"td\").eq(columnIndex).find(\"*\")\r\n                        }\r\n                    }\r\n                    $items = null !== (_$items = $items) && void 0 !== _$items && _$items.length ? $items : $parent.find(\"*\");\r\n                    $items = $items.filter((function(_, element) {\r\n                        var $contents = $(element).contents();\r\n                        for (var i = 0; i < $contents.length; i++) {\r\n                            var node = $contents.get(i);\r\n                            if (3 === node.nodeType) {\r\n                                return stringNormalizer(node.textContent || node.nodeValue).indexOf(normalizedSearchText) > -1\r\n                            }\r\n                            return false\r\n                        }\r\n                    }));\r\n                    return $items\r\n                },\r\n                _highlightSearchTextCore: function($textNode, searchText) {\r\n                    var $searchTextSpan = $(\"<span>\").addClass(this.addWidgetPrefix(SEARCH_TEXT_CLASS));\r\n                    var text = $textNode.text();\r\n                    var firstContentElement = $textNode[0];\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var index = stringNormalizer(text).indexOf(stringNormalizer(searchText));\r\n                    if (index >= 0) {\r\n                        if (firstContentElement.textContent) {\r\n                            firstContentElement.textContent = text.substr(0, index)\r\n                        } else {\r\n                            firstContentElement.nodeValue = text.substr(0, index)\r\n                        }\r\n                        $textNode.after($searchTextSpan.text(text.substr(index, searchText.length)));\r\n                        $textNode = $(domAdapter.createTextNode(text.substr(index + searchText.length))).insertAfter($searchTextSpan);\r\n                        return this._highlightSearchTextCore($textNode, searchText)\r\n                    }\r\n                },\r\n                _highlightSearchText: function(cellElement, isEquals, column) {\r\n                    var that = this;\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var searchText = that.option(\"searchPanel.text\");\r\n                    if (isEquals && column) {\r\n                        searchText = searchText && that._getFormattedSearchText(column, searchText)\r\n                    }\r\n                    if (searchText && that.option(\"searchPanel.highlightSearchText\")) {\r\n                        var textNodes = that._findHighlightingTextNodes(column, cellElement, searchText);\r\n                        each(textNodes, (function(_, element) {\r\n                            each($(element).contents(), (function(_, textNode) {\r\n                                if (isEquals) {\r\n                                    if (stringNormalizer($(textNode).text()) === stringNormalizer(searchText)) {\r\n                                        $(this).replaceWith($(\"<span>\").addClass(that.addWidgetPrefix(SEARCH_TEXT_CLASS)).text($(textNode).text()))\r\n                                    }\r\n                                } else {\r\n                                    that._highlightSearchTextCore($(textNode), searchText)\r\n                                }\r\n                            }))\r\n                        }))\r\n                    }\r\n                },\r\n                _renderCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option().rowTemplate || this.option(\"dataRowTemplate\")) {\r\n                        if (this.option(\"templatesRenderAsynchronously\")) {\r\n                            clearTimeout(this._highlightTimer);\r\n                            this._highlightTimer = setTimeout(function() {\r\n                                this._highlightSearchText(this.getTableElement())\r\n                            }.bind(this))\r\n                        } else {\r\n                            this._highlightSearchText(this.getTableElement())\r\n                        }\r\n                    }\r\n                },\r\n                _updateCell: function($cell, parameters) {\r\n                    var column = parameters.column;\r\n                    var dataType = column.lookup && column.lookup.dataType || column.dataType;\r\n                    var isEquals = \"string\" !== dataType;\r\n                    if (allowSearch(column) && !parameters.isOnForm) {\r\n                        if (this.option(\"templatesRenderAsynchronously\")) {\r\n                            if (!this._searchParams.length) {\r\n                                clearTimeout(this._highlightTimer);\r\n                                this._highlightTimer = setTimeout(function() {\r\n                                    this._searchParams.forEach(function(params) {\r\n                                        this._highlightSearchText.apply(this, params)\r\n                                    }.bind(this));\r\n                                    this._searchParams = []\r\n                                }.bind(this))\r\n                            }\r\n                            this._searchParams.push([$cell, isEquals, column])\r\n                        } else {\r\n                            this._highlightSearchText($cell, isEquals, column)\r\n                        }\r\n                    }\r\n                    this.callBase($cell, parameters)\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._highlightTimer);\r\n                    this.callBase()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}