{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsharma/Documents/Zendesk/zendesk-ticket-viewer/src/components/tickets/tickets.js\",\n    _s = $RefreshSig$();\n\nimport { DataGrid } from '@mui/x-data-grid';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useNavigate } from 'react-router';\nimport axios from 'axios';\nimport Toast from '../toast/toast';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nexport default function Tickets() {\n  _s();\n\n  const navigate = useNavigate();\n  const [toastOpen, setToastOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastSeverity, setToastSevertiy] = useState('');\n  const [rows, setRows] = useState(rows);\n  const [columns, setColumns] = useState(columns);\n\n  const getData = () => {\n    const data = new FormData(event.currentTarget);\n    axios.post('http://localhost:4000/api/tickets').then(res => {\n      console.log(res.data);\n      localStorage.setItem('token', res.data.token);\n      setToastOpen(true);\n      setToastMessage('Successfully Loaded Tickets');\n      setToastSevertiy('success');\n    }).catch(error => {\n      console.log(error);\n      setToastOpen(true);\n      setToastMessage('Email Password is not matching!');\n      setToastSevertiy('error');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      dataSource: rows,\n      id: \"gridContainer\",\n      keyExpr: \"id\",\n      width: \"95%\",\n      height: \"calc(100vh - 120px)\",\n      showColumnLines: true,\n      showRowLines: true,\n      showBorders: true,\n      rowAlternationEnabled: true,\n      columns: columns,\n      children: [/*#__PURE__*/_jsxDEV(SearchPanel, {\n        visible: true,\n        highlightCaseSensitive: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pager, {\n        allowedPageSizes: pageSizes,\n        showPageSizeSelector: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paging, {\n        defaultPageSize: 25\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Export, {\n        enabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Tickets, \"VapCvESetfzOIYjMlKmE3/UXHYg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Tickets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tickets\");","map":{"version":3,"sources":["/Users/rahulsharma/Documents/Zendesk/zendesk-ticket-viewer/src/components/tickets/tickets.js"],"names":["DataGrid","createTheme","ThemeProvider","useNavigate","axios","Toast","useState","theme","Tickets","navigate","toastOpen","setToastOpen","toastMessage","setToastMessage","toastSeverity","setToastSevertiy","rows","setRows","columns","setColumns","getData","data","FormData","event","currentTarget","post","then","res","console","log","localStorage","setItem","token","catch","error","pageSizes"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,sBAA3C;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,KAAK,GAAGN,WAAW,EAAzB;AAEA,eAAe,SAASO,OAAT,GAAmB;AAAA;;AAChC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACU,IAAD,CAAhC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAACY,OAAD,CAAtC;;AAGA,QAAME,OAAO,GAAG,MAAM;AACpB,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaC,KAAK,CAACC,aAAnB,CAAb;AACApB,IAAAA,KAAK,CAACqB,IAAN,CAAW,mCAAX,EACGC,IADH,CACQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACN,IAAhB;AACAS,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,GAAG,CAACN,IAAJ,CAASW,KAAvC;AACArB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,MAAAA,eAAe,CAAC,6BAAD,CAAf;AACAE,MAAAA,gBAAgB,CAAC,SAAD,CAAhB;AAED,KARH,EASGkB,KATH,CASSC,KAAK,IAAI;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACAvB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,MAAAA,eAAe,CAAC,iCAAD,CAAf;AACAE,MAAAA,gBAAgB,CAAC,OAAD,CAAhB;AACD,KAdH;AAeC,GAjBH;;AAmBA,sBACE;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEC,IAAtB;AACE,MAAA,EAAE,EAAC,eADL;AAEE,MAAA,OAAO,EAAC,IAFV;AAGE,MAAA,KAAK,EAAC,KAHR;AAIE,MAAA,MAAM,EAAC,qBAJT;AAKE,MAAA,eAAe,EAAE,IALnB;AAME,MAAA,YAAY,EAAE,IANhB;AAOE,MAAA,WAAW,EAAE,IAPf;AAQE,MAAA,qBAAqB,EAAE,IARzB;AASE,MAAA,OAAO,EAAEE,OATX;AAAA,8BAWI,QAAC,WAAD;AAAa,QAAA,OAAO,EAAE,IAAtB;AAA4B,QAAA,sBAAsB,EAAE;AAApD;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI,QAAC,KAAD;AAAO,QAAA,gBAAgB,EAAEiB,SAAzB;AAAoC,QAAA,oBAAoB,EAAE;AAA1D;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI,QAAC,MAAD;AAAQ,QAAA,eAAe,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,cAbJ,eAcI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoBD;;GAhDuB3B,O;UACLL,W;;;KADKK,O","sourcesContent":["import { DataGrid } from '@mui/x-data-grid';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useNavigate } from 'react-router';\nimport axios from 'axios';\nimport Toast from '../toast/toast';\nimport { useState } from 'react';\n\nconst theme = createTheme();\n\nexport default function Tickets() {\n  const navigate = useNavigate();\n  const [toastOpen, setToastOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastSeverity, setToastSevertiy] = useState('');\n  const [rows, setRows] = useState(rows);\n  const [columns, setColumns] = useState(columns);\n\n  \n  const getData = () => {\n    const data = new FormData(event.currentTarget);\n    axios.post('http://localhost:4000/api/tickets')\n      .then(res => {\n        console.log(res.data);\n        localStorage.setItem('token', res.data.token);\n        setToastOpen(true);\n        setToastMessage('Successfully Loaded Tickets');\n        setToastSevertiy('success');\n        \n      })\n      .catch(error => {\n        console.log(error);\n        setToastOpen(true);\n        setToastMessage('Email Password is not matching!');\n        setToastSevertiy('error');\n      });\n    }\n\n  return (\n    <>\n      <DataGrid dataSource={rows}\n        id='gridContainer'\n        keyExpr=\"id\"\n        width=\"95%\"\n        height=\"calc(100vh - 120px)\"\n        showColumnLines={true}\n        showRowLines={true}\n        showBorders={true}\n        rowAlternationEnabled={true}\n        columns={columns}\n        >\n          <SearchPanel visible={true} highlightCaseSensitive={true} />\n          <Pager allowedPageSizes={pageSizes} showPageSizeSelector={true} />\n          <Paging defaultPageSize={25} />\n          <Export enabled={true} />\n      </DataGrid>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}