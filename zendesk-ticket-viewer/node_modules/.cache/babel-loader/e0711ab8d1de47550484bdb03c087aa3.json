{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/core/annotations.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport domAdapter from \"../../core/dom_adapter\";\nimport { isDefined, isFunction } from \"../../core/utils/type\";\nimport { Tooltip } from \"../core/tooltip\";\nimport { extend } from \"../../core/utils/extend\";\nimport { patchFontOptions } from \"./utils\";\nimport { Plaque } from \"./plaque\";\nimport pointerEvents from \"../../events/pointer\";\nimport { start as dragEventStart, move as dragEventMove, end as dragEventEnd } from \"../../events/drag\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport eventsEngine from \"../../events/core/events_engine\";\nvar getDocument = domAdapter.getDocument;\nvar EVENT_NS = \"annotations\";\nvar DOT_EVENT_NS = \".\" + EVENT_NS;\nvar POINTER_ACTION = addNamespace([pointerEvents.down, pointerEvents.move], EVENT_NS);\nvar POINTER_UP_EVENT_NAME = addNamespace(pointerEvents.up, EVENT_NS);\nvar DRAG_START_EVENT_NAME = dragEventStart + DOT_EVENT_NS;\nvar DRAG_EVENT_NAME = dragEventMove + DOT_EVENT_NS;\nvar DRAG_END_EVENT_NAME = dragEventEnd + DOT_EVENT_NS;\n\nfunction coreAnnotation(options, contentTemplate) {\n  return {\n    draw: function (widget, group) {\n      var annotationGroup = widget._renderer.g().append(group).css(patchFontOptions(options.font));\n\n      if (this.plaque) {\n        this.plaque.clear();\n      }\n\n      this.plaque = new Plaque(extend(true, {}, options, {\n        cornerRadius: (options.border || {}).cornerRadius\n      }), widget, annotationGroup, contentTemplate, widget._isAnnotationBounded(options));\n      this.plaque.draw(widget._getAnnotationCoords(this));\n\n      if (options.allowDragging) {\n        annotationGroup.on(DRAG_START_EVENT_NAME, {\n          immediate: true\n        }, e => {\n          this._dragOffsetX = this.plaque.x - e.pageX;\n          this._dragOffsetY = this.plaque.y - e.pageY;\n        }).on(DRAG_EVENT_NAME, e => {\n          this.plaque.move(e.pageX + this._dragOffsetX, e.pageY + this._dragOffsetY);\n        }).on(DRAG_END_EVENT_NAME, e => {\n          this.offsetX = (this.offsetX || 0) + e.offset.x;\n          this.offsetY = (this.offsetY || 0) + e.offset.y;\n        });\n      }\n    },\n\n    hitTest(x, y) {\n      return this.plaque.hitTest(x, y);\n    },\n\n    showTooltip(tooltip, _ref) {\n      var {\n        x: x,\n        y: y\n      } = _ref;\n      var that = this;\n      var options = that.options;\n\n      if (tooltip.annotation !== that) {\n        tooltip.setTemplate(options.tooltipTemplate);\n\n        var callback = result => {\n          result && (tooltip.annotation = that);\n        };\n\n        callback(tooltip.show(options, {\n          x: x,\n          y: y\n        }, {\n          target: options\n        }, options.customizeTooltip, callback));\n      } else if (!tooltip.isCursorOnTooltip(x, y)) {\n        tooltip.move(x, y);\n      }\n    }\n\n  };\n}\n\nfunction getTemplateFunction(options, widget) {\n  var template;\n\n  if (\"text\" === options.type) {\n    template = function (item, groupElement) {\n      var text = widget._renderer.text(item.text).attr({\n        class: item.cssClass\n      }).append({\n        element: groupElement\n      });\n\n      if (item.width > 0 || item.height > 0) {\n        text.setMaxSize(item.width, item.height, {\n          wordWrap: item.wordWrap,\n          textOverflow: item.textOverflow\n        });\n      }\n    };\n  } else if (\"image\" === options.type) {\n    template = function (item, groupElement) {\n      var {\n        width: width,\n        height: height,\n        url: url,\n        location: location\n      } = item.image || {};\n      var {\n        width: outerWidth,\n        height: outerHeight\n      } = item;\n      var imageWidth = outerWidth > 0 ? Math.min(width, outerWidth) : width;\n      var imageHeight = outerHeight > 0 ? Math.min(height, outerHeight) : height;\n\n      widget._renderer.image(0, 0, imageWidth, imageHeight, url, location || \"center\").append({\n        element: groupElement\n      });\n    };\n  } else if (\"custom\" === options.type) {\n    template = options.template;\n  }\n\n  return template;\n}\n\nfunction getImageObject(image) {\n  return \"string\" === typeof image ? {\n    url: image\n  } : image;\n}\n\nexport var createAnnotations = function (widget, items) {\n  var commonAnnotationSettings = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n  var customizeAnnotation = arguments.length > 3 ? arguments[3] : void 0;\n  var pullOptions = arguments.length > 4 ? arguments[4] : void 0;\n  var commonImageOptions = getImageObject(commonAnnotationSettings.image);\n  return items.reduce((arr, item) => {\n    var currentImageOptions = getImageObject(item.image);\n    var customizedItem = isFunction(customizeAnnotation) ? customizeAnnotation(item) : {};\n\n    if (customizedItem) {\n      customizedItem.image = getImageObject(customizedItem.image);\n    }\n\n    var options = extend(true, {}, commonAnnotationSettings, item, {\n      image: commonImageOptions\n    }, {\n      image: currentImageOptions\n    }, customizedItem);\n    var templateFunction = getTemplateFunction(options, widget);\n    var annotation = templateFunction && extend(true, pullOptions(options), coreAnnotation(options, widget._getTemplate(templateFunction)));\n    annotation && arr.push(annotation);\n    return arr;\n  }, []);\n};\nvar chartPlugin = {\n  name: \"annotations_chart\",\n\n  init() {},\n\n  dispose() {},\n\n  members: {\n    _getAnnotationCoords(annotation) {\n      var _axis, _axis2;\n\n      var coords = {\n        offsetX: annotation.offsetX,\n        offsetY: annotation.offsetY\n      };\n      var argCoordName = this._options.silent(\"rotated\") ? \"y\" : \"x\";\n      var valCoordName = this._options.silent(\"rotated\") ? \"x\" : \"y\";\n      var argAxis = this.getArgumentAxis();\n      var argument = argAxis.validateUnit(annotation.argument);\n      var axis = this.getValueAxis(annotation.axis);\n      var series;\n      var pane = null === (_axis = axis) || void 0 === _axis ? void 0 : _axis.pane;\n\n      if (annotation.series) {\n        var _series;\n\n        series = this.series.filter(s => s.name === annotation.series)[0];\n        axis = null === (_series = series) || void 0 === _series ? void 0 : _series.getValueAxis();\n        isDefined(axis) && (pane = axis.pane);\n      }\n\n      if (isDefined(argument)) {\n        if (series) {\n          var center = series.getPointCenterByArg(argument);\n          center && (coords[argCoordName] = center[argCoordName]);\n        } else {\n          coords[argCoordName] = argAxis.getTranslator().translate(argument);\n        }\n\n        !isDefined(pane) && (pane = argAxis.pane);\n      }\n\n      var value = null === (_axis2 = axis) || void 0 === _axis2 ? void 0 : _axis2.validateUnit(annotation.value);\n\n      if (isDefined(value)) {\n        var _axis3;\n\n        coords[valCoordName] = null === (_axis3 = axis) || void 0 === _axis3 ? void 0 : _axis3.getTranslator().translate(value);\n        !isDefined(pane) && isDefined(axis) && (pane = axis.pane);\n      }\n\n      coords.canvas = this._getCanvasForPane(pane);\n\n      if (isDefined(coords[argCoordName]) && !isDefined(value)) {\n        var _series2;\n\n        if (!isDefined(axis) && !isDefined(series)) {\n          coords[valCoordName] = argAxis.getAxisPosition();\n        } else if (isDefined(axis) && !isDefined(series)) {\n          coords[valCoordName] = this._argumentAxes.filter(a => a.pane === axis.pane)[0].getAxisPosition();\n        } else if (null !== (_series2 = series) && void 0 !== _series2 && _series2.checkSeriesViewportCoord(argAxis, coords[argCoordName])) {\n          coords[valCoordName] = series.getSeriesPairCoord(coords[argCoordName], true);\n        }\n      }\n\n      if (!isDefined(argument) && isDefined(coords[valCoordName])) {\n        if (isDefined(axis) && !isDefined(series)) {\n          coords[argCoordName] = axis.getAxisPosition();\n        } else if (isDefined(series)) {\n          if (series.checkSeriesViewportCoord(axis, coords[valCoordName])) {\n            coords[argCoordName] = series.getSeriesPairCoord(coords[valCoordName], false);\n          }\n        }\n      }\n\n      return coords;\n    },\n\n    _annotationsPointerEventHandler(event) {\n      if (this._disposed) {\n        return;\n      }\n\n      var originalEvent = event.originalEvent || {};\n      var touch = originalEvent.touches && originalEvent.touches[0] || {};\n\n      var rootOffset = this._renderer.getRootOffset();\n\n      var coords = {\n        x: touch.pageX || originalEvent.pageX || event.pageX,\n        y: touch.pageY || originalEvent.pageY || event.pageY\n      };\n\n      var annotation = this._annotations.items.filter(a => a.hitTest(coords.x - rootOffset.left, coords.y - rootOffset.top))[0];\n\n      if (!annotation || !annotation.options.tooltipEnabled) {\n        this._annotations.hideTooltip();\n\n        return;\n      }\n\n      this._clear();\n\n      if (annotation.options.allowDragging && event.type === pointerEvents.down) {\n        this._annotations._hideToolTipForDrag = true;\n      }\n\n      if (!this._annotations._hideToolTipForDrag) {\n        annotation.showTooltip(this._annotations.tooltip, coords);\n        event.stopPropagation();\n      }\n    },\n\n    _isAnnotationBounded: options => isDefined(options.value) || isDefined(options.argument),\n    _pullOptions: options => ({\n      type: options.type,\n      name: options.name,\n      x: options.x,\n      y: options.y,\n      value: options.value,\n      argument: options.argument,\n      axis: options.axis,\n      series: options.series,\n      options: options,\n      offsetX: options.offsetX,\n      offsetY: options.offsetY\n    }),\n\n    _forceAnnotationRender() {\n      this._change([\"FORCE_RENDER\"]);\n    },\n\n    _clear() {\n      this.hideTooltip();\n      this.clearHover();\n    }\n\n  }\n};\nvar polarChartPlugin = {\n  name: \"annotations_polar_chart\",\n\n  init() {},\n\n  dispose() {},\n\n  members: {\n    _getAnnotationCoords(annotation) {\n      var coords = {\n        offsetX: annotation.offsetX,\n        offsetY: annotation.offsetY,\n        canvas: this._calcCanvas()\n      };\n      var argAxis = this.getArgumentAxis();\n      var argument = argAxis.validateUnit(annotation.argument);\n      var value = this.getValueAxis().validateUnit(annotation.value);\n      var radius = annotation.radius;\n      var angle = annotation.angle;\n      var pointCoords;\n      var series;\n\n      if (annotation.series) {\n        series = this.series.filter(s => s.name === annotation.series)[0];\n      }\n\n      extend(true, coords, this.getXYFromPolar(angle, radius, argument, value));\n\n      if (isDefined(series)) {\n        if (isDefined(coords.angle) && !isDefined(value) && !isDefined(radius)) {\n          if (!isDefined(argument)) {\n            argument = argAxis.getTranslator().from(isFinite(angle) ? this.getActualAngle(angle) : coords.angle);\n          }\n\n          pointCoords = series.getSeriesPairCoord({\n            argument: argument,\n            angle: -coords.angle\n          }, true);\n        } else if (isDefined(coords.radius) && !isDefined(argument) && !isDefined(angle)) {\n          pointCoords = series.getSeriesPairCoord({\n            radius: coords.radius\n          }, false);\n        }\n\n        if (isDefined(pointCoords)) {\n          coords.x = pointCoords.x;\n          coords.y = pointCoords.y;\n        }\n      }\n\n      if (annotation.series && !isDefined(pointCoords)) {\n        coords.x = coords.y = void 0;\n      }\n\n      return coords;\n    },\n\n    _annotationsPointerEventHandler: chartPlugin.members._annotationsPointerEventHandler,\n    _isAnnotationBounded: chartPlugin.members._isAnnotationBounded,\n\n    _pullOptions(options) {\n      var polarOptions = extend({}, {\n        radius: options.radius,\n        angle: options.angle\n      }, chartPlugin.members._pullOptions(options));\n      delete polarOptions.axis;\n      return polarOptions;\n    },\n\n    _forceAnnotationRender: chartPlugin.members._forceAnnotationRender,\n    _clear: chartPlugin.members._clear\n  }\n};\nvar vectorMapPlugin = {\n  name: \"annotations_vector_map\",\n\n  init() {},\n\n  dispose() {\n    this._annotations._offTracker();\n\n    this._annotations._offTracker = null;\n  },\n\n  members: {\n    _getAnnotationCoords(annotation) {\n      var coords = {\n        offsetX: annotation.offsetX,\n        offsetY: annotation.offsetY\n      };\n      coords.canvas = this._projection.getCanvas();\n\n      if (annotation.coordinates) {\n        var data = this._projection.toScreenPoint(annotation.coordinates);\n\n        coords.x = data[0];\n        coords.y = data[1];\n      }\n\n      return coords;\n    },\n\n    _annotationsPointerEventHandler: chartPlugin.members._annotationsPointerEventHandler,\n    _isAnnotationBounded: options => isDefined(options.coordinates),\n\n    _pullOptions(options) {\n      var vectorMapOptions = extend({}, {\n        coordinates: options.coordinates\n      }, chartPlugin.members._pullOptions(options));\n      delete vectorMapOptions.axis;\n      delete vectorMapOptions.series;\n      delete vectorMapOptions.argument;\n      delete vectorMapOptions.value;\n      return vectorMapOptions;\n    },\n\n    _forceAnnotationRender() {\n      this._change([\"EXTRA_ELEMENTS\"]);\n    },\n\n    _getAnnotationStyles: () => ({\n      \"text-anchor\": \"start\"\n    }),\n\n    _clear() {}\n\n  },\n  extenders: {\n    _prepareExtraElements() {\n      var that = this;\n\n      var renderElements = () => {\n        that._renderExtraElements();\n      };\n\n      that._annotations._offTracker = that._tracker.on({\n        move: renderElements,\n        zoom: renderElements,\n        end: renderElements\n      });\n    }\n\n  }\n};\nvar pieChartPlugin = {\n  name: \"annotations_pie_chart\",\n\n  init() {},\n\n  dispose() {},\n\n  members: {\n    _getAnnotationCoords(annotation) {\n      var series;\n      var coords = {\n        offsetX: annotation.offsetX,\n        offsetY: annotation.offsetY,\n        canvas: this._canvas\n      };\n\n      if (annotation.argument) {\n        if (annotation.series) {\n          series = this.getSeriesByName(annotation.series);\n        } else {\n          series = this.series[0];\n        }\n\n        var argument = series.getPointsByArg(annotation.argument)[0];\n        var {\n          x: x,\n          y: y\n        } = argument.getAnnotationCoords(annotation.location);\n        coords.x = x;\n        coords.y = y;\n      }\n\n      return coords;\n    },\n\n    _isAnnotationBounded: options => options.argument,\n    _annotationsPointerEventHandler: chartPlugin.members._annotationsPointerEventHandler,\n\n    _pullOptions(options) {\n      var pieChartOptions = extend({}, {\n        location: options.location\n      }, chartPlugin.members._pullOptions(options));\n      delete pieChartOptions.axis;\n      return pieChartOptions;\n    },\n\n    _clear: chartPlugin.members._clear,\n    _forceAnnotationRender: chartPlugin.members._forceAnnotationRender\n  }\n};\nvar corePlugin = {\n  name: \"annotations_core\",\n\n  init() {\n    this._annotations = {\n      items: [],\n      _hideToolTipForDrag: false,\n      tooltip: new Tooltip({\n        cssClass: \"\".concat(this._rootClassPrefix, \"-annotation-tooltip\"),\n        eventTrigger: this._eventTrigger,\n        widgetRoot: this.element(),\n        widget: this\n      }),\n\n      hideTooltip() {\n        this.tooltip.annotation = null;\n        this.tooltip.hide();\n      },\n\n      clearItems() {\n        this.items.forEach(i => i.plaque.clear());\n        this.items = [];\n      }\n\n    };\n\n    this._annotations.tooltip.setRendererOptions(this._getRendererOptions());\n  },\n\n  dispose() {\n    this._annotationsGroup.linkRemove().linkOff();\n\n    eventsEngine.off(getDocument(), DOT_EVENT_NS);\n\n    this._annotationsGroup.off(DOT_EVENT_NS);\n\n    this._annotations.tooltip && this._annotations.tooltip.dispose();\n  },\n\n  extenders: {\n    _createHtmlStructure() {\n      this._annotationsGroup = this._renderer.g().attr({\n        class: \"\".concat(this._rootClassPrefix, \"-annotations\")\n      }).css(this._getAnnotationStyles()).linkOn(this._renderer.root, \"annotations\").linkAppend();\n      eventsEngine.on(getDocument(), POINTER_ACTION, e => {\n        if (!this._annotations.tooltip.isCursorOnTooltip(e.pageX, e.pageY)) {\n          this._annotations.hideTooltip();\n        }\n      });\n      eventsEngine.on(getDocument(), POINTER_UP_EVENT_NAME, event => {\n        this._annotations._hideToolTipForDrag = false;\n\n        this._annotationsPointerEventHandler(event);\n      });\n\n      this._annotationsGroup.on(POINTER_ACTION, this._annotationsPointerEventHandler.bind(this));\n    },\n\n    _renderExtraElements() {\n      this._annotationsGroup.clear();\n\n      this._annotations.items.forEach(item => item.draw(this, this._annotationsGroup));\n    },\n\n    _stopCurrentHandling() {\n      this._annotations.hideTooltip();\n    }\n\n  },\n  members: {\n    _buildAnnotations() {\n      this._annotations.clearItems();\n\n      var items = this._getOption(\"annotations\", true);\n\n      if (!(null !== items && void 0 !== items && items.length)) {\n        return;\n      }\n\n      this._annotations.items = createAnnotations(this, items, this._getOption(\"commonAnnotationSettings\"), this._getOption(\"customizeAnnotation\", true), this._pullOptions);\n    },\n\n    _setAnnotationTooltipOptions() {\n      var tooltipOptions = extend({}, this._getOption(\"tooltip\"));\n      tooltipOptions.contentTemplate = tooltipOptions.customizeTooltip = void 0;\n\n      this._annotations.tooltip.update(tooltipOptions);\n    },\n\n    _getAnnotationCoords: () => ({}),\n    _pullOptions: () => ({}),\n    _getAnnotationStyles: () => ({})\n  },\n\n  customize(constructor) {\n    constructor.addChange({\n      code: \"ANNOTATIONITEMS\",\n\n      handler() {\n        this._requestChange([\"ANNOTATIONS\"]);\n      },\n\n      isOptionChange: true,\n      option: \"annotations\"\n    });\n    constructor.addChange({\n      code: \"ANNOTATIONSSETTINGS\",\n\n      handler() {\n        this._requestChange([\"ANNOTATIONS\"]);\n      },\n\n      isOptionChange: true,\n      option: \"commonAnnotationSettings\"\n    });\n    constructor.addChange({\n      code: \"ANNOTATIONS\",\n\n      handler() {\n        this._buildAnnotations();\n\n        this._setAnnotationTooltipOptions();\n\n        this._forceAnnotationRender();\n      },\n\n      isThemeDependent: true,\n      isOptionChange: true\n    });\n  },\n\n  fontFields: [\"commonAnnotationSettings.font\"]\n};\nexport var plugins = {\n  core: corePlugin,\n  chart: chartPlugin,\n  polarChart: polarChartPlugin,\n  vectorMap: vectorMapPlugin,\n  pieChart: pieChartPlugin\n};","map":{"version":3,"sources":["/Users/rahulsharma/node_modules/devextreme/esm/viz/core/annotations.js"],"names":["domAdapter","isDefined","isFunction","Tooltip","extend","patchFontOptions","Plaque","pointerEvents","start","dragEventStart","move","dragEventMove","end","dragEventEnd","addNamespace","eventsEngine","getDocument","EVENT_NS","DOT_EVENT_NS","POINTER_ACTION","down","POINTER_UP_EVENT_NAME","up","DRAG_START_EVENT_NAME","DRAG_EVENT_NAME","DRAG_END_EVENT_NAME","coreAnnotation","options","contentTemplate","draw","widget","group","annotationGroup","_renderer","g","append","css","font","plaque","clear","cornerRadius","border","_isAnnotationBounded","_getAnnotationCoords","allowDragging","on","immediate","e","_dragOffsetX","x","pageX","_dragOffsetY","y","pageY","offsetX","offset","offsetY","hitTest","showTooltip","tooltip","_ref","that","annotation","setTemplate","tooltipTemplate","callback","result","show","target","customizeTooltip","isCursorOnTooltip","getTemplateFunction","template","type","item","groupElement","text","attr","class","cssClass","element","width","height","setMaxSize","wordWrap","textOverflow","url","location","image","outerWidth","outerHeight","imageWidth","Math","min","imageHeight","getImageObject","createAnnotations","items","commonAnnotationSettings","arguments","length","customizeAnnotation","pullOptions","commonImageOptions","reduce","arr","currentImageOptions","customizedItem","templateFunction","_getTemplate","push","chartPlugin","name","init","dispose","members","_axis","_axis2","coords","argCoordName","_options","silent","valCoordName","argAxis","getArgumentAxis","argument","validateUnit","axis","getValueAxis","series","pane","_series","filter","s","center","getPointCenterByArg","getTranslator","translate","value","_axis3","canvas","_getCanvasForPane","_series2","getAxisPosition","_argumentAxes","a","checkSeriesViewportCoord","getSeriesPairCoord","_annotationsPointerEventHandler","event","_disposed","originalEvent","touch","touches","rootOffset","getRootOffset","_annotations","left","top","tooltipEnabled","hideTooltip","_clear","_hideToolTipForDrag","stopPropagation","_pullOptions","_forceAnnotationRender","_change","clearHover","polarChartPlugin","_calcCanvas","radius","angle","pointCoords","getXYFromPolar","from","isFinite","getActualAngle","polarOptions","vectorMapPlugin","_offTracker","_projection","getCanvas","coordinates","data","toScreenPoint","vectorMapOptions","_getAnnotationStyles","extenders","_prepareExtraElements","renderElements","_renderExtraElements","_tracker","zoom","pieChartPlugin","_canvas","getSeriesByName","getPointsByArg","getAnnotationCoords","pieChartOptions","corePlugin","concat","_rootClassPrefix","eventTrigger","_eventTrigger","widgetRoot","hide","clearItems","forEach","i","setRendererOptions","_getRendererOptions","_annotationsGroup","linkRemove","linkOff","off","_createHtmlStructure","linkOn","root","linkAppend","bind","_stopCurrentHandling","_buildAnnotations","_getOption","_setAnnotationTooltipOptions","tooltipOptions","update","customize","constructor","addChange","code","handler","_requestChange","isOptionChange","option","isThemeDependent","fontFields","plugins","core","chart","polarChart","vectorMap","pieChart"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/core/annotations.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    Tooltip\r\n} from \"../core/tooltip\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    patchFontOptions\r\n} from \"./utils\";\r\nimport {\r\n    Plaque\r\n} from \"./plaque\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    start as dragEventStart,\r\n    move as dragEventMove,\r\n    end as dragEventEnd\r\n} from \"../../events/drag\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nvar getDocument = domAdapter.getDocument;\r\nvar EVENT_NS = \"annotations\";\r\nvar DOT_EVENT_NS = \".\" + EVENT_NS;\r\nvar POINTER_ACTION = addNamespace([pointerEvents.down, pointerEvents.move], EVENT_NS);\r\nvar POINTER_UP_EVENT_NAME = addNamespace(pointerEvents.up, EVENT_NS);\r\nvar DRAG_START_EVENT_NAME = dragEventStart + DOT_EVENT_NS;\r\nvar DRAG_EVENT_NAME = dragEventMove + DOT_EVENT_NS;\r\nvar DRAG_END_EVENT_NAME = dragEventEnd + DOT_EVENT_NS;\r\n\r\nfunction coreAnnotation(options, contentTemplate) {\r\n    return {\r\n        draw: function(widget, group) {\r\n            var annotationGroup = widget._renderer.g().append(group).css(patchFontOptions(options.font));\r\n            if (this.plaque) {\r\n                this.plaque.clear()\r\n            }\r\n            this.plaque = new Plaque(extend(true, {}, options, {\r\n                cornerRadius: (options.border || {}).cornerRadius\r\n            }), widget, annotationGroup, contentTemplate, widget._isAnnotationBounded(options));\r\n            this.plaque.draw(widget._getAnnotationCoords(this));\r\n            if (options.allowDragging) {\r\n                annotationGroup.on(DRAG_START_EVENT_NAME, {\r\n                    immediate: true\r\n                }, e => {\r\n                    this._dragOffsetX = this.plaque.x - e.pageX;\r\n                    this._dragOffsetY = this.plaque.y - e.pageY\r\n                }).on(DRAG_EVENT_NAME, e => {\r\n                    this.plaque.move(e.pageX + this._dragOffsetX, e.pageY + this._dragOffsetY)\r\n                }).on(DRAG_END_EVENT_NAME, e => {\r\n                    this.offsetX = (this.offsetX || 0) + e.offset.x;\r\n                    this.offsetY = (this.offsetY || 0) + e.offset.y\r\n                })\r\n            }\r\n        },\r\n        hitTest(x, y) {\r\n            return this.plaque.hitTest(x, y)\r\n        },\r\n        showTooltip(tooltip, _ref) {\r\n            var {\r\n                x: x,\r\n                y: y\r\n            } = _ref;\r\n            var that = this;\r\n            var options = that.options;\r\n            if (tooltip.annotation !== that) {\r\n                tooltip.setTemplate(options.tooltipTemplate);\r\n                var callback = result => {\r\n                    result && (tooltip.annotation = that)\r\n                };\r\n                callback(tooltip.show(options, {\r\n                    x: x,\r\n                    y: y\r\n                }, {\r\n                    target: options\r\n                }, options.customizeTooltip, callback))\r\n            } else if (!tooltip.isCursorOnTooltip(x, y)) {\r\n                tooltip.move(x, y)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction getTemplateFunction(options, widget) {\r\n    var template;\r\n    if (\"text\" === options.type) {\r\n        template = function(item, groupElement) {\r\n            var text = widget._renderer.text(item.text).attr({\r\n                class: item.cssClass\r\n            }).append({\r\n                element: groupElement\r\n            });\r\n            if (item.width > 0 || item.height > 0) {\r\n                text.setMaxSize(item.width, item.height, {\r\n                    wordWrap: item.wordWrap,\r\n                    textOverflow: item.textOverflow\r\n                })\r\n            }\r\n        }\r\n    } else if (\"image\" === options.type) {\r\n        template = function(item, groupElement) {\r\n            var {\r\n                width: width,\r\n                height: height,\r\n                url: url,\r\n                location: location\r\n            } = item.image || {};\r\n            var {\r\n                width: outerWidth,\r\n                height: outerHeight\r\n            } = item;\r\n            var imageWidth = outerWidth > 0 ? Math.min(width, outerWidth) : width;\r\n            var imageHeight = outerHeight > 0 ? Math.min(height, outerHeight) : height;\r\n            widget._renderer.image(0, 0, imageWidth, imageHeight, url, location || \"center\").append({\r\n                element: groupElement\r\n            })\r\n        }\r\n    } else if (\"custom\" === options.type) {\r\n        template = options.template\r\n    }\r\n    return template\r\n}\r\n\r\nfunction getImageObject(image) {\r\n    return \"string\" === typeof image ? {\r\n        url: image\r\n    } : image\r\n}\r\nexport var createAnnotations = function(widget, items) {\r\n    var commonAnnotationSettings = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\r\n    var customizeAnnotation = arguments.length > 3 ? arguments[3] : void 0;\r\n    var pullOptions = arguments.length > 4 ? arguments[4] : void 0;\r\n    var commonImageOptions = getImageObject(commonAnnotationSettings.image);\r\n    return items.reduce((arr, item) => {\r\n        var currentImageOptions = getImageObject(item.image);\r\n        var customizedItem = isFunction(customizeAnnotation) ? customizeAnnotation(item) : {};\r\n        if (customizedItem) {\r\n            customizedItem.image = getImageObject(customizedItem.image)\r\n        }\r\n        var options = extend(true, {}, commonAnnotationSettings, item, {\r\n            image: commonImageOptions\r\n        }, {\r\n            image: currentImageOptions\r\n        }, customizedItem);\r\n        var templateFunction = getTemplateFunction(options, widget);\r\n        var annotation = templateFunction && extend(true, pullOptions(options), coreAnnotation(options, widget._getTemplate(templateFunction)));\r\n        annotation && arr.push(annotation);\r\n        return arr\r\n    }, [])\r\n};\r\nvar chartPlugin = {\r\n    name: \"annotations_chart\",\r\n    init() {},\r\n    dispose() {},\r\n    members: {\r\n        _getAnnotationCoords(annotation) {\r\n            var _axis, _axis2;\r\n            var coords = {\r\n                offsetX: annotation.offsetX,\r\n                offsetY: annotation.offsetY\r\n            };\r\n            var argCoordName = this._options.silent(\"rotated\") ? \"y\" : \"x\";\r\n            var valCoordName = this._options.silent(\"rotated\") ? \"x\" : \"y\";\r\n            var argAxis = this.getArgumentAxis();\r\n            var argument = argAxis.validateUnit(annotation.argument);\r\n            var axis = this.getValueAxis(annotation.axis);\r\n            var series;\r\n            var pane = null === (_axis = axis) || void 0 === _axis ? void 0 : _axis.pane;\r\n            if (annotation.series) {\r\n                var _series;\r\n                series = this.series.filter(s => s.name === annotation.series)[0];\r\n                axis = null === (_series = series) || void 0 === _series ? void 0 : _series.getValueAxis();\r\n                isDefined(axis) && (pane = axis.pane)\r\n            }\r\n            if (isDefined(argument)) {\r\n                if (series) {\r\n                    var center = series.getPointCenterByArg(argument);\r\n                    center && (coords[argCoordName] = center[argCoordName])\r\n                } else {\r\n                    coords[argCoordName] = argAxis.getTranslator().translate(argument)\r\n                }!isDefined(pane) && (pane = argAxis.pane)\r\n            }\r\n            var value = null === (_axis2 = axis) || void 0 === _axis2 ? void 0 : _axis2.validateUnit(annotation.value);\r\n            if (isDefined(value)) {\r\n                var _axis3;\r\n                coords[valCoordName] = null === (_axis3 = axis) || void 0 === _axis3 ? void 0 : _axis3.getTranslator().translate(value);\r\n                !isDefined(pane) && isDefined(axis) && (pane = axis.pane)\r\n            }\r\n            coords.canvas = this._getCanvasForPane(pane);\r\n            if (isDefined(coords[argCoordName]) && !isDefined(value)) {\r\n                var _series2;\r\n                if (!isDefined(axis) && !isDefined(series)) {\r\n                    coords[valCoordName] = argAxis.getAxisPosition()\r\n                } else if (isDefined(axis) && !isDefined(series)) {\r\n                    coords[valCoordName] = this._argumentAxes.filter(a => a.pane === axis.pane)[0].getAxisPosition()\r\n                } else if (null !== (_series2 = series) && void 0 !== _series2 && _series2.checkSeriesViewportCoord(argAxis, coords[argCoordName])) {\r\n                    coords[valCoordName] = series.getSeriesPairCoord(coords[argCoordName], true)\r\n                }\r\n            }\r\n            if (!isDefined(argument) && isDefined(coords[valCoordName])) {\r\n                if (isDefined(axis) && !isDefined(series)) {\r\n                    coords[argCoordName] = axis.getAxisPosition()\r\n                } else if (isDefined(series)) {\r\n                    if (series.checkSeriesViewportCoord(axis, coords[valCoordName])) {\r\n                        coords[argCoordName] = series.getSeriesPairCoord(coords[valCoordName], false)\r\n                    }\r\n                }\r\n            }\r\n            return coords\r\n        },\r\n        _annotationsPointerEventHandler(event) {\r\n            if (this._disposed) {\r\n                return\r\n            }\r\n            var originalEvent = event.originalEvent || {};\r\n            var touch = originalEvent.touches && originalEvent.touches[0] || {};\r\n            var rootOffset = this._renderer.getRootOffset();\r\n            var coords = {\r\n                x: touch.pageX || originalEvent.pageX || event.pageX,\r\n                y: touch.pageY || originalEvent.pageY || event.pageY\r\n            };\r\n            var annotation = this._annotations.items.filter(a => a.hitTest(coords.x - rootOffset.left, coords.y - rootOffset.top))[0];\r\n            if (!annotation || !annotation.options.tooltipEnabled) {\r\n                this._annotations.hideTooltip();\r\n                return\r\n            }\r\n            this._clear();\r\n            if (annotation.options.allowDragging && event.type === pointerEvents.down) {\r\n                this._annotations._hideToolTipForDrag = true\r\n            }\r\n            if (!this._annotations._hideToolTipForDrag) {\r\n                annotation.showTooltip(this._annotations.tooltip, coords);\r\n                event.stopPropagation()\r\n            }\r\n        },\r\n        _isAnnotationBounded: options => isDefined(options.value) || isDefined(options.argument),\r\n        _pullOptions: options => ({\r\n            type: options.type,\r\n            name: options.name,\r\n            x: options.x,\r\n            y: options.y,\r\n            value: options.value,\r\n            argument: options.argument,\r\n            axis: options.axis,\r\n            series: options.series,\r\n            options: options,\r\n            offsetX: options.offsetX,\r\n            offsetY: options.offsetY\r\n        }),\r\n        _forceAnnotationRender() {\r\n            this._change([\"FORCE_RENDER\"])\r\n        },\r\n        _clear() {\r\n            this.hideTooltip();\r\n            this.clearHover()\r\n        }\r\n    }\r\n};\r\nvar polarChartPlugin = {\r\n    name: \"annotations_polar_chart\",\r\n    init() {},\r\n    dispose() {},\r\n    members: {\r\n        _getAnnotationCoords(annotation) {\r\n            var coords = {\r\n                offsetX: annotation.offsetX,\r\n                offsetY: annotation.offsetY,\r\n                canvas: this._calcCanvas()\r\n            };\r\n            var argAxis = this.getArgumentAxis();\r\n            var argument = argAxis.validateUnit(annotation.argument);\r\n            var value = this.getValueAxis().validateUnit(annotation.value);\r\n            var radius = annotation.radius;\r\n            var angle = annotation.angle;\r\n            var pointCoords;\r\n            var series;\r\n            if (annotation.series) {\r\n                series = this.series.filter(s => s.name === annotation.series)[0]\r\n            }\r\n            extend(true, coords, this.getXYFromPolar(angle, radius, argument, value));\r\n            if (isDefined(series)) {\r\n                if (isDefined(coords.angle) && !isDefined(value) && !isDefined(radius)) {\r\n                    if (!isDefined(argument)) {\r\n                        argument = argAxis.getTranslator().from(isFinite(angle) ? this.getActualAngle(angle) : coords.angle)\r\n                    }\r\n                    pointCoords = series.getSeriesPairCoord({\r\n                        argument: argument,\r\n                        angle: -coords.angle\r\n                    }, true)\r\n                } else if (isDefined(coords.radius) && !isDefined(argument) && !isDefined(angle)) {\r\n                    pointCoords = series.getSeriesPairCoord({\r\n                        radius: coords.radius\r\n                    }, false)\r\n                }\r\n                if (isDefined(pointCoords)) {\r\n                    coords.x = pointCoords.x;\r\n                    coords.y = pointCoords.y\r\n                }\r\n            }\r\n            if (annotation.series && !isDefined(pointCoords)) {\r\n                coords.x = coords.y = void 0\r\n            }\r\n            return coords\r\n        },\r\n        _annotationsPointerEventHandler: chartPlugin.members._annotationsPointerEventHandler,\r\n        _isAnnotationBounded: chartPlugin.members._isAnnotationBounded,\r\n        _pullOptions(options) {\r\n            var polarOptions = extend({}, {\r\n                radius: options.radius,\r\n                angle: options.angle\r\n            }, chartPlugin.members._pullOptions(options));\r\n            delete polarOptions.axis;\r\n            return polarOptions\r\n        },\r\n        _forceAnnotationRender: chartPlugin.members._forceAnnotationRender,\r\n        _clear: chartPlugin.members._clear\r\n    }\r\n};\r\nvar vectorMapPlugin = {\r\n    name: \"annotations_vector_map\",\r\n    init() {},\r\n    dispose() {\r\n        this._annotations._offTracker();\r\n        this._annotations._offTracker = null\r\n    },\r\n    members: {\r\n        _getAnnotationCoords(annotation) {\r\n            var coords = {\r\n                offsetX: annotation.offsetX,\r\n                offsetY: annotation.offsetY\r\n            };\r\n            coords.canvas = this._projection.getCanvas();\r\n            if (annotation.coordinates) {\r\n                var data = this._projection.toScreenPoint(annotation.coordinates);\r\n                coords.x = data[0];\r\n                coords.y = data[1]\r\n            }\r\n            return coords\r\n        },\r\n        _annotationsPointerEventHandler: chartPlugin.members._annotationsPointerEventHandler,\r\n        _isAnnotationBounded: options => isDefined(options.coordinates),\r\n        _pullOptions(options) {\r\n            var vectorMapOptions = extend({}, {\r\n                coordinates: options.coordinates\r\n            }, chartPlugin.members._pullOptions(options));\r\n            delete vectorMapOptions.axis;\r\n            delete vectorMapOptions.series;\r\n            delete vectorMapOptions.argument;\r\n            delete vectorMapOptions.value;\r\n            return vectorMapOptions\r\n        },\r\n        _forceAnnotationRender() {\r\n            this._change([\"EXTRA_ELEMENTS\"])\r\n        },\r\n        _getAnnotationStyles: () => ({\r\n            \"text-anchor\": \"start\"\r\n        }),\r\n        _clear() {}\r\n    },\r\n    extenders: {\r\n        _prepareExtraElements() {\r\n            var that = this;\r\n            var renderElements = () => {\r\n                that._renderExtraElements()\r\n            };\r\n            that._annotations._offTracker = that._tracker.on({\r\n                move: renderElements,\r\n                zoom: renderElements,\r\n                end: renderElements\r\n            })\r\n        }\r\n    }\r\n};\r\nvar pieChartPlugin = {\r\n    name: \"annotations_pie_chart\",\r\n    init() {},\r\n    dispose() {},\r\n    members: {\r\n        _getAnnotationCoords(annotation) {\r\n            var series;\r\n            var coords = {\r\n                offsetX: annotation.offsetX,\r\n                offsetY: annotation.offsetY,\r\n                canvas: this._canvas\r\n            };\r\n            if (annotation.argument) {\r\n                if (annotation.series) {\r\n                    series = this.getSeriesByName(annotation.series)\r\n                } else {\r\n                    series = this.series[0]\r\n                }\r\n                var argument = series.getPointsByArg(annotation.argument)[0];\r\n                var {\r\n                    x: x,\r\n                    y: y\r\n                } = argument.getAnnotationCoords(annotation.location);\r\n                coords.x = x;\r\n                coords.y = y\r\n            }\r\n            return coords\r\n        },\r\n        _isAnnotationBounded: options => options.argument,\r\n        _annotationsPointerEventHandler: chartPlugin.members._annotationsPointerEventHandler,\r\n        _pullOptions(options) {\r\n            var pieChartOptions = extend({}, {\r\n                location: options.location\r\n            }, chartPlugin.members._pullOptions(options));\r\n            delete pieChartOptions.axis;\r\n            return pieChartOptions\r\n        },\r\n        _clear: chartPlugin.members._clear,\r\n        _forceAnnotationRender: chartPlugin.members._forceAnnotationRender\r\n    }\r\n};\r\nvar corePlugin = {\r\n    name: \"annotations_core\",\r\n    init() {\r\n        this._annotations = {\r\n            items: [],\r\n            _hideToolTipForDrag: false,\r\n            tooltip: new Tooltip({\r\n                cssClass: \"\".concat(this._rootClassPrefix, \"-annotation-tooltip\"),\r\n                eventTrigger: this._eventTrigger,\r\n                widgetRoot: this.element(),\r\n                widget: this\r\n            }),\r\n            hideTooltip() {\r\n                this.tooltip.annotation = null;\r\n                this.tooltip.hide()\r\n            },\r\n            clearItems() {\r\n                this.items.forEach(i => i.plaque.clear());\r\n                this.items = []\r\n            }\r\n        };\r\n        this._annotations.tooltip.setRendererOptions(this._getRendererOptions())\r\n    },\r\n    dispose() {\r\n        this._annotationsGroup.linkRemove().linkOff();\r\n        eventsEngine.off(getDocument(), DOT_EVENT_NS);\r\n        this._annotationsGroup.off(DOT_EVENT_NS);\r\n        this._annotations.tooltip && this._annotations.tooltip.dispose()\r\n    },\r\n    extenders: {\r\n        _createHtmlStructure() {\r\n            this._annotationsGroup = this._renderer.g().attr({\r\n                class: \"\".concat(this._rootClassPrefix, \"-annotations\")\r\n            }).css(this._getAnnotationStyles()).linkOn(this._renderer.root, \"annotations\").linkAppend();\r\n            eventsEngine.on(getDocument(), POINTER_ACTION, e => {\r\n                if (!this._annotations.tooltip.isCursorOnTooltip(e.pageX, e.pageY)) {\r\n                    this._annotations.hideTooltip()\r\n                }\r\n            });\r\n            eventsEngine.on(getDocument(), POINTER_UP_EVENT_NAME, event => {\r\n                this._annotations._hideToolTipForDrag = false;\r\n                this._annotationsPointerEventHandler(event)\r\n            });\r\n            this._annotationsGroup.on(POINTER_ACTION, this._annotationsPointerEventHandler.bind(this))\r\n        },\r\n        _renderExtraElements() {\r\n            this._annotationsGroup.clear();\r\n            this._annotations.items.forEach(item => item.draw(this, this._annotationsGroup))\r\n        },\r\n        _stopCurrentHandling() {\r\n            this._annotations.hideTooltip()\r\n        }\r\n    },\r\n    members: {\r\n        _buildAnnotations() {\r\n            this._annotations.clearItems();\r\n            var items = this._getOption(\"annotations\", true);\r\n            if (!(null !== items && void 0 !== items && items.length)) {\r\n                return\r\n            }\r\n            this._annotations.items = createAnnotations(this, items, this._getOption(\"commonAnnotationSettings\"), this._getOption(\"customizeAnnotation\", true), this._pullOptions)\r\n        },\r\n        _setAnnotationTooltipOptions() {\r\n            var tooltipOptions = extend({}, this._getOption(\"tooltip\"));\r\n            tooltipOptions.contentTemplate = tooltipOptions.customizeTooltip = void 0;\r\n            this._annotations.tooltip.update(tooltipOptions)\r\n        },\r\n        _getAnnotationCoords: () => ({}),\r\n        _pullOptions: () => ({}),\r\n        _getAnnotationStyles: () => ({})\r\n    },\r\n    customize(constructor) {\r\n        constructor.addChange({\r\n            code: \"ANNOTATIONITEMS\",\r\n            handler() {\r\n                this._requestChange([\"ANNOTATIONS\"])\r\n            },\r\n            isOptionChange: true,\r\n            option: \"annotations\"\r\n        });\r\n        constructor.addChange({\r\n            code: \"ANNOTATIONSSETTINGS\",\r\n            handler() {\r\n                this._requestChange([\"ANNOTATIONS\"])\r\n            },\r\n            isOptionChange: true,\r\n            option: \"commonAnnotationSettings\"\r\n        });\r\n        constructor.addChange({\r\n            code: \"ANNOTATIONS\",\r\n            handler() {\r\n                this._buildAnnotations();\r\n                this._setAnnotationTooltipOptions();\r\n                this._forceAnnotationRender()\r\n            },\r\n            isThemeDependent: true,\r\n            isOptionChange: true\r\n        })\r\n    },\r\n    fontFields: [\"commonAnnotationSettings.font\"]\r\n};\r\nexport var plugins = {\r\n    core: corePlugin,\r\n    chart: chartPlugin,\r\n    polarChart: polarChartPlugin,\r\n    vectorMap: vectorMapPlugin,\r\n    pieChart: pieChartPlugin\r\n};\r\n"]},"metadata":{},"sourceType":"module"}