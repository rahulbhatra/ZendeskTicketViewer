{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsharma/Documents/Zendesk/zendesk-ticket-viewer/src/components/sign-in/sign-in.js\",\n    _s = $RefreshSig$();\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useNavigate } from 'react-router';\nimport axios from 'axios';\nimport Toast from '../toast/toast';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nexport default function SignIn(_ref) {\n  _s();\n\n  let {\n    isLoggedIn,\n    setIsLoggedIn\n  } = _ref;\n  const navigate = useNavigate();\n  const [toastOpen, setToastOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastSeverity, setToastSevertiy] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    var email = data.get('email');\n    var password = data.get('password');\n    axios.post('http://localhost:4000/api/tickets', {\n      email: data.get('email'),\n      password: data.get('password')\n    }).then(res => {\n      console.log(res.data);\n      localStorage.setItem('token', res.data.token);\n      setIsLoggedIn(true);\n      setToastOpen(true);\n      setToastMessage('Successfully Logged In');\n      setToastSevertiy('success');\n      setTimeout(() => {\n        navigate(\"/dashboard\");\n      }, 1000);\n    }).catch(error => {\n      console.log(error);\n      setToastOpen(true);\n      setToastMessage('Email Password is not matching!');\n      setToastSevertiy('error');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      dataSource: rows,\n      id: \"gridContainer\",\n      keyExpr: \"id\",\n      width: \"95%\",\n      height: \"calc(100vh - 120px)\",\n      showColumnLines: true,\n      showRowLines: true,\n      showBorders: true,\n      rowAlternationEnabled: true,\n      columns: columns,\n      children: [/*#__PURE__*/_jsxDEV(SearchPanel, {\n        visible: true,\n        highlightCaseSensitive: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pager, {\n        allowedPageSizes: pageSizes,\n        showPageSizeSelector: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paging, {\n        defaultPageSize: 25\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Export, {\n        enabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SignIn, \"R0VHpbQS9J0bYQcyxbKttgWEn7I=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/rahulsharma/Documents/Zendesk/zendesk-ticket-viewer/src/components/sign-in/sign-in.js"],"names":["Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","useNavigate","axios","Toast","useState","theme","SignIn","isLoggedIn","setIsLoggedIn","navigate","toastOpen","setToastOpen","toastMessage","setToastMessage","toastSeverity","setToastSevertiy","handleSubmit","event","preventDefault","data","FormData","currentTarget","email","get","password","post","then","res","console","log","localStorage","setItem","token","setTimeout","catch","error","rows","columns","pageSizes"],"mappings":"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","sourcesContent":["import Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useNavigate } from 'react-router';\nimport axios from 'axios';\nimport Toast from '../toast/toast';\nimport { useState } from 'react';\n\nconst theme = createTheme();\n\nexport default function SignIn({isLoggedIn, setIsLoggedIn}) {\n  const navigate = useNavigate();\n  const [toastOpen, setToastOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastSeverity, setToastSevertiy] = useState('');\n\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    var email = data.get('email');\n    var password = data.get('password');\n    \n    axios.post('http://localhost:4000/api/tickets', {\n        email: data.get('email'),\n        password: data.get('password'),\n    })\n      .then(res => {\n        console.log(res.data);\n        localStorage.setItem('token', res.data.token);\n        setIsLoggedIn(true);\n        setToastOpen(true);\n        setToastMessage('Successfully Logged In');\n        setToastSevertiy('success');\n        setTimeout(() => {  navigate(\"/dashboard\"); }, 1000);\n        \n      })\n      .catch(error => {\n        console.log(error);\n        setToastOpen(true);\n        setToastMessage('Email Password is not matching!');\n        setToastSevertiy('error');\n      });\n    }\n\n  return (\n    <>\n      <DataGrid dataSource={rows}\n        id='gridContainer'\n        keyExpr=\"id\"\n        width=\"95%\"\n        height=\"calc(100vh - 120px)\"\n        showColumnLines={true}\n        showRowLines={true}\n        showBorders={true}\n        rowAlternationEnabled={true}\n        columns={columns}\n        >\n          <SearchPanel visible={true} highlightCaseSensitive={true} />\n          <Pager allowedPageSizes={pageSizes} showPageSizeSelector={true} />\n          <Paging defaultPageSize={25} />\n          <Export enabled={true} />\n      </DataGrid>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}