{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/selection/selection.strategy.standard.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getKeyHash } from \"../../core/utils/common\";\nimport { isDefined, isObject } from \"../../core/utils/type\";\nimport { removeDuplicates, uniqueValues } from \"../../core/utils/array\";\nimport { isKeysEqual } from \"../../core/utils/array_compare\";\nimport dataQuery from \"../../data/query\";\nimport { Deferred, when } from \"../../core/utils/deferred\";\nimport { SelectionFilterCreator } from \"../../core/utils/selection_filter\";\nimport errors from \"../widget/ui.errors\";\nimport SelectionStrategy from \"./selection.strategy\";\nexport default SelectionStrategy.inherit({\n  ctor: function (options) {\n    this.callBase(options);\n\n    this._initSelectedItemKeyHash();\n  },\n  _initSelectedItemKeyHash: function () {\n    this._setOption(\"keyHashIndices\", this.options.equalByReference ? null : {});\n  },\n  getSelectedItemKeys: function () {\n    return this.options.selectedItemKeys.slice(0);\n  },\n  getSelectedItems: function () {\n    return this.options.selectedItems.slice(0);\n  },\n  _preserveSelectionUpdate: function (items, isDeselect) {\n    var keyOf = this.options.keyOf;\n    var keyIndicesToRemoveMap;\n    var keyIndex;\n    var i;\n\n    if (!keyOf) {\n      return;\n    }\n\n    var isBatchDeselect = isDeselect && items.length > 1 && !this.options.equalByReference;\n\n    if (isBatchDeselect) {\n      keyIndicesToRemoveMap = {};\n    }\n\n    for (i = 0; i < items.length; i++) {\n      var item = items[i];\n      var key = keyOf(item);\n\n      if (isDeselect) {\n        keyIndex = this.removeSelectedItem(key, keyIndicesToRemoveMap);\n\n        if (keyIndicesToRemoveMap && keyIndex >= 0) {\n          keyIndicesToRemoveMap[keyIndex] = true;\n        }\n      } else {\n        this.addSelectedItem(key, item);\n      }\n    }\n\n    if (isBatchDeselect) {\n      this._batchRemoveSelectedItems(keyIndicesToRemoveMap);\n    }\n  },\n  _batchRemoveSelectedItems: function (keyIndicesToRemoveMap) {\n    var selectedItemKeys = this.options.selectedItemKeys.slice(0);\n    var selectedItems = this.options.selectedItems.slice(0);\n    this.options.selectedItemKeys.length = 0;\n    this.options.selectedItems.length = 0;\n\n    for (var i = 0; i < selectedItemKeys.length; i++) {\n      if (!keyIndicesToRemoveMap[i]) {\n        this.options.selectedItemKeys.push(selectedItemKeys[i]);\n        this.options.selectedItems.push(selectedItems[i]);\n      }\n    }\n\n    this._initSelectedItemKeyHash();\n\n    this.updateSelectedItemKeyHash(this.options.selectedItemKeys);\n  },\n  _loadSelectedItemsCore: function (keys, isDeselect, isSelectAll) {\n    var deferred = new Deferred();\n    var key = this.options.key();\n\n    if (!keys.length && !isSelectAll) {\n      deferred.resolve([]);\n      return deferred;\n    }\n\n    var filter = this.options.filter();\n\n    if (isSelectAll && isDeselect && !filter) {\n      deferred.resolve(this.getSelectedItems());\n      return deferred;\n    }\n\n    var selectionFilterCreator = new SelectionFilterCreator(keys, isSelectAll);\n    var combinedFilter = selectionFilterCreator.getCombinedFilter(key, filter);\n    var deselectedItems = [];\n\n    if (isDeselect) {\n      var selectedItems = this.options.selectedItems;\n      deselectedItems = combinedFilter && keys.length !== selectedItems.length ? dataQuery(selectedItems).filter(combinedFilter).toArray() : selectedItems.slice(0);\n    }\n\n    var filteredItems = deselectedItems.length ? deselectedItems : this.options.plainItems(true).filter(this.options.isSelectableItem).map(this.options.getItemData);\n    var localFilter = selectionFilterCreator.getLocalFilter(this.options.keyOf, this.equalKeys.bind(this), this.options.equalByReference, key);\n    filteredItems = filteredItems.filter(localFilter);\n\n    if (deselectedItems.length || !isSelectAll && filteredItems.length === keys.length) {\n      deferred.resolve(filteredItems);\n    } else {\n      deferred = this._loadFilteredData(combinedFilter, localFilter, null, isSelectAll);\n    }\n\n    return deferred;\n  },\n  _replaceSelectionUpdate: function (items) {\n    var internalKeys = [];\n    var keyOf = this.options.keyOf;\n\n    if (!keyOf) {\n      return;\n    }\n\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n      var key = keyOf(item);\n      internalKeys.push(key);\n    }\n\n    this.setSelectedItems(internalKeys, items);\n  },\n  _warnOnIncorrectKeys: function (keys) {\n    var allowNullValue = this.options.allowNullValue;\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if ((!allowNullValue || null !== key) && !this.isItemKeySelected(key)) {\n        errors.log(\"W1002\", key);\n      }\n    }\n  },\n  _isMultiSelectEnabled: function () {\n    var mode = this.options.mode;\n    return \"all\" === mode || \"multiple\" === mode;\n  },\n  _requestInProgress: function () {\n    var _this$_lastLoadDeferr;\n\n    return \"pending\" === (null === (_this$_lastLoadDeferr = this._lastLoadDeferred) || void 0 === _this$_lastLoadDeferr ? void 0 : _this$_lastLoadDeferr.state());\n  },\n  _concatRequestsItems: function (keys, isDeselect, oldRequestItems, updatedKeys) {\n    var selectedItems;\n    var deselectedItems = isDeselect ? keys : [];\n\n    if (updatedKeys) {\n      selectedItems = updatedKeys;\n    } else {\n      selectedItems = removeDuplicates(keys, this.options.selectedItemKeys);\n    }\n\n    return {\n      addedItems: oldRequestItems.added.concat(selectedItems),\n      removedItems: oldRequestItems.removed.concat(deselectedItems),\n      keys: keys\n    };\n  },\n  _collectLastRequestData: function (keys, isDeselect, isSelectAll, updatedKeys) {\n    var isDeselectAll = isDeselect && isSelectAll;\n    var oldRequestItems = {\n      added: [],\n      removed: []\n    };\n\n    var multiSelectEnabled = this._isMultiSelectEnabled();\n\n    var lastRequestData = multiSelectEnabled ? this._lastRequestData : {};\n\n    if (multiSelectEnabled) {\n      if (this._shouldMergeWithLastRequest) {\n        if (isDeselectAll) {\n          this._lastLoadDeferred.reject();\n\n          lastRequestData = {};\n        } else if (!isKeysEqual(keys, this.options.selectedItemKeys)) {\n          oldRequestItems.added = lastRequestData.addedItems;\n          oldRequestItems.removed = lastRequestData.removedItems;\n\n          if (!isDeselect) {\n            this._lastLoadDeferred.reject();\n          }\n        }\n      }\n\n      lastRequestData = this._concatRequestsItems(keys, isDeselect, oldRequestItems, this._shouldMergeWithLastRequest ? void 0 : updatedKeys);\n    }\n\n    return lastRequestData;\n  },\n  _updateKeysByLastRequestData: function (keys, isDeselect, isSelectAll) {\n    var currentKeys = keys;\n\n    if (this._isMultiSelectEnabled() && this._shouldMergeWithLastRequest && !isDeselect && !isSelectAll) {\n      var _this$_lastRequestDat, _this$_lastRequestDat2;\n\n      currentKeys = removeDuplicates(keys.concat(null === (_this$_lastRequestDat = this._lastRequestData) || void 0 === _this$_lastRequestDat ? void 0 : _this$_lastRequestDat.addedItems), null === (_this$_lastRequestDat2 = this._lastRequestData) || void 0 === _this$_lastRequestDat2 ? void 0 : _this$_lastRequestDat2.removedItems);\n      currentKeys = uniqueValues(currentKeys);\n    }\n\n    return currentKeys;\n  },\n  _loadSelectedItems: function (keys, isDeselect, isSelectAll, updatedKeys) {\n    var that = this;\n    var deferred = new Deferred();\n    this._shouldMergeWithLastRequest = this._requestInProgress();\n    this._lastRequestData = this._collectLastRequestData(keys, isDeselect, isSelectAll, updatedKeys);\n    when(that._lastLoadDeferred).always(function () {\n      var currentKeys = that._updateKeysByLastRequestData(keys, isDeselect, isSelectAll);\n\n      that._shouldMergeWithLastRequest = false;\n\n      that._loadSelectedItemsCore(currentKeys, isDeselect, isSelectAll).done(deferred.resolve).fail(deferred.reject);\n    });\n    that._lastLoadDeferred = deferred;\n    return deferred;\n  },\n  selectedItemKeys: function (keys, preserve, isDeselect, isSelectAll, updatedKeys) {\n    var that = this;\n\n    var deferred = that._loadSelectedItems(keys, isDeselect, isSelectAll, updatedKeys);\n\n    deferred.done(function (items) {\n      if (preserve) {\n        that._preserveSelectionUpdate(items, isDeselect);\n      } else {\n        that._replaceSelectionUpdate(items);\n      }\n\n      that.onSelectionChanged();\n    });\n    return deferred;\n  },\n  addSelectedItem: function (key, itemData) {\n    if (isDefined(itemData) && !this.options.ignoreDisabledItems && itemData.disabled) {\n      if (-1 === this.options.disabledItemKeys.indexOf(key)) {\n        this.options.disabledItemKeys.push(key);\n      }\n\n      return;\n    }\n\n    var keyHash = this._getKeyHash(key);\n\n    if (-1 === this._indexOfSelectedItemKey(keyHash)) {\n      if (!isObject(keyHash) && this.options.keyHashIndices) {\n        this.options.keyHashIndices[keyHash] = [this.options.selectedItemKeys.length];\n      }\n\n      this.options.selectedItemKeys.push(key);\n      this.options.addedItemKeys.push(key);\n      this.options.addedItems.push(itemData);\n      this.options.selectedItems.push(itemData);\n    }\n  },\n  _getSelectedIndexByKey: function (key, ignoreIndicesMap) {\n    var selectedItemKeys = this.options.selectedItemKeys;\n\n    for (var index = 0; index < selectedItemKeys.length; index++) {\n      if ((!ignoreIndicesMap || !ignoreIndicesMap[index]) && this.equalKeys(selectedItemKeys[index], key)) {\n        return index;\n      }\n    }\n\n    return -1;\n  },\n  _getSelectedIndexByHash: function (key, ignoreIndicesMap) {\n    var indices = this.options.keyHashIndices[key];\n\n    if (indices && indices.length > 1 && ignoreIndicesMap) {\n      indices = indices.filter(function (index) {\n        return !ignoreIndicesMap[index];\n      });\n    }\n\n    return indices && indices[0] >= 0 ? indices[0] : -1;\n  },\n  _indexOfSelectedItemKey: function (key, ignoreIndicesMap) {\n    var selectedIndex;\n\n    if (this.options.equalByReference) {\n      selectedIndex = this.options.selectedItemKeys.indexOf(key);\n    } else if (isObject(key)) {\n      selectedIndex = this._getSelectedIndexByKey(key, ignoreIndicesMap);\n    } else {\n      selectedIndex = this._getSelectedIndexByHash(key, ignoreIndicesMap);\n    }\n\n    return selectedIndex;\n  },\n  _shiftSelectedKeyIndices: function (keyIndex) {\n    for (var currentKeyIndex = keyIndex; currentKeyIndex < this.options.selectedItemKeys.length; currentKeyIndex++) {\n      var currentKey = this.options.selectedItemKeys[currentKeyIndex];\n      var currentKeyHash = getKeyHash(currentKey);\n      var currentKeyIndices = this.options.keyHashIndices[currentKeyHash];\n\n      if (!currentKeyIndices) {\n        continue;\n      }\n\n      for (var i = 0; i < currentKeyIndices.length; i++) {\n        if (currentKeyIndices[i] > keyIndex) {\n          currentKeyIndices[i]--;\n        }\n      }\n    }\n  },\n  removeSelectedItem: function (key, keyIndicesToRemoveMap) {\n    var keyHash = this._getKeyHash(key);\n\n    var isBatchDeselect = !!keyIndicesToRemoveMap;\n\n    var keyIndex = this._indexOfSelectedItemKey(keyHash, keyIndicesToRemoveMap);\n\n    if (keyIndex < 0) {\n      return keyIndex;\n    }\n\n    this.options.removedItemKeys.push(key);\n    this.options.removedItems.push(this.options.selectedItems[keyIndex]);\n\n    if (isBatchDeselect) {\n      return keyIndex;\n    }\n\n    this.options.selectedItemKeys.splice(keyIndex, 1);\n    this.options.selectedItems.splice(keyIndex, 1);\n\n    if (isObject(keyHash) || !this.options.keyHashIndices) {\n      return keyIndex;\n    }\n\n    var keyIndices = this.options.keyHashIndices[keyHash];\n\n    if (!keyIndices) {\n      return keyIndex;\n    }\n\n    keyIndices.shift();\n\n    if (!keyIndices.length) {\n      delete this.options.keyHashIndices[keyHash];\n    }\n\n    this._shiftSelectedKeyIndices(keyIndex);\n\n    return keyIndex;\n  },\n  _updateAddedItemKeys: function (keys, items) {\n    for (var i = 0; i < keys.length; i++) {\n      if (!this.isItemKeySelected(keys[i])) {\n        this.options.addedItemKeys.push(keys[i]);\n        this.options.addedItems.push(items[i]);\n      }\n    }\n  },\n  _updateRemovedItemKeys: function (keys, oldSelectedKeys, oldSelectedItems) {\n    for (var i = 0; i < oldSelectedKeys.length; i++) {\n      if (!this.isItemKeySelected(oldSelectedKeys[i])) {\n        this.options.removedItemKeys.push(oldSelectedKeys[i]);\n        this.options.removedItems.push(oldSelectedItems[i]);\n      }\n    }\n  },\n  _isItemSelectionInProgress: function (key, checkPending) {\n    var shouldCheckPending = checkPending && this._lastRequestData && this._requestInProgress();\n\n    if (shouldCheckPending) {\n      var _this$_lastRequestDat3;\n\n      return -1 !== (null === (_this$_lastRequestDat3 = this._lastRequestData.addedItems) || void 0 === _this$_lastRequestDat3 ? void 0 : _this$_lastRequestDat3.indexOf(key));\n    } else {\n      return false;\n    }\n  },\n  _getKeyHash: function (key) {\n    return this.options.equalByReference ? key : getKeyHash(key);\n  },\n  setSelectedItems: function (keys, items) {\n    this._updateAddedItemKeys(keys, items);\n\n    var oldSelectedKeys = this.options.selectedItemKeys;\n    var oldSelectedItems = this.options.selectedItems;\n\n    if (!this.options.equalByReference) {\n      this._initSelectedItemKeyHash();\n\n      this.updateSelectedItemKeyHash(keys);\n    }\n\n    this._setOption(\"selectedItemKeys\", keys);\n\n    this._setOption(\"selectedItems\", items);\n\n    this._updateRemovedItemKeys(keys, oldSelectedKeys, oldSelectedItems);\n  },\n  isItemDataSelected: function (itemData) {\n    var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n    var key = this.options.keyOf(itemData);\n    return this.isItemKeySelected(key, options);\n  },\n  isItemKeySelected: function (key) {\n    var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n\n    var result = this._isItemSelectionInProgress(key, options.checkPending);\n\n    if (!result) {\n      var keyHash = this._getKeyHash(key);\n\n      var index = this._indexOfSelectedItemKey(keyHash);\n\n      result = -1 !== index;\n    }\n\n    return result;\n  },\n  getSelectAllState: function (visibleOnly) {\n    if (visibleOnly) {\n      return this._getVisibleSelectAllState();\n    } else {\n      return this._getFullSelectAllState();\n    }\n  }\n});","map":{"version":3,"sources":["/Users/rahulsharma/node_modules/devextreme/esm/ui/selection/selection.strategy.standard.js"],"names":["getKeyHash","isDefined","isObject","removeDuplicates","uniqueValues","isKeysEqual","dataQuery","Deferred","when","SelectionFilterCreator","errors","SelectionStrategy","inherit","ctor","options","callBase","_initSelectedItemKeyHash","_setOption","equalByReference","getSelectedItemKeys","selectedItemKeys","slice","getSelectedItems","selectedItems","_preserveSelectionUpdate","items","isDeselect","keyOf","keyIndicesToRemoveMap","keyIndex","i","isBatchDeselect","length","item","key","removeSelectedItem","addSelectedItem","_batchRemoveSelectedItems","push","updateSelectedItemKeyHash","_loadSelectedItemsCore","keys","isSelectAll","deferred","resolve","filter","selectionFilterCreator","combinedFilter","getCombinedFilter","deselectedItems","toArray","filteredItems","plainItems","isSelectableItem","map","getItemData","localFilter","getLocalFilter","equalKeys","bind","_loadFilteredData","_replaceSelectionUpdate","internalKeys","setSelectedItems","_warnOnIncorrectKeys","allowNullValue","isItemKeySelected","log","_isMultiSelectEnabled","mode","_requestInProgress","_this$_lastLoadDeferr","_lastLoadDeferred","state","_concatRequestsItems","oldRequestItems","updatedKeys","addedItems","added","concat","removedItems","removed","_collectLastRequestData","isDeselectAll","multiSelectEnabled","lastRequestData","_lastRequestData","_shouldMergeWithLastRequest","reject","_updateKeysByLastRequestData","currentKeys","_this$_lastRequestDat","_this$_lastRequestDat2","_loadSelectedItems","that","always","done","fail","preserve","onSelectionChanged","itemData","ignoreDisabledItems","disabled","disabledItemKeys","indexOf","keyHash","_getKeyHash","_indexOfSelectedItemKey","keyHashIndices","addedItemKeys","_getSelectedIndexByKey","ignoreIndicesMap","index","_getSelectedIndexByHash","indices","selectedIndex","_shiftSelectedKeyIndices","currentKeyIndex","currentKey","currentKeyHash","currentKeyIndices","removedItemKeys","splice","keyIndices","shift","_updateAddedItemKeys","_updateRemovedItemKeys","oldSelectedKeys","oldSelectedItems","_isItemSelectionInProgress","checkPending","shouldCheckPending","_this$_lastRequestDat3","isItemDataSelected","arguments","result","getSelectAllState","visibleOnly","_getVisibleSelectAllState","_getFullSelectAllState"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/selection/selection.strategy.standard.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getKeyHash\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    removeDuplicates,\r\n    uniqueValues\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    isKeysEqual\r\n} from \"../../core/utils/array_compare\";\r\nimport dataQuery from \"../../data/query\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    SelectionFilterCreator\r\n} from \"../../core/utils/selection_filter\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport SelectionStrategy from \"./selection.strategy\";\r\nexport default SelectionStrategy.inherit({\r\n    ctor: function(options) {\r\n        this.callBase(options);\r\n        this._initSelectedItemKeyHash()\r\n    },\r\n    _initSelectedItemKeyHash: function() {\r\n        this._setOption(\"keyHashIndices\", this.options.equalByReference ? null : {})\r\n    },\r\n    getSelectedItemKeys: function() {\r\n        return this.options.selectedItemKeys.slice(0)\r\n    },\r\n    getSelectedItems: function() {\r\n        return this.options.selectedItems.slice(0)\r\n    },\r\n    _preserveSelectionUpdate: function(items, isDeselect) {\r\n        var keyOf = this.options.keyOf;\r\n        var keyIndicesToRemoveMap;\r\n        var keyIndex;\r\n        var i;\r\n        if (!keyOf) {\r\n            return\r\n        }\r\n        var isBatchDeselect = isDeselect && items.length > 1 && !this.options.equalByReference;\r\n        if (isBatchDeselect) {\r\n            keyIndicesToRemoveMap = {}\r\n        }\r\n        for (i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            var key = keyOf(item);\r\n            if (isDeselect) {\r\n                keyIndex = this.removeSelectedItem(key, keyIndicesToRemoveMap);\r\n                if (keyIndicesToRemoveMap && keyIndex >= 0) {\r\n                    keyIndicesToRemoveMap[keyIndex] = true\r\n                }\r\n            } else {\r\n                this.addSelectedItem(key, item)\r\n            }\r\n        }\r\n        if (isBatchDeselect) {\r\n            this._batchRemoveSelectedItems(keyIndicesToRemoveMap)\r\n        }\r\n    },\r\n    _batchRemoveSelectedItems: function(keyIndicesToRemoveMap) {\r\n        var selectedItemKeys = this.options.selectedItemKeys.slice(0);\r\n        var selectedItems = this.options.selectedItems.slice(0);\r\n        this.options.selectedItemKeys.length = 0;\r\n        this.options.selectedItems.length = 0;\r\n        for (var i = 0; i < selectedItemKeys.length; i++) {\r\n            if (!keyIndicesToRemoveMap[i]) {\r\n                this.options.selectedItemKeys.push(selectedItemKeys[i]);\r\n                this.options.selectedItems.push(selectedItems[i])\r\n            }\r\n        }\r\n        this._initSelectedItemKeyHash();\r\n        this.updateSelectedItemKeyHash(this.options.selectedItemKeys)\r\n    },\r\n    _loadSelectedItemsCore: function(keys, isDeselect, isSelectAll) {\r\n        var deferred = new Deferred;\r\n        var key = this.options.key();\r\n        if (!keys.length && !isSelectAll) {\r\n            deferred.resolve([]);\r\n            return deferred\r\n        }\r\n        var filter = this.options.filter();\r\n        if (isSelectAll && isDeselect && !filter) {\r\n            deferred.resolve(this.getSelectedItems());\r\n            return deferred\r\n        }\r\n        var selectionFilterCreator = new SelectionFilterCreator(keys, isSelectAll);\r\n        var combinedFilter = selectionFilterCreator.getCombinedFilter(key, filter);\r\n        var deselectedItems = [];\r\n        if (isDeselect) {\r\n            var selectedItems = this.options.selectedItems;\r\n            deselectedItems = combinedFilter && keys.length !== selectedItems.length ? dataQuery(selectedItems).filter(combinedFilter).toArray() : selectedItems.slice(0)\r\n        }\r\n        var filteredItems = deselectedItems.length ? deselectedItems : this.options.plainItems(true).filter(this.options.isSelectableItem).map(this.options.getItemData);\r\n        var localFilter = selectionFilterCreator.getLocalFilter(this.options.keyOf, this.equalKeys.bind(this), this.options.equalByReference, key);\r\n        filteredItems = filteredItems.filter(localFilter);\r\n        if (deselectedItems.length || !isSelectAll && filteredItems.length === keys.length) {\r\n            deferred.resolve(filteredItems)\r\n        } else {\r\n            deferred = this._loadFilteredData(combinedFilter, localFilter, null, isSelectAll)\r\n        }\r\n        return deferred\r\n    },\r\n    _replaceSelectionUpdate: function(items) {\r\n        var internalKeys = [];\r\n        var keyOf = this.options.keyOf;\r\n        if (!keyOf) {\r\n            return\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            var key = keyOf(item);\r\n            internalKeys.push(key)\r\n        }\r\n        this.setSelectedItems(internalKeys, items)\r\n    },\r\n    _warnOnIncorrectKeys: function(keys) {\r\n        var allowNullValue = this.options.allowNullValue;\r\n        for (var i = 0; i < keys.length; i++) {\r\n            var key = keys[i];\r\n            if ((!allowNullValue || null !== key) && !this.isItemKeySelected(key)) {\r\n                errors.log(\"W1002\", key)\r\n            }\r\n        }\r\n    },\r\n    _isMultiSelectEnabled: function() {\r\n        var mode = this.options.mode;\r\n        return \"all\" === mode || \"multiple\" === mode\r\n    },\r\n    _requestInProgress: function() {\r\n        var _this$_lastLoadDeferr;\r\n        return \"pending\" === (null === (_this$_lastLoadDeferr = this._lastLoadDeferred) || void 0 === _this$_lastLoadDeferr ? void 0 : _this$_lastLoadDeferr.state())\r\n    },\r\n    _concatRequestsItems: function(keys, isDeselect, oldRequestItems, updatedKeys) {\r\n        var selectedItems;\r\n        var deselectedItems = isDeselect ? keys : [];\r\n        if (updatedKeys) {\r\n            selectedItems = updatedKeys\r\n        } else {\r\n            selectedItems = removeDuplicates(keys, this.options.selectedItemKeys)\r\n        }\r\n        return {\r\n            addedItems: oldRequestItems.added.concat(selectedItems),\r\n            removedItems: oldRequestItems.removed.concat(deselectedItems),\r\n            keys: keys\r\n        }\r\n    },\r\n    _collectLastRequestData: function(keys, isDeselect, isSelectAll, updatedKeys) {\r\n        var isDeselectAll = isDeselect && isSelectAll;\r\n        var oldRequestItems = {\r\n            added: [],\r\n            removed: []\r\n        };\r\n        var multiSelectEnabled = this._isMultiSelectEnabled();\r\n        var lastRequestData = multiSelectEnabled ? this._lastRequestData : {};\r\n        if (multiSelectEnabled) {\r\n            if (this._shouldMergeWithLastRequest) {\r\n                if (isDeselectAll) {\r\n                    this._lastLoadDeferred.reject();\r\n                    lastRequestData = {}\r\n                } else if (!isKeysEqual(keys, this.options.selectedItemKeys)) {\r\n                    oldRequestItems.added = lastRequestData.addedItems;\r\n                    oldRequestItems.removed = lastRequestData.removedItems;\r\n                    if (!isDeselect) {\r\n                        this._lastLoadDeferred.reject()\r\n                    }\r\n                }\r\n            }\r\n            lastRequestData = this._concatRequestsItems(keys, isDeselect, oldRequestItems, this._shouldMergeWithLastRequest ? void 0 : updatedKeys)\r\n        }\r\n        return lastRequestData\r\n    },\r\n    _updateKeysByLastRequestData: function(keys, isDeselect, isSelectAll) {\r\n        var currentKeys = keys;\r\n        if (this._isMultiSelectEnabled() && this._shouldMergeWithLastRequest && !isDeselect && !isSelectAll) {\r\n            var _this$_lastRequestDat, _this$_lastRequestDat2;\r\n            currentKeys = removeDuplicates(keys.concat(null === (_this$_lastRequestDat = this._lastRequestData) || void 0 === _this$_lastRequestDat ? void 0 : _this$_lastRequestDat.addedItems), null === (_this$_lastRequestDat2 = this._lastRequestData) || void 0 === _this$_lastRequestDat2 ? void 0 : _this$_lastRequestDat2.removedItems);\r\n            currentKeys = uniqueValues(currentKeys)\r\n        }\r\n        return currentKeys\r\n    },\r\n    _loadSelectedItems: function(keys, isDeselect, isSelectAll, updatedKeys) {\r\n        var that = this;\r\n        var deferred = new Deferred;\r\n        this._shouldMergeWithLastRequest = this._requestInProgress();\r\n        this._lastRequestData = this._collectLastRequestData(keys, isDeselect, isSelectAll, updatedKeys);\r\n        when(that._lastLoadDeferred).always((function() {\r\n            var currentKeys = that._updateKeysByLastRequestData(keys, isDeselect, isSelectAll);\r\n            that._shouldMergeWithLastRequest = false;\r\n            that._loadSelectedItemsCore(currentKeys, isDeselect, isSelectAll).done(deferred.resolve).fail(deferred.reject)\r\n        }));\r\n        that._lastLoadDeferred = deferred;\r\n        return deferred\r\n    },\r\n    selectedItemKeys: function(keys, preserve, isDeselect, isSelectAll, updatedKeys) {\r\n        var that = this;\r\n        var deferred = that._loadSelectedItems(keys, isDeselect, isSelectAll, updatedKeys);\r\n        deferred.done((function(items) {\r\n            if (preserve) {\r\n                that._preserveSelectionUpdate(items, isDeselect)\r\n            } else {\r\n                that._replaceSelectionUpdate(items)\r\n            }\r\n            that.onSelectionChanged()\r\n        }));\r\n        return deferred\r\n    },\r\n    addSelectedItem: function(key, itemData) {\r\n        if (isDefined(itemData) && !this.options.ignoreDisabledItems && itemData.disabled) {\r\n            if (-1 === this.options.disabledItemKeys.indexOf(key)) {\r\n                this.options.disabledItemKeys.push(key)\r\n            }\r\n            return\r\n        }\r\n        var keyHash = this._getKeyHash(key);\r\n        if (-1 === this._indexOfSelectedItemKey(keyHash)) {\r\n            if (!isObject(keyHash) && this.options.keyHashIndices) {\r\n                this.options.keyHashIndices[keyHash] = [this.options.selectedItemKeys.length]\r\n            }\r\n            this.options.selectedItemKeys.push(key);\r\n            this.options.addedItemKeys.push(key);\r\n            this.options.addedItems.push(itemData);\r\n            this.options.selectedItems.push(itemData)\r\n        }\r\n    },\r\n    _getSelectedIndexByKey: function(key, ignoreIndicesMap) {\r\n        var selectedItemKeys = this.options.selectedItemKeys;\r\n        for (var index = 0; index < selectedItemKeys.length; index++) {\r\n            if ((!ignoreIndicesMap || !ignoreIndicesMap[index]) && this.equalKeys(selectedItemKeys[index], key)) {\r\n                return index\r\n            }\r\n        }\r\n        return -1\r\n    },\r\n    _getSelectedIndexByHash: function(key, ignoreIndicesMap) {\r\n        var indices = this.options.keyHashIndices[key];\r\n        if (indices && indices.length > 1 && ignoreIndicesMap) {\r\n            indices = indices.filter((function(index) {\r\n                return !ignoreIndicesMap[index]\r\n            }))\r\n        }\r\n        return indices && indices[0] >= 0 ? indices[0] : -1\r\n    },\r\n    _indexOfSelectedItemKey: function(key, ignoreIndicesMap) {\r\n        var selectedIndex;\r\n        if (this.options.equalByReference) {\r\n            selectedIndex = this.options.selectedItemKeys.indexOf(key)\r\n        } else if (isObject(key)) {\r\n            selectedIndex = this._getSelectedIndexByKey(key, ignoreIndicesMap)\r\n        } else {\r\n            selectedIndex = this._getSelectedIndexByHash(key, ignoreIndicesMap)\r\n        }\r\n        return selectedIndex\r\n    },\r\n    _shiftSelectedKeyIndices: function(keyIndex) {\r\n        for (var currentKeyIndex = keyIndex; currentKeyIndex < this.options.selectedItemKeys.length; currentKeyIndex++) {\r\n            var currentKey = this.options.selectedItemKeys[currentKeyIndex];\r\n            var currentKeyHash = getKeyHash(currentKey);\r\n            var currentKeyIndices = this.options.keyHashIndices[currentKeyHash];\r\n            if (!currentKeyIndices) {\r\n                continue\r\n            }\r\n            for (var i = 0; i < currentKeyIndices.length; i++) {\r\n                if (currentKeyIndices[i] > keyIndex) {\r\n                    currentKeyIndices[i]--\r\n                }\r\n            }\r\n        }\r\n    },\r\n    removeSelectedItem: function(key, keyIndicesToRemoveMap) {\r\n        var keyHash = this._getKeyHash(key);\r\n        var isBatchDeselect = !!keyIndicesToRemoveMap;\r\n        var keyIndex = this._indexOfSelectedItemKey(keyHash, keyIndicesToRemoveMap);\r\n        if (keyIndex < 0) {\r\n            return keyIndex\r\n        }\r\n        this.options.removedItemKeys.push(key);\r\n        this.options.removedItems.push(this.options.selectedItems[keyIndex]);\r\n        if (isBatchDeselect) {\r\n            return keyIndex\r\n        }\r\n        this.options.selectedItemKeys.splice(keyIndex, 1);\r\n        this.options.selectedItems.splice(keyIndex, 1);\r\n        if (isObject(keyHash) || !this.options.keyHashIndices) {\r\n            return keyIndex\r\n        }\r\n        var keyIndices = this.options.keyHashIndices[keyHash];\r\n        if (!keyIndices) {\r\n            return keyIndex\r\n        }\r\n        keyIndices.shift();\r\n        if (!keyIndices.length) {\r\n            delete this.options.keyHashIndices[keyHash]\r\n        }\r\n        this._shiftSelectedKeyIndices(keyIndex);\r\n        return keyIndex\r\n    },\r\n    _updateAddedItemKeys: function(keys, items) {\r\n        for (var i = 0; i < keys.length; i++) {\r\n            if (!this.isItemKeySelected(keys[i])) {\r\n                this.options.addedItemKeys.push(keys[i]);\r\n                this.options.addedItems.push(items[i])\r\n            }\r\n        }\r\n    },\r\n    _updateRemovedItemKeys: function(keys, oldSelectedKeys, oldSelectedItems) {\r\n        for (var i = 0; i < oldSelectedKeys.length; i++) {\r\n            if (!this.isItemKeySelected(oldSelectedKeys[i])) {\r\n                this.options.removedItemKeys.push(oldSelectedKeys[i]);\r\n                this.options.removedItems.push(oldSelectedItems[i])\r\n            }\r\n        }\r\n    },\r\n    _isItemSelectionInProgress: function(key, checkPending) {\r\n        var shouldCheckPending = checkPending && this._lastRequestData && this._requestInProgress();\r\n        if (shouldCheckPending) {\r\n            var _this$_lastRequestDat3;\r\n            return -1 !== (null === (_this$_lastRequestDat3 = this._lastRequestData.addedItems) || void 0 === _this$_lastRequestDat3 ? void 0 : _this$_lastRequestDat3.indexOf(key))\r\n        } else {\r\n            return false\r\n        }\r\n    },\r\n    _getKeyHash: function(key) {\r\n        return this.options.equalByReference ? key : getKeyHash(key)\r\n    },\r\n    setSelectedItems: function(keys, items) {\r\n        this._updateAddedItemKeys(keys, items);\r\n        var oldSelectedKeys = this.options.selectedItemKeys;\r\n        var oldSelectedItems = this.options.selectedItems;\r\n        if (!this.options.equalByReference) {\r\n            this._initSelectedItemKeyHash();\r\n            this.updateSelectedItemKeyHash(keys)\r\n        }\r\n        this._setOption(\"selectedItemKeys\", keys);\r\n        this._setOption(\"selectedItems\", items);\r\n        this._updateRemovedItemKeys(keys, oldSelectedKeys, oldSelectedItems)\r\n    },\r\n    isItemDataSelected: function(itemData) {\r\n        var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n        var key = this.options.keyOf(itemData);\r\n        return this.isItemKeySelected(key, options)\r\n    },\r\n    isItemKeySelected: function(key) {\r\n        var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n        var result = this._isItemSelectionInProgress(key, options.checkPending);\r\n        if (!result) {\r\n            var keyHash = this._getKeyHash(key);\r\n            var index = this._indexOfSelectedItemKey(keyHash);\r\n            result = -1 !== index\r\n        }\r\n        return result\r\n    },\r\n    getSelectAllState: function(visibleOnly) {\r\n        if (visibleOnly) {\r\n            return this._getVisibleSelectAllState()\r\n        } else {\r\n            return this._getFullSelectAllState()\r\n        }\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}