{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/utils/subscribe_to_event.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport eventsEngine from \"../../events/core/events_engine\";\nimport * as clickEvent from \"../../events/click\";\nimport scrollEvents from \"../../events/gesture/emitter.gesture.scroll\";\nimport pointerEvents from \"../../events/pointer\";\nexport function subscribeToEvent(eventName) {\n  return (element, handler, eventData) => {\n    if (handler && element) {\n      eventsEngine.on(element, eventName, eventData, handler);\n      return () => {\n        eventsEngine.off(element, eventName, handler);\n      };\n    }\n\n    return;\n  };\n}\nexport var subscribeToClickEvent = subscribeToEvent(clickEvent.name);\nexport var subscribeToScrollEvent = subscribeToEvent(scrollEvents.scroll);\nexport var subscribeToScrollInitEvent = subscribeToEvent(scrollEvents.init);\nexport var subscribeToDXScrollStartEvent = subscribeToEvent(scrollEvents.start);\nexport var subscribeToDXScrollMoveEvent = subscribeToEvent(scrollEvents.move);\nexport var subscribeToDXScrollEndEvent = subscribeToEvent(scrollEvents.end);\nexport var subscribeToDXScrollStopEvent = subscribeToEvent(scrollEvents.stop);\nexport var subscribeToDXScrollCancelEvent = subscribeToEvent(scrollEvents.cancel);\nexport var subscribeToDXPointerDownEvent = subscribeToEvent(pointerEvents.down);\nexport var subscribeToDXPointerUpEvent = subscribeToEvent(pointerEvents.up);\nexport var subscribeToMouseEnterEvent = subscribeToEvent(\"mouseenter\");\nexport var subscribeToMouseLeaveEvent = subscribeToEvent(\"mouseleave\");\nexport var subscribeToKeyDownEvent = subscribeToEvent(\"keydown\");","map":{"version":3,"sources":["/Users/rahulsharma/node_modules/devextreme/esm/renovation/utils/subscribe_to_event.js"],"names":["eventsEngine","clickEvent","scrollEvents","pointerEvents","subscribeToEvent","eventName","element","handler","eventData","on","off","subscribeToClickEvent","name","subscribeToScrollEvent","scroll","subscribeToScrollInitEvent","init","subscribeToDXScrollStartEvent","start","subscribeToDXScrollMoveEvent","move","subscribeToDXScrollEndEvent","end","subscribeToDXScrollStopEvent","stop","subscribeToDXScrollCancelEvent","cancel","subscribeToDXPointerDownEvent","down","subscribeToDXPointerUpEvent","up","subscribeToMouseEnterEvent","subscribeToMouseLeaveEvent","subscribeToKeyDownEvent"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,YAAP,MAAyB,iCAAzB;AACA,OAAO,KAAKC,UAAZ,MAA4B,oBAA5B;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAO,SAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AACxC,SAAO,CAACC,OAAD,EAAUC,OAAV,EAAmBC,SAAnB,KAAiC;AACpC,QAAID,OAAO,IAAID,OAAf,EAAwB;AACpBN,MAAAA,YAAY,CAACS,EAAb,CAAgBH,OAAhB,EAAyBD,SAAzB,EAAoCG,SAApC,EAA+CD,OAA/C;AACA,aAAO,MAAM;AACTP,QAAAA,YAAY,CAACU,GAAb,CAAiBJ,OAAjB,EAA0BD,SAA1B,EAAqCE,OAArC;AACH,OAFD;AAGH;;AACD;AACH,GARD;AASH;AACD,OAAO,IAAII,qBAAqB,GAAGP,gBAAgB,CAACH,UAAU,CAACW,IAAZ,CAA5C;AACP,OAAO,IAAIC,sBAAsB,GAAGT,gBAAgB,CAACF,YAAY,CAACY,MAAd,CAA7C;AACP,OAAO,IAAIC,0BAA0B,GAAGX,gBAAgB,CAACF,YAAY,CAACc,IAAd,CAAjD;AACP,OAAO,IAAIC,6BAA6B,GAAGb,gBAAgB,CAACF,YAAY,CAACgB,KAAd,CAApD;AACP,OAAO,IAAIC,4BAA4B,GAAGf,gBAAgB,CAACF,YAAY,CAACkB,IAAd,CAAnD;AACP,OAAO,IAAIC,2BAA2B,GAAGjB,gBAAgB,CAACF,YAAY,CAACoB,GAAd,CAAlD;AACP,OAAO,IAAIC,4BAA4B,GAAGnB,gBAAgB,CAACF,YAAY,CAACsB,IAAd,CAAnD;AACP,OAAO,IAAIC,8BAA8B,GAAGrB,gBAAgB,CAACF,YAAY,CAACwB,MAAd,CAArD;AACP,OAAO,IAAIC,6BAA6B,GAAGvB,gBAAgB,CAACD,aAAa,CAACyB,IAAf,CAApD;AACP,OAAO,IAAIC,2BAA2B,GAAGzB,gBAAgB,CAACD,aAAa,CAAC2B,EAAf,CAAlD;AACP,OAAO,IAAIC,0BAA0B,GAAG3B,gBAAgB,CAAC,YAAD,CAAjD;AACP,OAAO,IAAI4B,0BAA0B,GAAG5B,gBAAgB,CAAC,YAAD,CAAjD;AACP,OAAO,IAAI6B,uBAAuB,GAAG7B,gBAAgB,CAAC,SAAD,CAA9C","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/utils/subscribe_to_event.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport * as clickEvent from \"../../events/click\";\r\nimport scrollEvents from \"../../events/gesture/emitter.gesture.scroll\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nexport function subscribeToEvent(eventName) {\r\n    return (element, handler, eventData) => {\r\n        if (handler && element) {\r\n            eventsEngine.on(element, eventName, eventData, handler);\r\n            return () => {\r\n                eventsEngine.off(element, eventName, handler)\r\n            }\r\n        }\r\n        return\r\n    }\r\n}\r\nexport var subscribeToClickEvent = subscribeToEvent(clickEvent.name);\r\nexport var subscribeToScrollEvent = subscribeToEvent(scrollEvents.scroll);\r\nexport var subscribeToScrollInitEvent = subscribeToEvent(scrollEvents.init);\r\nexport var subscribeToDXScrollStartEvent = subscribeToEvent(scrollEvents.start);\r\nexport var subscribeToDXScrollMoveEvent = subscribeToEvent(scrollEvents.move);\r\nexport var subscribeToDXScrollEndEvent = subscribeToEvent(scrollEvents.end);\r\nexport var subscribeToDXScrollStopEvent = subscribeToEvent(scrollEvents.stop);\r\nexport var subscribeToDXScrollCancelEvent = subscribeToEvent(scrollEvents.cancel);\r\nexport var subscribeToDXPointerDownEvent = subscribeToEvent(pointerEvents.down);\r\nexport var subscribeToDXPointerUpEvent = subscribeToEvent(pointerEvents.up);\r\nexport var subscribeToMouseEnterEvent = subscribeToEvent(\"mouseenter\");\r\nexport var subscribeToMouseLeaveEvent = subscribeToEvent(\"mouseleave\");\r\nexport var subscribeToKeyDownEvent = subscribeToEvent(\"keydown\");\r\n"]},"metadata":{},"sourceType":"module"}