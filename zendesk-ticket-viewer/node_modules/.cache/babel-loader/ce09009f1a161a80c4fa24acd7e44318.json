{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/series/points/range_symbol_point.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { each } from \"../../../core/utils/iterator\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { noop } from \"../../../core/utils/common\";\nimport { Label } from \"./label\";\nimport symbolPoint from \"./symbol_point\";\nvar _extend = extend;\nimport { isDefined as _isDefined } from \"../../../core/utils/type\";\nvar _math = Math;\nvar _abs = _math.abs;\nvar _min = _math.min;\nvar _max = _math.max;\nvar _round = _math.round;\nvar DEFAULT_IMAGE_WIDTH = 20;\nvar DEFAULT_IMAGE_HEIGHT = 20;\nexport default _extend({}, symbolPoint, {\n  deleteLabel: function () {\n    this._topLabel.dispose();\n\n    this._topLabel = null;\n\n    this._bottomLabel.dispose();\n\n    this._bottomLabel = null;\n  },\n  hideMarker: function (type) {\n    var graphic = this.graphic;\n    var marker = graphic && graphic[type + \"Marker\"];\n    var label = this[\"_\" + type + \"Label\"];\n\n    if (marker && \"hidden\" !== marker.attr(\"visibility\")) {\n      marker.attr({\n        visibility: \"hidden\"\n      });\n    }\n\n    label.draw(false);\n  },\n  setInvisibility: function () {\n    this.hideMarker(\"top\");\n    this.hideMarker(\"bottom\");\n  },\n  clearVisibility: function () {\n    var graphic = this.graphic;\n    var topMarker = graphic && graphic.topMarker;\n    var bottomMarker = graphic && graphic.bottomMarker;\n\n    if (topMarker && topMarker.attr(\"visibility\")) {\n      topMarker.attr({\n        visibility: null\n      });\n    }\n\n    if (bottomMarker && bottomMarker.attr(\"visibility\")) {\n      bottomMarker.attr({\n        visibility: null\n      });\n    }\n  },\n  clearMarker: function () {\n    var graphic = this.graphic;\n    var topMarker = graphic && graphic.topMarker;\n    var bottomMarker = graphic && graphic.bottomMarker;\n    var emptySettings = this._emptySettings;\n    topMarker && topMarker.attr(emptySettings);\n    bottomMarker && bottomMarker.attr(emptySettings);\n  },\n  _getLabelPosition: function (markerType) {\n    var position;\n    var labelsInside = \"inside\" === this._options.label.position;\n\n    if (!this._options.rotated) {\n      position = \"top\" === markerType ^ labelsInside ? \"top\" : \"bottom\";\n    } else {\n      position = \"top\" === markerType ^ labelsInside ? \"right\" : \"left\";\n    }\n\n    return position;\n  },\n  _getLabelMinFormatObject: function () {\n    return {\n      index: 0,\n      argument: this.initialArgument,\n      value: this.initialMinValue,\n      seriesName: this.series.name,\n      originalValue: this.originalMinValue,\n      originalArgument: this.originalArgument,\n      point: this\n    };\n  },\n  _updateLabelData: function () {\n    var maxFormatObject = this._getLabelFormatObject();\n\n    maxFormatObject.index = 1;\n\n    this._topLabel.setData(maxFormatObject);\n\n    this._bottomLabel.setData(this._getLabelMinFormatObject());\n  },\n  _updateLabelOptions: function () {\n    var options = this._options.label;\n    (!this._topLabel || !this._bottomLabel) && this._createLabel();\n\n    this._topLabel.setOptions(options);\n\n    this._bottomLabel.setOptions(options);\n  },\n  _createLabel: function () {\n    var options = {\n      renderer: this.series._renderer,\n      labelsGroup: this.series._labelsGroup,\n      point: this\n    };\n    this._topLabel = new Label(options);\n    this._bottomLabel = new Label(options);\n  },\n  _getGraphicBBox: function (location) {\n    var options = this._options;\n\n    var images = this._getImage(options.image);\n\n    var image = \"top\" === location ? this._checkImage(images.top) : this._checkImage(images.bottom);\n    var bBox;\n\n    var coord = this._getPositionFromLocation(location);\n\n    if (options.visible) {\n      bBox = image ? this._getImageBBox(coord.x, coord.y) : this._getSymbolBBox(coord.x, coord.y, options.styles.normal.r);\n    } else {\n      bBox = {\n        x: coord.x,\n        y: coord.y,\n        width: 0,\n        height: 0\n      };\n    }\n\n    return bBox;\n  },\n  _getPositionFromLocation: function (location) {\n    var x;\n    var y;\n    var isTop = \"top\" === location;\n\n    if (!this._options.rotated) {\n      x = this.x;\n      y = isTop ? _min(this.y, this.minY) : _max(this.y, this.minY);\n    } else {\n      x = isTop ? _max(this.x, this.minX) : _min(this.x, this.minX);\n      y = this.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  _checkOverlay: function (bottomCoord, topCoord, topValue) {\n    return bottomCoord < topCoord + topValue;\n  },\n  _getOverlayCorrections: function (topCoords, bottomCoords) {\n    var rotated = this._options.rotated;\n    var coordSelector = !rotated ? \"y\" : \"x\";\n    var valueSelector = !rotated ? \"height\" : \"width\";\n    var visibleArea = this.series.getValueAxis().getVisibleArea();\n    var minBound = visibleArea[0];\n    var maxBound = visibleArea[1];\n\n    var delta = _round((topCoords[coordSelector] + topCoords[valueSelector] - bottomCoords[coordSelector]) / 2);\n\n    var coord1 = topCoords[coordSelector] - delta;\n    var coord2 = bottomCoords[coordSelector] + delta;\n\n    if (coord1 < minBound) {\n      delta = minBound - coord1;\n      coord1 += delta;\n      coord2 += delta;\n    } else if (coord2 + bottomCoords[valueSelector] > maxBound) {\n      delta = maxBound - coord2 - bottomCoords[valueSelector];\n      coord1 += delta;\n      coord2 += delta;\n    }\n\n    return {\n      coord1: coord1,\n      coord2: coord2\n    };\n  },\n  _checkLabelsOverlay: function (topLocation) {\n    var topCoords = this._topLabel.getBoundingRect();\n\n    var bottomCoords = this._bottomLabel.getBoundingRect();\n\n    var corrections = {};\n\n    if (!this._options.rotated) {\n      if (\"top\" === topLocation) {\n        if (this._checkOverlay(bottomCoords.y, topCoords.y, topCoords.height)) {\n          corrections = this._getOverlayCorrections(topCoords, bottomCoords);\n\n          this._topLabel.shift(topCoords.x, corrections.coord1);\n\n          this._bottomLabel.shift(bottomCoords.x, corrections.coord2);\n        }\n      } else if (this._checkOverlay(topCoords.y, bottomCoords.y, bottomCoords.height)) {\n        corrections = this._getOverlayCorrections(bottomCoords, topCoords);\n\n        this._topLabel.shift(topCoords.x, corrections.coord2);\n\n        this._bottomLabel.shift(bottomCoords.x, corrections.coord1);\n      }\n    } else if (\"top\" === topLocation) {\n      if (this._checkOverlay(topCoords.x, bottomCoords.x, bottomCoords.width)) {\n        corrections = this._getOverlayCorrections(bottomCoords, topCoords);\n\n        this._topLabel.shift(corrections.coord2, topCoords.y);\n\n        this._bottomLabel.shift(corrections.coord1, bottomCoords.y);\n      }\n    } else if (this._checkOverlay(bottomCoords.x, topCoords.x, topCoords.width)) {\n      corrections = this._getOverlayCorrections(topCoords, bottomCoords);\n\n      this._topLabel.shift(corrections.coord1, topCoords.y);\n\n      this._bottomLabel.shift(corrections.coord2, bottomCoords.y);\n    }\n  },\n  _drawLabel: function () {\n    var labels = [];\n    var notInverted = this._options.rotated ? this.x >= this.minX : this.y < this.minY;\n\n    var customVisibility = this._getCustomLabelVisibility();\n\n    var topLabel = this._topLabel;\n    var bottomLabel = this._bottomLabel;\n    topLabel.pointPosition = notInverted ? \"top\" : \"bottom\";\n    bottomLabel.pointPosition = notInverted ? \"bottom\" : \"top\";\n\n    if ((this.series.getLabelVisibility() || customVisibility) && this.hasValue() && false !== customVisibility) {\n      false !== this.visibleTopMarker && labels.push(topLabel);\n      false !== this.visibleBottomMarker && labels.push(bottomLabel);\n      each(labels, function (_, label) {\n        label.draw(true);\n      });\n\n      this._checkLabelsOverlay(this._topLabel.pointPosition);\n    } else {\n      topLabel.draw(false);\n      bottomLabel.draw(false);\n    }\n  },\n  _getImage: function (imageOption) {\n    var image = {};\n\n    if (_isDefined(imageOption)) {\n      if (\"string\" === typeof imageOption) {\n        image.top = image.bottom = imageOption;\n      } else {\n        image.top = {\n          url: \"string\" === typeof imageOption.url ? imageOption.url : imageOption.url && imageOption.url.rangeMaxPoint,\n          width: \"number\" === typeof imageOption.width ? imageOption.width : imageOption.width && imageOption.width.rangeMaxPoint,\n          height: \"number\" === typeof imageOption.height ? imageOption.height : imageOption.height && imageOption.height.rangeMaxPoint\n        };\n        image.bottom = {\n          url: \"string\" === typeof imageOption.url ? imageOption.url : imageOption.url && imageOption.url.rangeMinPoint,\n          width: \"number\" === typeof imageOption.width ? imageOption.width : imageOption.width && imageOption.width.rangeMinPoint,\n          height: \"number\" === typeof imageOption.height ? imageOption.height : imageOption.height && imageOption.height.rangeMinPoint\n        };\n      }\n    }\n\n    return image;\n  },\n  _checkSymbol: function (oldOptions, newOptions) {\n    var oldSymbol = oldOptions.symbol;\n    var newSymbol = newOptions.symbol;\n    var symbolChanged = \"circle\" === oldSymbol && \"circle\" !== newSymbol || \"circle\" !== oldSymbol && \"circle\" === newSymbol;\n\n    var oldImages = this._getImage(oldOptions.image);\n\n    var newImages = this._getImage(newOptions.image);\n\n    var topImageChanged = this._checkImage(oldImages.top) !== this._checkImage(newImages.top);\n\n    var bottomImageChanged = this._checkImage(oldImages.bottom) !== this._checkImage(newImages.bottom);\n\n    return symbolChanged || topImageChanged || bottomImageChanged;\n  },\n  _getSettingsForTwoMarkers: function (style) {\n    var options = this._options;\n    var settings = {};\n    var x = options.rotated ? _min(this.x, this.minX) : this.x;\n    var y = options.rotated ? this.y : _min(this.y, this.minY);\n    var radius = style.r;\n\n    var points = this._populatePointShape(options.symbol, radius);\n\n    settings.top = _extend({\n      translateX: x + this.width,\n      translateY: y,\n      r: radius\n    }, style);\n    settings.bottom = _extend({\n      translateX: x,\n      translateY: y + this.height,\n      r: radius\n    }, style);\n\n    if (points) {\n      settings.top.points = settings.bottom.points = points;\n    }\n\n    return settings;\n  },\n  _hasGraphic: function () {\n    return this.graphic && this.graphic.topMarker && this.graphic.bottomMarker;\n  },\n  _drawOneMarker: function (renderer, markerType, imageSettings, settings) {\n    var graphic = this.graphic;\n\n    if (graphic[markerType]) {\n      this._updateOneMarker(markerType, settings);\n    } else {\n      graphic[markerType] = this._createMarker(renderer, graphic, imageSettings, settings);\n    }\n  },\n  _drawMarker: function (renderer, group, animationEnabled, firstDrawing, style) {\n    var settings = this._getSettingsForTwoMarkers(style || this._getStyle());\n\n    var image = this._getImage(this._options.image);\n\n    if (this._checkImage(image.top)) {\n      settings.top = this._getImageSettings(settings.top, image.top);\n    }\n\n    if (this._checkImage(image.bottom)) {\n      settings.bottom = this._getImageSettings(settings.bottom, image.bottom);\n    }\n\n    this.graphic = this.graphic || renderer.g().append(group);\n    this.visibleTopMarker && this._drawOneMarker(renderer, \"topMarker\", image.top, settings.top);\n    this.visibleBottomMarker && this._drawOneMarker(renderer, \"bottomMarker\", image.bottom, settings.bottom);\n  },\n  _getSettingsForTracker: function (radius) {\n    var rotated = this._options.rotated;\n    return {\n      translateX: rotated ? _min(this.x, this.minX) - radius : this.x - radius,\n      translateY: rotated ? this.y - radius : _min(this.y, this.minY) - radius,\n      width: this.width + 2 * radius,\n      height: this.height + 2 * radius\n    };\n  },\n  isInVisibleArea: function () {\n    var rotated = this._options.rotated;\n    var argument = !rotated ? this.x : this.y;\n    var maxValue = !rotated ? _max(this.minY, this.y) : _max(this.minX, this.x);\n    var minValue = !rotated ? _min(this.minY, this.y) : _min(this.minX, this.x);\n    var tmp;\n    var visibleTopMarker;\n    var visibleBottomMarker;\n    var visibleRangeArea = true;\n    var visibleArgArea = this.series.getArgumentAxis().getVisibleArea();\n    var visibleValArea = this.series.getValueAxis().getVisibleArea();\n    var notVisibleByArg = visibleArgArea[1] < argument || visibleArgArea[0] > argument;\n    var notVisibleByVal = visibleValArea[0] > minValue && visibleValArea[0] > maxValue || visibleValArea[1] < minValue && visibleValArea[1] < maxValue;\n\n    if (notVisibleByArg || notVisibleByVal) {\n      visibleTopMarker = visibleBottomMarker = visibleRangeArea = false;\n    } else {\n      visibleTopMarker = visibleValArea[0] <= minValue && visibleValArea[1] > minValue;\n      visibleBottomMarker = visibleValArea[0] < maxValue && visibleValArea[1] >= maxValue;\n\n      if (rotated) {\n        tmp = visibleTopMarker;\n        visibleTopMarker = visibleBottomMarker;\n        visibleBottomMarker = tmp;\n      }\n    }\n\n    this.visibleTopMarker = visibleTopMarker;\n    this.visibleBottomMarker = visibleBottomMarker;\n    return visibleRangeArea;\n  },\n  getTooltipParams: function () {\n    var x;\n    var y;\n    var rotated = this._options.rotated;\n    var minValue = !rotated ? _min(this.y, this.minY) : _min(this.x, this.minX);\n    var side = !rotated ? \"height\" : \"width\";\n\n    var visibleArea = this._getVisibleArea();\n\n    var minVisible = rotated ? visibleArea.minX : visibleArea.minY;\n    var maxVisible = rotated ? visibleArea.maxX : visibleArea.maxY;\n\n    var min = _max(minVisible, minValue);\n\n    var max = _min(maxVisible, minValue + this[side]);\n\n    if (!rotated) {\n      x = this.x;\n      y = min + (max - min) / 2;\n    } else {\n      y = this.y;\n      x = min + (max - min) / 2;\n    }\n\n    return {\n      x: x,\n      y: y,\n      offset: 0\n    };\n  },\n  _translate: function () {\n    var rotated = this._options.rotated;\n\n    symbolPoint._translate.call(this);\n\n    this.height = rotated ? 0 : _abs(this.minY - this.y);\n    this.width = rotated ? _abs(this.x - this.minX) : 0;\n  },\n  hasCoords: function () {\n    return symbolPoint.hasCoords.call(this) && !(null === this.minX || null === this.minY);\n  },\n  _updateData: function (data) {\n    symbolPoint._updateData.call(this, data);\n\n    this.minValue = this.initialMinValue = this.originalMinValue = data.minValue;\n  },\n  _getImageSettings: function (settings, image) {\n    return {\n      href: image.url || image.toString(),\n      width: image.width || DEFAULT_IMAGE_WIDTH,\n      height: image.height || DEFAULT_IMAGE_HEIGHT,\n      translateX: settings.translateX,\n      translateY: settings.translateY\n    };\n  },\n  getCrosshairData: function (x, y) {\n    var rotated = this._options.rotated;\n    var minX = this.minX;\n    var minY = this.minY;\n    var vx = this.vx;\n    var vy = this.vy;\n    var value = this.value;\n    var minValue = this.minValue;\n    var argument = this.argument;\n    var coords = {\n      axis: this.series.axis,\n      x: vx,\n      y: vy,\n      yValue: value,\n      xValue: argument\n    };\n\n    if (rotated) {\n      coords.yValue = argument;\n\n      if (_abs(vx - x) < _abs(minX - x)) {\n        coords.xValue = value;\n      } else {\n        coords.x = minX;\n        coords.xValue = minValue;\n      }\n    } else if (_abs(vy - y) >= _abs(minY - y)) {\n      coords.y = minY;\n      coords.yValue = minValue;\n    }\n\n    return coords;\n  },\n  _updateOneMarker: function (markerType, settings) {\n    this.graphic && this.graphic[markerType] && this.graphic[markerType].attr(settings);\n  },\n  _updateMarker: function (animationEnabled, style) {\n    this._drawMarker(void 0, void 0, false, false, style);\n  },\n  _getFormatObject: function (tooltip) {\n    var initialMinValue = this.initialMinValue;\n    var initialValue = this.initialValue;\n    var initialArgument = this.initialArgument;\n    var minValue = tooltip.formatValue(initialMinValue);\n    var value = tooltip.formatValue(initialValue);\n    return {\n      argument: initialArgument,\n      argumentText: tooltip.formatValue(initialArgument, \"argument\"),\n      valueText: minValue + \" - \" + value,\n      rangeValue1Text: minValue,\n      rangeValue2Text: value,\n      rangeValue1: initialMinValue,\n      rangeValue2: initialValue,\n      seriesName: this.series.name,\n      point: this,\n      originalMinValue: this.originalMinValue,\n      originalValue: this.originalValue,\n      originalArgument: this.originalArgument\n    };\n  },\n  getLabel: function () {\n    return [this._topLabel, this._bottomLabel];\n  },\n  getLabels: function () {\n    return [this._topLabel, this._bottomLabel];\n  },\n  getBoundingRect: noop,\n  coordsIn: function (x, y) {\n    var trackerRadius = this._storeTrackerR();\n\n    var xCond = x >= this.x - trackerRadius && x <= this.x + trackerRadius;\n    var yCond = y >= this.y - trackerRadius && y <= this.y + trackerRadius;\n\n    if (this._options.rotated) {\n      return yCond && (xCond || x >= this.minX - trackerRadius && x <= this.minX + trackerRadius);\n    } else {\n      return xCond && (yCond || y >= this.minY - trackerRadius && y <= this.minY + trackerRadius);\n    }\n  },\n  getMaxValue: function () {\n    if (\"discrete\" !== this.series.valueAxisType) {\n      return this.minValue > this.value ? this.minValue : this.value;\n    }\n\n    return this.value;\n  },\n  getMinValue: function () {\n    if (\"discrete\" !== this.series.valueAxisType) {\n      return this.minValue < this.value ? this.minValue : this.value;\n    }\n\n    return this.minValue;\n  }\n});","map":{"version":3,"sources":["/Users/rahulsharma/node_modules/devextreme/esm/viz/series/points/range_symbol_point.js"],"names":["each","extend","noop","Label","symbolPoint","_extend","isDefined","_isDefined","_math","Math","_abs","abs","_min","min","_max","max","_round","round","DEFAULT_IMAGE_WIDTH","DEFAULT_IMAGE_HEIGHT","deleteLabel","_topLabel","dispose","_bottomLabel","hideMarker","type","graphic","marker","label","attr","visibility","draw","setInvisibility","clearVisibility","topMarker","bottomMarker","clearMarker","emptySettings","_emptySettings","_getLabelPosition","markerType","position","labelsInside","_options","rotated","_getLabelMinFormatObject","index","argument","initialArgument","value","initialMinValue","seriesName","series","name","originalValue","originalMinValue","originalArgument","point","_updateLabelData","maxFormatObject","_getLabelFormatObject","setData","_updateLabelOptions","options","_createLabel","setOptions","renderer","_renderer","labelsGroup","_labelsGroup","_getGraphicBBox","location","images","_getImage","image","_checkImage","top","bottom","bBox","coord","_getPositionFromLocation","visible","_getImageBBox","x","y","_getSymbolBBox","styles","normal","r","width","height","isTop","minY","minX","_checkOverlay","bottomCoord","topCoord","topValue","_getOverlayCorrections","topCoords","bottomCoords","coordSelector","valueSelector","visibleArea","getValueAxis","getVisibleArea","minBound","maxBound","delta","coord1","coord2","_checkLabelsOverlay","topLocation","getBoundingRect","corrections","shift","_drawLabel","labels","notInverted","customVisibility","_getCustomLabelVisibility","topLabel","bottomLabel","pointPosition","getLabelVisibility","hasValue","visibleTopMarker","push","visibleBottomMarker","_","imageOption","url","rangeMaxPoint","rangeMinPoint","_checkSymbol","oldOptions","newOptions","oldSymbol","symbol","newSymbol","symbolChanged","oldImages","newImages","topImageChanged","bottomImageChanged","_getSettingsForTwoMarkers","style","settings","radius","points","_populatePointShape","translateX","translateY","_hasGraphic","_drawOneMarker","imageSettings","_updateOneMarker","_createMarker","_drawMarker","group","animationEnabled","firstDrawing","_getStyle","_getImageSettings","g","append","_getSettingsForTracker","isInVisibleArea","maxValue","minValue","tmp","visibleRangeArea","visibleArgArea","getArgumentAxis","visibleValArea","notVisibleByArg","notVisibleByVal","getTooltipParams","side","_getVisibleArea","minVisible","maxVisible","maxX","maxY","offset","_translate","call","hasCoords","_updateData","data","href","toString","getCrosshairData","vx","vy","coords","axis","yValue","xValue","_updateMarker","_getFormatObject","tooltip","initialValue","formatValue","argumentText","valueText","rangeValue1Text","rangeValue2Text","rangeValue1","rangeValue2","getLabel","getLabels","coordsIn","trackerRadius","_storeTrackerR","xCond","yCond","getMaxValue","valueAxisType","getMinValue"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/series/points/range_symbol_point.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    noop\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    Label\r\n} from \"./label\";\r\nimport symbolPoint from \"./symbol_point\";\r\nvar _extend = extend;\r\nimport {\r\n    isDefined as _isDefined\r\n} from \"../../../core/utils/type\";\r\nvar _math = Math;\r\nvar _abs = _math.abs;\r\nvar _min = _math.min;\r\nvar _max = _math.max;\r\nvar _round = _math.round;\r\nvar DEFAULT_IMAGE_WIDTH = 20;\r\nvar DEFAULT_IMAGE_HEIGHT = 20;\r\nexport default _extend({}, symbolPoint, {\r\n    deleteLabel: function() {\r\n        this._topLabel.dispose();\r\n        this._topLabel = null;\r\n        this._bottomLabel.dispose();\r\n        this._bottomLabel = null\r\n    },\r\n    hideMarker: function(type) {\r\n        var graphic = this.graphic;\r\n        var marker = graphic && graphic[type + \"Marker\"];\r\n        var label = this[\"_\" + type + \"Label\"];\r\n        if (marker && \"hidden\" !== marker.attr(\"visibility\")) {\r\n            marker.attr({\r\n                visibility: \"hidden\"\r\n            })\r\n        }\r\n        label.draw(false)\r\n    },\r\n    setInvisibility: function() {\r\n        this.hideMarker(\"top\");\r\n        this.hideMarker(\"bottom\")\r\n    },\r\n    clearVisibility: function() {\r\n        var graphic = this.graphic;\r\n        var topMarker = graphic && graphic.topMarker;\r\n        var bottomMarker = graphic && graphic.bottomMarker;\r\n        if (topMarker && topMarker.attr(\"visibility\")) {\r\n            topMarker.attr({\r\n                visibility: null\r\n            })\r\n        }\r\n        if (bottomMarker && bottomMarker.attr(\"visibility\")) {\r\n            bottomMarker.attr({\r\n                visibility: null\r\n            })\r\n        }\r\n    },\r\n    clearMarker: function() {\r\n        var graphic = this.graphic;\r\n        var topMarker = graphic && graphic.topMarker;\r\n        var bottomMarker = graphic && graphic.bottomMarker;\r\n        var emptySettings = this._emptySettings;\r\n        topMarker && topMarker.attr(emptySettings);\r\n        bottomMarker && bottomMarker.attr(emptySettings)\r\n    },\r\n    _getLabelPosition: function(markerType) {\r\n        var position;\r\n        var labelsInside = \"inside\" === this._options.label.position;\r\n        if (!this._options.rotated) {\r\n            position = \"top\" === markerType ^ labelsInside ? \"top\" : \"bottom\"\r\n        } else {\r\n            position = \"top\" === markerType ^ labelsInside ? \"right\" : \"left\"\r\n        }\r\n        return position\r\n    },\r\n    _getLabelMinFormatObject: function() {\r\n        return {\r\n            index: 0,\r\n            argument: this.initialArgument,\r\n            value: this.initialMinValue,\r\n            seriesName: this.series.name,\r\n            originalValue: this.originalMinValue,\r\n            originalArgument: this.originalArgument,\r\n            point: this\r\n        }\r\n    },\r\n    _updateLabelData: function() {\r\n        var maxFormatObject = this._getLabelFormatObject();\r\n        maxFormatObject.index = 1;\r\n        this._topLabel.setData(maxFormatObject);\r\n        this._bottomLabel.setData(this._getLabelMinFormatObject())\r\n    },\r\n    _updateLabelOptions: function() {\r\n        var options = this._options.label;\r\n        (!this._topLabel || !this._bottomLabel) && this._createLabel();\r\n        this._topLabel.setOptions(options);\r\n        this._bottomLabel.setOptions(options)\r\n    },\r\n    _createLabel: function() {\r\n        var options = {\r\n            renderer: this.series._renderer,\r\n            labelsGroup: this.series._labelsGroup,\r\n            point: this\r\n        };\r\n        this._topLabel = new Label(options);\r\n        this._bottomLabel = new Label(options)\r\n    },\r\n    _getGraphicBBox: function(location) {\r\n        var options = this._options;\r\n        var images = this._getImage(options.image);\r\n        var image = \"top\" === location ? this._checkImage(images.top) : this._checkImage(images.bottom);\r\n        var bBox;\r\n        var coord = this._getPositionFromLocation(location);\r\n        if (options.visible) {\r\n            bBox = image ? this._getImageBBox(coord.x, coord.y) : this._getSymbolBBox(coord.x, coord.y, options.styles.normal.r)\r\n        } else {\r\n            bBox = {\r\n                x: coord.x,\r\n                y: coord.y,\r\n                width: 0,\r\n                height: 0\r\n            }\r\n        }\r\n        return bBox\r\n    },\r\n    _getPositionFromLocation: function(location) {\r\n        var x;\r\n        var y;\r\n        var isTop = \"top\" === location;\r\n        if (!this._options.rotated) {\r\n            x = this.x;\r\n            y = isTop ? _min(this.y, this.minY) : _max(this.y, this.minY)\r\n        } else {\r\n            x = isTop ? _max(this.x, this.minX) : _min(this.x, this.minX);\r\n            y = this.y\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _checkOverlay: function(bottomCoord, topCoord, topValue) {\r\n        return bottomCoord < topCoord + topValue\r\n    },\r\n    _getOverlayCorrections: function(topCoords, bottomCoords) {\r\n        var rotated = this._options.rotated;\r\n        var coordSelector = !rotated ? \"y\" : \"x\";\r\n        var valueSelector = !rotated ? \"height\" : \"width\";\r\n        var visibleArea = this.series.getValueAxis().getVisibleArea();\r\n        var minBound = visibleArea[0];\r\n        var maxBound = visibleArea[1];\r\n        var delta = _round((topCoords[coordSelector] + topCoords[valueSelector] - bottomCoords[coordSelector]) / 2);\r\n        var coord1 = topCoords[coordSelector] - delta;\r\n        var coord2 = bottomCoords[coordSelector] + delta;\r\n        if (coord1 < minBound) {\r\n            delta = minBound - coord1;\r\n            coord1 += delta;\r\n            coord2 += delta\r\n        } else if (coord2 + bottomCoords[valueSelector] > maxBound) {\r\n            delta = maxBound - coord2 - bottomCoords[valueSelector];\r\n            coord1 += delta;\r\n            coord2 += delta\r\n        }\r\n        return {\r\n            coord1: coord1,\r\n            coord2: coord2\r\n        }\r\n    },\r\n    _checkLabelsOverlay: function(topLocation) {\r\n        var topCoords = this._topLabel.getBoundingRect();\r\n        var bottomCoords = this._bottomLabel.getBoundingRect();\r\n        var corrections = {};\r\n        if (!this._options.rotated) {\r\n            if (\"top\" === topLocation) {\r\n                if (this._checkOverlay(bottomCoords.y, topCoords.y, topCoords.height)) {\r\n                    corrections = this._getOverlayCorrections(topCoords, bottomCoords);\r\n                    this._topLabel.shift(topCoords.x, corrections.coord1);\r\n                    this._bottomLabel.shift(bottomCoords.x, corrections.coord2)\r\n                }\r\n            } else if (this._checkOverlay(topCoords.y, bottomCoords.y, bottomCoords.height)) {\r\n                corrections = this._getOverlayCorrections(bottomCoords, topCoords);\r\n                this._topLabel.shift(topCoords.x, corrections.coord2);\r\n                this._bottomLabel.shift(bottomCoords.x, corrections.coord1)\r\n            }\r\n        } else if (\"top\" === topLocation) {\r\n            if (this._checkOverlay(topCoords.x, bottomCoords.x, bottomCoords.width)) {\r\n                corrections = this._getOverlayCorrections(bottomCoords, topCoords);\r\n                this._topLabel.shift(corrections.coord2, topCoords.y);\r\n                this._bottomLabel.shift(corrections.coord1, bottomCoords.y)\r\n            }\r\n        } else if (this._checkOverlay(bottomCoords.x, topCoords.x, topCoords.width)) {\r\n            corrections = this._getOverlayCorrections(topCoords, bottomCoords);\r\n            this._topLabel.shift(corrections.coord1, topCoords.y);\r\n            this._bottomLabel.shift(corrections.coord2, bottomCoords.y)\r\n        }\r\n    },\r\n    _drawLabel: function() {\r\n        var labels = [];\r\n        var notInverted = this._options.rotated ? this.x >= this.minX : this.y < this.minY;\r\n        var customVisibility = this._getCustomLabelVisibility();\r\n        var topLabel = this._topLabel;\r\n        var bottomLabel = this._bottomLabel;\r\n        topLabel.pointPosition = notInverted ? \"top\" : \"bottom\";\r\n        bottomLabel.pointPosition = notInverted ? \"bottom\" : \"top\";\r\n        if ((this.series.getLabelVisibility() || customVisibility) && this.hasValue() && false !== customVisibility) {\r\n            false !== this.visibleTopMarker && labels.push(topLabel);\r\n            false !== this.visibleBottomMarker && labels.push(bottomLabel);\r\n            each(labels, (function(_, label) {\r\n                label.draw(true)\r\n            }));\r\n            this._checkLabelsOverlay(this._topLabel.pointPosition)\r\n        } else {\r\n            topLabel.draw(false);\r\n            bottomLabel.draw(false)\r\n        }\r\n    },\r\n    _getImage: function(imageOption) {\r\n        var image = {};\r\n        if (_isDefined(imageOption)) {\r\n            if (\"string\" === typeof imageOption) {\r\n                image.top = image.bottom = imageOption\r\n            } else {\r\n                image.top = {\r\n                    url: \"string\" === typeof imageOption.url ? imageOption.url : imageOption.url && imageOption.url.rangeMaxPoint,\r\n                    width: \"number\" === typeof imageOption.width ? imageOption.width : imageOption.width && imageOption.width.rangeMaxPoint,\r\n                    height: \"number\" === typeof imageOption.height ? imageOption.height : imageOption.height && imageOption.height.rangeMaxPoint\r\n                };\r\n                image.bottom = {\r\n                    url: \"string\" === typeof imageOption.url ? imageOption.url : imageOption.url && imageOption.url.rangeMinPoint,\r\n                    width: \"number\" === typeof imageOption.width ? imageOption.width : imageOption.width && imageOption.width.rangeMinPoint,\r\n                    height: \"number\" === typeof imageOption.height ? imageOption.height : imageOption.height && imageOption.height.rangeMinPoint\r\n                }\r\n            }\r\n        }\r\n        return image\r\n    },\r\n    _checkSymbol: function(oldOptions, newOptions) {\r\n        var oldSymbol = oldOptions.symbol;\r\n        var newSymbol = newOptions.symbol;\r\n        var symbolChanged = \"circle\" === oldSymbol && \"circle\" !== newSymbol || \"circle\" !== oldSymbol && \"circle\" === newSymbol;\r\n        var oldImages = this._getImage(oldOptions.image);\r\n        var newImages = this._getImage(newOptions.image);\r\n        var topImageChanged = this._checkImage(oldImages.top) !== this._checkImage(newImages.top);\r\n        var bottomImageChanged = this._checkImage(oldImages.bottom) !== this._checkImage(newImages.bottom);\r\n        return symbolChanged || topImageChanged || bottomImageChanged\r\n    },\r\n    _getSettingsForTwoMarkers: function(style) {\r\n        var options = this._options;\r\n        var settings = {};\r\n        var x = options.rotated ? _min(this.x, this.minX) : this.x;\r\n        var y = options.rotated ? this.y : _min(this.y, this.minY);\r\n        var radius = style.r;\r\n        var points = this._populatePointShape(options.symbol, radius);\r\n        settings.top = _extend({\r\n            translateX: x + this.width,\r\n            translateY: y,\r\n            r: radius\r\n        }, style);\r\n        settings.bottom = _extend({\r\n            translateX: x,\r\n            translateY: y + this.height,\r\n            r: radius\r\n        }, style);\r\n        if (points) {\r\n            settings.top.points = settings.bottom.points = points\r\n        }\r\n        return settings\r\n    },\r\n    _hasGraphic: function() {\r\n        return this.graphic && this.graphic.topMarker && this.graphic.bottomMarker\r\n    },\r\n    _drawOneMarker: function(renderer, markerType, imageSettings, settings) {\r\n        var graphic = this.graphic;\r\n        if (graphic[markerType]) {\r\n            this._updateOneMarker(markerType, settings)\r\n        } else {\r\n            graphic[markerType] = this._createMarker(renderer, graphic, imageSettings, settings)\r\n        }\r\n    },\r\n    _drawMarker: function(renderer, group, animationEnabled, firstDrawing, style) {\r\n        var settings = this._getSettingsForTwoMarkers(style || this._getStyle());\r\n        var image = this._getImage(this._options.image);\r\n        if (this._checkImage(image.top)) {\r\n            settings.top = this._getImageSettings(settings.top, image.top)\r\n        }\r\n        if (this._checkImage(image.bottom)) {\r\n            settings.bottom = this._getImageSettings(settings.bottom, image.bottom)\r\n        }\r\n        this.graphic = this.graphic || renderer.g().append(group);\r\n        this.visibleTopMarker && this._drawOneMarker(renderer, \"topMarker\", image.top, settings.top);\r\n        this.visibleBottomMarker && this._drawOneMarker(renderer, \"bottomMarker\", image.bottom, settings.bottom)\r\n    },\r\n    _getSettingsForTracker: function(radius) {\r\n        var rotated = this._options.rotated;\r\n        return {\r\n            translateX: rotated ? _min(this.x, this.minX) - radius : this.x - radius,\r\n            translateY: rotated ? this.y - radius : _min(this.y, this.minY) - radius,\r\n            width: this.width + 2 * radius,\r\n            height: this.height + 2 * radius\r\n        }\r\n    },\r\n    isInVisibleArea: function() {\r\n        var rotated = this._options.rotated;\r\n        var argument = !rotated ? this.x : this.y;\r\n        var maxValue = !rotated ? _max(this.minY, this.y) : _max(this.minX, this.x);\r\n        var minValue = !rotated ? _min(this.minY, this.y) : _min(this.minX, this.x);\r\n        var tmp;\r\n        var visibleTopMarker;\r\n        var visibleBottomMarker;\r\n        var visibleRangeArea = true;\r\n        var visibleArgArea = this.series.getArgumentAxis().getVisibleArea();\r\n        var visibleValArea = this.series.getValueAxis().getVisibleArea();\r\n        var notVisibleByArg = visibleArgArea[1] < argument || visibleArgArea[0] > argument;\r\n        var notVisibleByVal = visibleValArea[0] > minValue && visibleValArea[0] > maxValue || visibleValArea[1] < minValue && visibleValArea[1] < maxValue;\r\n        if (notVisibleByArg || notVisibleByVal) {\r\n            visibleTopMarker = visibleBottomMarker = visibleRangeArea = false\r\n        } else {\r\n            visibleTopMarker = visibleValArea[0] <= minValue && visibleValArea[1] > minValue;\r\n            visibleBottomMarker = visibleValArea[0] < maxValue && visibleValArea[1] >= maxValue;\r\n            if (rotated) {\r\n                tmp = visibleTopMarker;\r\n                visibleTopMarker = visibleBottomMarker;\r\n                visibleBottomMarker = tmp\r\n            }\r\n        }\r\n        this.visibleTopMarker = visibleTopMarker;\r\n        this.visibleBottomMarker = visibleBottomMarker;\r\n        return visibleRangeArea\r\n    },\r\n    getTooltipParams: function() {\r\n        var x;\r\n        var y;\r\n        var rotated = this._options.rotated;\r\n        var minValue = !rotated ? _min(this.y, this.minY) : _min(this.x, this.minX);\r\n        var side = !rotated ? \"height\" : \"width\";\r\n        var visibleArea = this._getVisibleArea();\r\n        var minVisible = rotated ? visibleArea.minX : visibleArea.minY;\r\n        var maxVisible = rotated ? visibleArea.maxX : visibleArea.maxY;\r\n        var min = _max(minVisible, minValue);\r\n        var max = _min(maxVisible, minValue + this[side]);\r\n        if (!rotated) {\r\n            x = this.x;\r\n            y = min + (max - min) / 2\r\n        } else {\r\n            y = this.y;\r\n            x = min + (max - min) / 2\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            offset: 0\r\n        }\r\n    },\r\n    _translate: function() {\r\n        var rotated = this._options.rotated;\r\n        symbolPoint._translate.call(this);\r\n        this.height = rotated ? 0 : _abs(this.minY - this.y);\r\n        this.width = rotated ? _abs(this.x - this.minX) : 0\r\n    },\r\n    hasCoords: function() {\r\n        return symbolPoint.hasCoords.call(this) && !(null === this.minX || null === this.minY)\r\n    },\r\n    _updateData: function(data) {\r\n        symbolPoint._updateData.call(this, data);\r\n        this.minValue = this.initialMinValue = this.originalMinValue = data.minValue\r\n    },\r\n    _getImageSettings: function(settings, image) {\r\n        return {\r\n            href: image.url || image.toString(),\r\n            width: image.width || DEFAULT_IMAGE_WIDTH,\r\n            height: image.height || DEFAULT_IMAGE_HEIGHT,\r\n            translateX: settings.translateX,\r\n            translateY: settings.translateY\r\n        }\r\n    },\r\n    getCrosshairData: function(x, y) {\r\n        var rotated = this._options.rotated;\r\n        var minX = this.minX;\r\n        var minY = this.minY;\r\n        var vx = this.vx;\r\n        var vy = this.vy;\r\n        var value = this.value;\r\n        var minValue = this.minValue;\r\n        var argument = this.argument;\r\n        var coords = {\r\n            axis: this.series.axis,\r\n            x: vx,\r\n            y: vy,\r\n            yValue: value,\r\n            xValue: argument\r\n        };\r\n        if (rotated) {\r\n            coords.yValue = argument;\r\n            if (_abs(vx - x) < _abs(minX - x)) {\r\n                coords.xValue = value\r\n            } else {\r\n                coords.x = minX;\r\n                coords.xValue = minValue\r\n            }\r\n        } else if (_abs(vy - y) >= _abs(minY - y)) {\r\n            coords.y = minY;\r\n            coords.yValue = minValue\r\n        }\r\n        return coords\r\n    },\r\n    _updateOneMarker: function(markerType, settings) {\r\n        this.graphic && this.graphic[markerType] && this.graphic[markerType].attr(settings)\r\n    },\r\n    _updateMarker: function(animationEnabled, style) {\r\n        this._drawMarker(void 0, void 0, false, false, style)\r\n    },\r\n    _getFormatObject: function(tooltip) {\r\n        var initialMinValue = this.initialMinValue;\r\n        var initialValue = this.initialValue;\r\n        var initialArgument = this.initialArgument;\r\n        var minValue = tooltip.formatValue(initialMinValue);\r\n        var value = tooltip.formatValue(initialValue);\r\n        return {\r\n            argument: initialArgument,\r\n            argumentText: tooltip.formatValue(initialArgument, \"argument\"),\r\n            valueText: minValue + \" - \" + value,\r\n            rangeValue1Text: minValue,\r\n            rangeValue2Text: value,\r\n            rangeValue1: initialMinValue,\r\n            rangeValue2: initialValue,\r\n            seriesName: this.series.name,\r\n            point: this,\r\n            originalMinValue: this.originalMinValue,\r\n            originalValue: this.originalValue,\r\n            originalArgument: this.originalArgument\r\n        }\r\n    },\r\n    getLabel: function() {\r\n        return [this._topLabel, this._bottomLabel]\r\n    },\r\n    getLabels: function() {\r\n        return [this._topLabel, this._bottomLabel]\r\n    },\r\n    getBoundingRect: noop,\r\n    coordsIn: function(x, y) {\r\n        var trackerRadius = this._storeTrackerR();\r\n        var xCond = x >= this.x - trackerRadius && x <= this.x + trackerRadius;\r\n        var yCond = y >= this.y - trackerRadius && y <= this.y + trackerRadius;\r\n        if (this._options.rotated) {\r\n            return yCond && (xCond || x >= this.minX - trackerRadius && x <= this.minX + trackerRadius)\r\n        } else {\r\n            return xCond && (yCond || y >= this.minY - trackerRadius && y <= this.minY + trackerRadius)\r\n        }\r\n    },\r\n    getMaxValue: function() {\r\n        if (\"discrete\" !== this.series.valueAxisType) {\r\n            return this.minValue > this.value ? this.minValue : this.value\r\n        }\r\n        return this.value\r\n    },\r\n    getMinValue: function() {\r\n        if (\"discrete\" !== this.series.valueAxisType) {\r\n            return this.minValue < this.value ? this.minValue : this.value\r\n        }\r\n        return this.minValue\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}