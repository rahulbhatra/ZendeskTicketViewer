{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/common/dom_component_wrapper.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"valueChange\"],\n    _excluded2 = [\"componentProps\", \"componentType\", \"rootElementRef\", \"templateNames\"];\nimport { createVNode, normalizeProps } from \"inferno\";\nimport { InfernoEffect, InfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { renderTemplate, hasTemplate } from \"@devextreme/runtime/inferno\";\nimport { ConfigContext } from \"../../common/config_context\";\nimport { getUpdatedOptions } from \"./utils/get_updated_options\";\nexport var viewFunction = _ref => {\n  var {\n    props: {\n      componentProps: {\n        className: className\n      }\n    },\n    restAttributes: restAttributes,\n    widgetRef: widgetRef\n  } = _ref;\n  return normalizeProps(createVNode(1, \"div\", className, null, 1, _extends({}, restAttributes), null, widgetRef));\n};\nexport var DomComponentWrapperProps = {};\nimport { createRef as infernoCreateRef } from \"inferno\";\nexport class DomComponentWrapper extends InfernoComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.widgetRef = infernoCreateRef();\n    this.getInstance = this.getInstance.bind(this);\n    this.setupWidget = this.setupWidget.bind(this);\n    this.setRootElementRef = this.setRootElementRef.bind(this);\n    this.updateWidget = this.updateWidget.bind(this);\n  }\n\n  get config() {\n    if (\"ConfigContext\" in this.context) {\n      return this.context.ConfigContext;\n    }\n\n    return ConfigContext;\n  }\n\n  createEffects() {\n    return [new InfernoEffect(this.setupWidget, []), new InfernoEffect(this.setRootElementRef, []), new InfernoEffect(this.updateWidget, [this.props.componentProps, this.config, this.props.templateNames])];\n  }\n\n  updateEffects() {\n    var _this$_effects$;\n\n    null === (_this$_effects$ = this._effects[2]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.componentProps, this.config, this.props.templateNames]);\n  }\n\n  setupWidget() {\n    var componentInstance = new this.props.componentType(this.widgetRef.current, this.properties);\n    this.instance = componentInstance;\n    return () => {\n      componentInstance.dispose();\n      this.instance = null;\n    };\n  }\n\n  setRootElementRef() {\n    var {\n      rootElementRef: rootElementRef\n    } = this.props;\n\n    if (rootElementRef) {\n      rootElementRef.current = this.widgetRef.current;\n    }\n  }\n\n  updateWidget() {\n    var instance = this.getInstance();\n\n    if (!instance) {\n      return;\n    }\n\n    var updatedOptions = getUpdatedOptions(this.prevProps || {}, this.properties);\n\n    if (updatedOptions.length) {\n      instance.beginUpdate();\n      updatedOptions.forEach(_ref2 => {\n        var {\n          path: path,\n          value: value\n        } = _ref2;\n        instance.option(path, value);\n      });\n      instance.endUpdate();\n    }\n\n    this.prevProps = this.properties;\n  }\n\n  get properties() {\n    var _this$config;\n\n    var _this$props$component = this.props.componentProps,\n        {\n      valueChange: valueChange\n    } = _this$props$component,\n        restProps = _objectWithoutPropertiesLoose(_this$props$component, _excluded);\n\n    var properties = _extends({\n      rtlEnabled: !!(null !== (_this$config = this.config) && void 0 !== _this$config && _this$config.rtlEnabled)\n    }, restProps);\n\n    if (valueChange) {\n      properties.onValueChanged = _ref3 => {\n        var {\n          value: value\n        } = _ref3;\n        return valueChange(value);\n      };\n    }\n\n    var templates = this.props.templateNames;\n    templates.forEach(name => {\n      if (hasTemplate(name, properties, this)) {\n        properties[name] = (item, index, container) => {\n          renderTemplate(this.props.componentProps[name], {\n            item: item,\n            index: index,\n            container: container\n          }, this);\n        };\n      }\n    });\n    return properties;\n  }\n\n  get restAttributes() {\n    var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded2);\n\n    return restProps;\n  }\n\n  getInstance() {\n    return this.instance;\n  }\n\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props),\n      widgetRef: this.widgetRef,\n      config: this.config,\n      properties: this.properties,\n      restAttributes: this.restAttributes\n    });\n  }\n\n}\nDomComponentWrapper.defaultProps = DomComponentWrapperProps;","map":{"version":3,"sources":["/Users/rahulsharma/node_modules/devextreme/esm/renovation/ui/common/dom_component_wrapper.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","_excluded2","createVNode","normalizeProps","InfernoEffect","InfernoComponent","renderTemplate","hasTemplate","ConfigContext","getUpdatedOptions","viewFunction","_ref","props","componentProps","className","restAttributes","widgetRef","DomComponentWrapperProps","createRef","infernoCreateRef","DomComponentWrapper","constructor","state","getInstance","bind","setupWidget","setRootElementRef","updateWidget","config","context","createEffects","templateNames","updateEffects","_this$_effects$","_effects","update","componentInstance","componentType","current","properties","instance","dispose","rootElementRef","updatedOptions","prevProps","length","beginUpdate","forEach","_ref2","path","value","option","endUpdate","_this$config","_this$props$component","valueChange","restProps","rtlEnabled","onValueChanged","_ref3","templates","name","item","index","container","_this$props","render","defaultProps"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/common/dom_component_wrapper.js)\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"valueChange\"],\r\n    _excluded2 = [\"componentProps\", \"componentType\", \"rootElementRef\", \"templateNames\"];\r\nimport {\r\n    createVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    renderTemplate,\r\n    hasTemplate\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    ConfigContext\r\n} from \"../../common/config_context\";\r\nimport {\r\n    getUpdatedOptions\r\n} from \"./utils/get_updated_options\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            componentProps: {\r\n                className: className\r\n            }\r\n        },\r\n        restAttributes: restAttributes,\r\n        widgetRef: widgetRef\r\n    } = _ref;\r\n    return normalizeProps(createVNode(1, \"div\", className, null, 1, _extends({}, restAttributes), null, widgetRef))\r\n};\r\nexport var DomComponentWrapperProps = {};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class DomComponentWrapper extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.widgetRef = infernoCreateRef();\r\n        this.getInstance = this.getInstance.bind(this);\r\n        this.setupWidget = this.setupWidget.bind(this);\r\n        this.setRootElementRef = this.setRootElementRef.bind(this);\r\n        this.updateWidget = this.updateWidget.bind(this)\r\n    }\r\n    get config() {\r\n        if (\"ConfigContext\" in this.context) {\r\n            return this.context.ConfigContext\r\n        }\r\n        return ConfigContext\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.setupWidget, []), new InfernoEffect(this.setRootElementRef, []), new InfernoEffect(this.updateWidget, [this.props.componentProps, this.config, this.props.templateNames])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$;\r\n        null === (_this$_effects$ = this._effects[2]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.componentProps, this.config, this.props.templateNames])\r\n    }\r\n    setupWidget() {\r\n        var componentInstance = new this.props.componentType(this.widgetRef.current, this.properties);\r\n        this.instance = componentInstance;\r\n        return () => {\r\n            componentInstance.dispose();\r\n            this.instance = null\r\n        }\r\n    }\r\n    setRootElementRef() {\r\n        var {\r\n            rootElementRef: rootElementRef\r\n        } = this.props;\r\n        if (rootElementRef) {\r\n            rootElementRef.current = this.widgetRef.current\r\n        }\r\n    }\r\n    updateWidget() {\r\n        var instance = this.getInstance();\r\n        if (!instance) {\r\n            return\r\n        }\r\n        var updatedOptions = getUpdatedOptions(this.prevProps || {}, this.properties);\r\n        if (updatedOptions.length) {\r\n            instance.beginUpdate();\r\n            updatedOptions.forEach(_ref2 => {\r\n                var {\r\n                    path: path,\r\n                    value: value\r\n                } = _ref2;\r\n                instance.option(path, value)\r\n            });\r\n            instance.endUpdate()\r\n        }\r\n        this.prevProps = this.properties\r\n    }\r\n    get properties() {\r\n        var _this$config;\r\n        var _this$props$component = this.props.componentProps,\r\n            {\r\n                valueChange: valueChange\r\n            } = _this$props$component,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$component, _excluded);\r\n        var properties = _extends({\r\n            rtlEnabled: !!(null !== (_this$config = this.config) && void 0 !== _this$config && _this$config.rtlEnabled)\r\n        }, restProps);\r\n        if (valueChange) {\r\n            properties.onValueChanged = _ref3 => {\r\n                var {\r\n                    value: value\r\n                } = _ref3;\r\n                return valueChange(value)\r\n            }\r\n        }\r\n        var templates = this.props.templateNames;\r\n        templates.forEach(name => {\r\n            if (hasTemplate(name, properties, this)) {\r\n                properties[name] = (item, index, container) => {\r\n                    renderTemplate(this.props.componentProps[name], {\r\n                        item: item,\r\n                        index: index,\r\n                        container: container\r\n                    }, this)\r\n                }\r\n            }\r\n        });\r\n        return properties\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded2);\r\n        return restProps\r\n    }\r\n    getInstance() {\r\n        return this.instance\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            widgetRef: this.widgetRef,\r\n            config: this.config,\r\n            properties: this.properties,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nDomComponentWrapper.defaultProps = DomComponentWrapperProps;\r\n"]},"metadata":{},"sourceType":"module"}